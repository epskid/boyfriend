; compiled by boyfriend -- riir nation!
format ELF64
public _start

section '.bss' writable
tape rb 65536

section '.text' executable
_start:
xor r8, r8

call z
o0:
cmp byte [tape + r8], 0
jz c0
call o
jmp o0
c0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
o1:
cmp byte [tape + r8], 0
jz c1
add r8, 1
and r8, 0xFFFF
o2:
cmp byte [tape + r8], 0
jz c2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2
c2:
add r8, 1
and r8, 0xFFFF
o3:
cmp byte [tape + r8], 0
jz c3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
call z
sub r8, 5
and r8, 0xFFFF
push 1
push 5
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
sub r8, 6
and r8, 0xFFFF
push 1
push 6
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3
c3:
add r8, 15
and r8, 0xFFFF
push 1
push 16
call ms
sub r8, 16
and r8, 0xFFFF
o4:
cmp byte [tape + r8], 0
jz c4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4
c4:
add r8, 1
and r8, 0xFFFF
o5:
cmp byte [tape + r8], 0
jz c5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 11
and r8, 0xFFFF
call z
sub r8, 11
and r8, 0xFFFF
push 1
push 11
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
call z
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 18
and r8, 0xFFFF
call z
sub r8, 18
and r8, 0xFFFF
push 1
push 18
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 19
and r8, 0xFFFF
call z
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 20
and r8, 0xFFFF
call z
sub r8, 20
and r8, 0xFFFF
push 1
push 20
call m
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
push 16
push 7
call m
add r8, 28
and r8, 0xFFFF
call z
sub r8, 21
and r8, 0xFFFF
push 1
push 21
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 23
and r8, 0xFFFF
call z
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
call z
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 25
and r8, 0xFFFF
call z
sub r8, 25
and r8, 0xFFFF
push 1
push 25
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
call z
sub r8, 26
and r8, 0xFFFF
push 1
push 26
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 28
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
call z
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
call z
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 31
and r8, 0xFFFF
call z
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 32
and r8, 0xFFFF
call z
sub r8, 32
and r8, 0xFFFF
push 1
push 32
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 33
and r8, 0xFFFF
call z
sub r8, 33
and r8, 0xFFFF
push 1
push 33
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 34
and r8, 0xFFFF
call z
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o6:
cmp byte [tape + r8], 0
jz c6
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o6
c6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o7:
cmp byte [tape + r8], 0
jz c7
sub r8, 2
and r8, 0xFFFF
jmp o7
c7:
add r8, 1
and r8, 0xFFFF
o8:
cmp byte [tape + r8], 0
jz c8
add r8, 1
and r8, 0xFFFF
o9:
cmp byte [tape + r8], 0
jz c9
add r8, 2
and r8, 0xFFFF
jmp o9
c9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oa:
cmp byte [tape + r8], 0
jz ca
sub r8, 2
and r8, 0xFFFF
jmp oa
ca:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8
c8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 10
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
ob:
cmp byte [tape + r8], 0
jz cb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp ob
cb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oc:
cmp byte [tape + r8], 0
jz cc
sub r8, 2
and r8, 0xFFFF
jmp oc
cc:
add r8, 1
and r8, 0xFFFF
od:
cmp byte [tape + r8], 0
jz cd
add r8, 1
and r8, 0xFFFF
oe:
cmp byte [tape + r8], 0
jz ce
add r8, 2
and r8, 0xFFFF
jmp oe
ce:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
of:
cmp byte [tape + r8], 0
jz cf
sub r8, 2
and r8, 0xFFFF
jmp of
cf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od
cd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o10:
cmp byte [tape + r8], 0
jz c10
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o10
c10:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o11:
cmp byte [tape + r8], 0
jz c11
sub r8, 2
and r8, 0xFFFF
jmp o11
c11:
add r8, 1
and r8, 0xFFFF
o12:
cmp byte [tape + r8], 0
jz c12
add r8, 1
and r8, 0xFFFF
o13:
cmp byte [tape + r8], 0
jz c13
add r8, 2
and r8, 0xFFFF
jmp o13
c13:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o14:
cmp byte [tape + r8], 0
jz c14
sub r8, 2
and r8, 0xFFFF
jmp o14
c14:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12
c12:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o15:
cmp byte [tape + r8], 0
jz c15
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o15
c15:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16:
cmp byte [tape + r8], 0
jz c16
sub r8, 2
and r8, 0xFFFF
jmp o16
c16:
add r8, 1
and r8, 0xFFFF
o17:
cmp byte [tape + r8], 0
jz c17
add r8, 1
and r8, 0xFFFF
o18:
cmp byte [tape + r8], 0
jz c18
add r8, 2
and r8, 0xFFFF
jmp o18
c18:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o19:
cmp byte [tape + r8], 0
jz c19
sub r8, 2
and r8, 0xFFFF
jmp o19
c19:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17
c17:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1a:
cmp byte [tape + r8], 0
jz c1a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1a
c1a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1b:
cmp byte [tape + r8], 0
jz c1b
sub r8, 2
and r8, 0xFFFF
jmp o1b
c1b:
add r8, 1
and r8, 0xFFFF
o1c:
cmp byte [tape + r8], 0
jz c1c
add r8, 1
and r8, 0xFFFF
o1d:
cmp byte [tape + r8], 0
jz c1d
add r8, 2
and r8, 0xFFFF
jmp o1d
c1d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1e:
cmp byte [tape + r8], 0
jz c1e
sub r8, 2
and r8, 0xFFFF
jmp o1e
c1e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c
c1c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 11
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1f:
cmp byte [tape + r8], 0
jz c1f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1f
c1f:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o20:
cmp byte [tape + r8], 0
jz c20
sub r8, 2
and r8, 0xFFFF
jmp o20
c20:
add r8, 1
and r8, 0xFFFF
o21:
cmp byte [tape + r8], 0
jz c21
add r8, 1
and r8, 0xFFFF
o22:
cmp byte [tape + r8], 0
jz c22
add r8, 2
and r8, 0xFFFF
jmp o22
c22:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o23:
cmp byte [tape + r8], 0
jz c23
sub r8, 2
and r8, 0xFFFF
jmp o23
c23:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o21
c21:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o24:
cmp byte [tape + r8], 0
jz c24
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o24
c24:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o25:
cmp byte [tape + r8], 0
jz c25
sub r8, 2
and r8, 0xFFFF
jmp o25
c25:
add r8, 1
and r8, 0xFFFF
o26:
cmp byte [tape + r8], 0
jz c26
add r8, 1
and r8, 0xFFFF
o27:
cmp byte [tape + r8], 0
jz c27
add r8, 2
and r8, 0xFFFF
jmp o27
c27:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o28:
cmp byte [tape + r8], 0
jz c28
sub r8, 2
and r8, 0xFFFF
jmp o28
c28:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o26
c26:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 10
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o29:
cmp byte [tape + r8], 0
jz c29
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o29
c29:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o2a:
cmp byte [tape + r8], 0
jz c2a
sub r8, 2
and r8, 0xFFFF
jmp o2a
c2a:
add r8, 1
and r8, 0xFFFF
o2b:
cmp byte [tape + r8], 0
jz c2b
add r8, 1
and r8, 0xFFFF
o2c:
cmp byte [tape + r8], 0
jz c2c
add r8, 2
and r8, 0xFFFF
jmp o2c
c2c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o2d:
cmp byte [tape + r8], 0
jz c2d
sub r8, 2
and r8, 0xFFFF
jmp o2d
c2d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b
c2b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o2e:
cmp byte [tape + r8], 0
jz c2e
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o2e
c2e:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o2f:
cmp byte [tape + r8], 0
jz c2f
sub r8, 2
and r8, 0xFFFF
jmp o2f
c2f:
add r8, 1
and r8, 0xFFFF
o30:
cmp byte [tape + r8], 0
jz c30
add r8, 1
and r8, 0xFFFF
o31:
cmp byte [tape + r8], 0
jz c31
add r8, 2
and r8, 0xFFFF
jmp o31
c31:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o32:
cmp byte [tape + r8], 0
jz c32
sub r8, 2
and r8, 0xFFFF
jmp o32
c32:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o30
c30:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o33:
cmp byte [tape + r8], 0
jz c33
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o33
c33:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o34:
cmp byte [tape + r8], 0
jz c34
sub r8, 2
and r8, 0xFFFF
jmp o34
c34:
add r8, 1
and r8, 0xFFFF
o35:
cmp byte [tape + r8], 0
jz c35
add r8, 1
and r8, 0xFFFF
o36:
cmp byte [tape + r8], 0
jz c36
add r8, 2
and r8, 0xFFFF
jmp o36
c36:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o37:
cmp byte [tape + r8], 0
jz c37
sub r8, 2
and r8, 0xFFFF
jmp o37
c37:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o35
c35:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 13
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o38:
cmp byte [tape + r8], 0
jz c38
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o38
c38:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o39:
cmp byte [tape + r8], 0
jz c39
sub r8, 2
and r8, 0xFFFF
jmp o39
c39:
add r8, 1
and r8, 0xFFFF
o3a:
cmp byte [tape + r8], 0
jz c3a
add r8, 1
and r8, 0xFFFF
o3b:
cmp byte [tape + r8], 0
jz c3b
add r8, 2
and r8, 0xFFFF
jmp o3b
c3b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o3c:
cmp byte [tape + r8], 0
jz c3c
sub r8, 2
and r8, 0xFFFF
jmp o3c
c3c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a
c3a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 11
and r8, 0xFFFF
call z
sub r8, 11
and r8, 0xFFFF
push 1
push 11
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 60
and r8, 0xFFFF
call z
sub r8, 60
and r8, 0xFFFF
push 1
push 60
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 59
and r8, 0xFFFF
call z
sub r8, 59
and r8, 0xFFFF
push 1
push 59
call m
add r8, 60
and r8, 0xFFFF
o3d:
cmp byte [tape + r8], 0
jz c3d
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o3d
c3d:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o3e:
cmp byte [tape + r8], 0
jz c3e
sub r8, 2
and r8, 0xFFFF
jmp o3e
c3e:
add r8, 1
and r8, 0xFFFF
o3f:
cmp byte [tape + r8], 0
jz c3f
add r8, 1
and r8, 0xFFFF
o40:
cmp byte [tape + r8], 0
jz c40
add r8, 2
and r8, 0xFFFF
jmp o40
c40:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o41:
cmp byte [tape + r8], 0
jz c41
sub r8, 2
and r8, 0xFFFF
jmp o41
c41:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f
c3f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 67
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 60
and r8, 0xFFFF
call z
sub r8, 60
and r8, 0xFFFF
push 1
push 60
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 59
and r8, 0xFFFF
call z
sub r8, 59
and r8, 0xFFFF
push 1
push 59
call m
add r8, 60
and r8, 0xFFFF
o42:
cmp byte [tape + r8], 0
jz c42
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o42
c42:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o43:
cmp byte [tape + r8], 0
jz c43
sub r8, 2
and r8, 0xFFFF
jmp o43
c43:
add r8, 1
and r8, 0xFFFF
o44:
cmp byte [tape + r8], 0
jz c44
add r8, 1
and r8, 0xFFFF
o45:
cmp byte [tape + r8], 0
jz c45
add r8, 2
and r8, 0xFFFF
jmp o45
c45:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o46:
cmp byte [tape + r8], 0
jz c46
sub r8, 2
and r8, 0xFFFF
jmp o46
c46:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o44
c44:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 67
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 60
and r8, 0xFFFF
call z
sub r8, 60
and r8, 0xFFFF
push 1
push 60
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 59
and r8, 0xFFFF
call z
sub r8, 59
and r8, 0xFFFF
push 1
push 59
call m
add r8, 60
and r8, 0xFFFF
o47:
cmp byte [tape + r8], 0
jz c47
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o47
c47:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o48:
cmp byte [tape + r8], 0
jz c48
sub r8, 2
and r8, 0xFFFF
jmp o48
c48:
add r8, 1
and r8, 0xFFFF
o49:
cmp byte [tape + r8], 0
jz c49
add r8, 1
and r8, 0xFFFF
o4a:
cmp byte [tape + r8], 0
jz c4a
add r8, 2
and r8, 0xFFFF
jmp o4a
c4a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o4b:
cmp byte [tape + r8], 0
jz c4b
sub r8, 2
and r8, 0xFFFF
jmp o4b
c4b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o49
c49:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 67
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 60
and r8, 0xFFFF
call z
sub r8, 60
and r8, 0xFFFF
push 1
push 60
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 59
and r8, 0xFFFF
call z
sub r8, 59
and r8, 0xFFFF
push 1
push 59
call m
add r8, 60
and r8, 0xFFFF
o4c:
cmp byte [tape + r8], 0
jz c4c
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o4c
c4c:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o4d:
cmp byte [tape + r8], 0
jz c4d
sub r8, 2
and r8, 0xFFFF
jmp o4d
c4d:
add r8, 1
and r8, 0xFFFF
o4e:
cmp byte [tape + r8], 0
jz c4e
add r8, 1
and r8, 0xFFFF
o4f:
cmp byte [tape + r8], 0
jz c4f
add r8, 2
and r8, 0xFFFF
jmp o4f
c4f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o50:
cmp byte [tape + r8], 0
jz c50
sub r8, 2
and r8, 0xFFFF
jmp o50
c50:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e
c4e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 67
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 60
and r8, 0xFFFF
call z
sub r8, 60
and r8, 0xFFFF
push 1
push 60
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 59
and r8, 0xFFFF
call z
sub r8, 59
and r8, 0xFFFF
push 1
push 59
call m
add r8, 60
and r8, 0xFFFF
o51:
cmp byte [tape + r8], 0
jz c51
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o51
c51:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o52:
cmp byte [tape + r8], 0
jz c52
sub r8, 2
and r8, 0xFFFF
jmp o52
c52:
add r8, 1
and r8, 0xFFFF
o53:
cmp byte [tape + r8], 0
jz c53
add r8, 1
and r8, 0xFFFF
o54:
cmp byte [tape + r8], 0
jz c54
add r8, 2
and r8, 0xFFFF
jmp o54
c54:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o55:
cmp byte [tape + r8], 0
jz c55
sub r8, 2
and r8, 0xFFFF
jmp o55
c55:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o53
c53:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 67
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 60
and r8, 0xFFFF
call z
sub r8, 60
and r8, 0xFFFF
push 1
push 60
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 59
and r8, 0xFFFF
call z
sub r8, 59
and r8, 0xFFFF
push 1
push 59
call m
add r8, 60
and r8, 0xFFFF
o56:
cmp byte [tape + r8], 0
jz c56
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o56
c56:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o57:
cmp byte [tape + r8], 0
jz c57
sub r8, 2
and r8, 0xFFFF
jmp o57
c57:
add r8, 1
and r8, 0xFFFF
o58:
cmp byte [tape + r8], 0
jz c58
add r8, 1
and r8, 0xFFFF
o59:
cmp byte [tape + r8], 0
jz c59
add r8, 2
and r8, 0xFFFF
jmp o59
c59:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o5a:
cmp byte [tape + r8], 0
jz c5a
sub r8, 2
and r8, 0xFFFF
jmp o5a
c5a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o58
c58:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 67
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 60
and r8, 0xFFFF
call z
sub r8, 60
and r8, 0xFFFF
push 1
push 60
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 59
and r8, 0xFFFF
call z
sub r8, 59
and r8, 0xFFFF
push 1
push 59
call m
add r8, 60
and r8, 0xFFFF
o5b:
cmp byte [tape + r8], 0
jz c5b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o5b
c5b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o5c:
cmp byte [tape + r8], 0
jz c5c
sub r8, 2
and r8, 0xFFFF
jmp o5c
c5c:
add r8, 1
and r8, 0xFFFF
o5d:
cmp byte [tape + r8], 0
jz c5d
add r8, 1
and r8, 0xFFFF
o5e:
cmp byte [tape + r8], 0
jz c5e
add r8, 2
and r8, 0xFFFF
jmp o5e
c5e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o5f:
cmp byte [tape + r8], 0
jz c5f
sub r8, 2
and r8, 0xFFFF
jmp o5f
c5f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5d
c5d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 67
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o60:
cmp byte [tape + r8], 0
jz c60
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o60
c60:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o61:
cmp byte [tape + r8], 0
jz c61
sub r8, 2
and r8, 0xFFFF
jmp o61
c61:
add r8, 1
and r8, 0xFFFF
o62:
cmp byte [tape + r8], 0
jz c62
add r8, 1
and r8, 0xFFFF
o63:
cmp byte [tape + r8], 0
jz c63
add r8, 2
and r8, 0xFFFF
jmp o63
c63:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o64:
cmp byte [tape + r8], 0
jz c64
sub r8, 2
and r8, 0xFFFF
jmp o64
c64:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o62
c62:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o65:
cmp byte [tape + r8], 0
jz c65
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o65
c65:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o66:
cmp byte [tape + r8], 0
jz c66
sub r8, 2
and r8, 0xFFFF
jmp o66
c66:
add r8, 1
and r8, 0xFFFF
o67:
cmp byte [tape + r8], 0
jz c67
add r8, 1
and r8, 0xFFFF
o68:
cmp byte [tape + r8], 0
jz c68
add r8, 2
and r8, 0xFFFF
jmp o68
c68:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o69:
cmp byte [tape + r8], 0
jz c69
sub r8, 2
and r8, 0xFFFF
jmp o69
c69:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o67
c67:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o6a:
cmp byte [tape + r8], 0
jz c6a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o6a
c6a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o6b:
cmp byte [tape + r8], 0
jz c6b
sub r8, 2
and r8, 0xFFFF
jmp o6b
c6b:
add r8, 1
and r8, 0xFFFF
o6c:
cmp byte [tape + r8], 0
jz c6c
add r8, 1
and r8, 0xFFFF
o6d:
cmp byte [tape + r8], 0
jz c6d
add r8, 2
and r8, 0xFFFF
jmp o6d
c6d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o6e:
cmp byte [tape + r8], 0
jz c6e
sub r8, 2
and r8, 0xFFFF
jmp o6e
c6e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c
c6c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o6f:
cmp byte [tape + r8], 0
jz c6f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o6f
c6f:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o70:
cmp byte [tape + r8], 0
jz c70
sub r8, 2
and r8, 0xFFFF
jmp o70
c70:
add r8, 1
and r8, 0xFFFF
o71:
cmp byte [tape + r8], 0
jz c71
add r8, 1
and r8, 0xFFFF
o72:
cmp byte [tape + r8], 0
jz c72
add r8, 2
and r8, 0xFFFF
jmp o72
c72:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o73:
cmp byte [tape + r8], 0
jz c73
sub r8, 2
and r8, 0xFFFF
jmp o73
c73:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o71
c71:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o74:
cmp byte [tape + r8], 0
jz c74
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o74
c74:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o75:
cmp byte [tape + r8], 0
jz c75
sub r8, 2
and r8, 0xFFFF
jmp o75
c75:
add r8, 1
and r8, 0xFFFF
o76:
cmp byte [tape + r8], 0
jz c76
add r8, 1
and r8, 0xFFFF
o77:
cmp byte [tape + r8], 0
jz c77
add r8, 2
and r8, 0xFFFF
jmp o77
c77:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o78:
cmp byte [tape + r8], 0
jz c78
sub r8, 2
and r8, 0xFFFF
jmp o78
c78:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o76
c76:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o79:
cmp byte [tape + r8], 0
jz c79
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o79
c79:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o7a:
cmp byte [tape + r8], 0
jz c7a
sub r8, 2
and r8, 0xFFFF
jmp o7a
c7a:
add r8, 1
and r8, 0xFFFF
o7b:
cmp byte [tape + r8], 0
jz c7b
add r8, 1
and r8, 0xFFFF
o7c:
cmp byte [tape + r8], 0
jz c7c
add r8, 2
and r8, 0xFFFF
jmp o7c
c7c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o7d:
cmp byte [tape + r8], 0
jz c7d
sub r8, 2
and r8, 0xFFFF
jmp o7d
c7d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b
c7b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o7e:
cmp byte [tape + r8], 0
jz c7e
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o7e
c7e:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o7f:
cmp byte [tape + r8], 0
jz c7f
sub r8, 2
and r8, 0xFFFF
jmp o7f
c7f:
add r8, 1
and r8, 0xFFFF
o80:
cmp byte [tape + r8], 0
jz c80
add r8, 1
and r8, 0xFFFF
o81:
cmp byte [tape + r8], 0
jz c81
add r8, 2
and r8, 0xFFFF
jmp o81
c81:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o82:
cmp byte [tape + r8], 0
jz c82
sub r8, 2
and r8, 0xFFFF
jmp o82
c82:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o80
c80:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o83:
cmp byte [tape + r8], 0
jz c83
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o83
c83:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o84:
cmp byte [tape + r8], 0
jz c84
sub r8, 2
and r8, 0xFFFF
jmp o84
c84:
add r8, 1
and r8, 0xFFFF
o85:
cmp byte [tape + r8], 0
jz c85
add r8, 1
and r8, 0xFFFF
o86:
cmp byte [tape + r8], 0
jz c86
add r8, 2
and r8, 0xFFFF
jmp o86
c86:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o87:
cmp byte [tape + r8], 0
jz c87
sub r8, 2
and r8, 0xFFFF
jmp o87
c87:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o85
c85:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o88:
cmp byte [tape + r8], 0
jz c88
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o88
c88:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o89:
cmp byte [tape + r8], 0
jz c89
sub r8, 2
and r8, 0xFFFF
jmp o89
c89:
add r8, 1
and r8, 0xFFFF
o8a:
cmp byte [tape + r8], 0
jz c8a
add r8, 1
and r8, 0xFFFF
o8b:
cmp byte [tape + r8], 0
jz c8b
add r8, 2
and r8, 0xFFFF
jmp o8b
c8b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o8c:
cmp byte [tape + r8], 0
jz c8c
sub r8, 2
and r8, 0xFFFF
jmp o8c
c8c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8a
c8a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o8d:
cmp byte [tape + r8], 0
jz c8d
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o8d
c8d:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o8e:
cmp byte [tape + r8], 0
jz c8e
sub r8, 2
and r8, 0xFFFF
jmp o8e
c8e:
add r8, 1
and r8, 0xFFFF
o8f:
cmp byte [tape + r8], 0
jz c8f
add r8, 1
and r8, 0xFFFF
o90:
cmp byte [tape + r8], 0
jz c90
add r8, 2
and r8, 0xFFFF
jmp o90
c90:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o91:
cmp byte [tape + r8], 0
jz c91
sub r8, 2
and r8, 0xFFFF
jmp o91
c91:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8f
c8f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
add byte [tape + r8], 15
o92:
cmp byte [tape + r8], 0
jz c92
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o92
c92:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
o93:
cmp byte [tape + r8], 0
jz c93
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o93
c93:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o94:
cmp byte [tape + r8], 0
jz c94
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o94
c94:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o95:
cmp byte [tape + r8], 0
jz c95
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o95
c95:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o96:
cmp byte [tape + r8], 0
jz c96
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o96
c96:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
o97:
cmp byte [tape + r8], 0
jz c97
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 11
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o97
c97:
sub r8, 11
and r8, 0xFFFF
push 1
push 11
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o98:
cmp byte [tape + r8], 0
jz c98
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o98
c98:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o99:
cmp byte [tape + r8], 0
jz c99
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o99
c99:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o9a:
cmp byte [tape + r8], 0
jz c9a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a
c9a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o9b:
cmp byte [tape + r8], 0
jz c9b
add r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 113
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o9b
c9b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5
c5:
sub r8, 1
and r8, 0xFFFF
o9c:
cmp byte [tape + r8], 0
jz c9c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c
c9c:
add r8, 1
and r8, 0xFFFF
o9d:
cmp byte [tape + r8], 0
jz c9d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
call z
sub r8, 5
and r8, 0xFFFF
push 1
push 5
call m
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 16
o9e:
cmp byte [tape + r8], 0
jz c9e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e
c9e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 15
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call i
add r8, 105
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
call z
add r8, 105
and r8, 0xFFFF
o9f:
cmp byte [tape + r8], 0
jz c9f
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f
c9f:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa0:
cmp byte [tape + r8], 0
jz ca0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa0
ca0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa1:
cmp byte [tape + r8], 0
jz ca1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa1
ca1:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
oa2:
cmp byte [tape + r8], 0
jz ca2
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa2
ca2:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa3:
cmp byte [tape + r8], 0
jz ca3
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa3
ca3:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oa4:
cmp byte [tape + r8], 0
jz ca4
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oa4
ca4:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oa5:
cmp byte [tape + r8], 0
jz ca5
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oa5
ca5:
add r8, 8
and r8, 0xFFFF
oa6:
cmp byte [tape + r8], 0
jz ca6
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa6
ca6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oa7:
cmp byte [tape + r8], 0
jz ca7
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oa7
ca7:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa8:
cmp byte [tape + r8], 0
jz ca8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa8
ca8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa9:
cmp byte [tape + r8], 0
jz ca9
add r8, 106
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 115
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa9
ca9:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d
c9d:
sub r8, 1
and r8, 0xFFFF
oaa:
cmp byte [tape + r8], 0
jz caa
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa
caa:
add r8, 1
and r8, 0xFFFF
oab:
cmp byte [tape + r8], 0
jz cab
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 5
and r8, 0xFFFF
call z
sub r8, 5
and r8, 0xFFFF
push 1
push 5
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab
cab:
add r8, 114
and r8, 0xFFFF
push 1
push 115
call ms
sub r8, 115
and r8, 0xFFFF
oac:
cmp byte [tape + r8], 0
jz cac
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac
cac:
add r8, 1
and r8, 0xFFFF
oad:
cmp byte [tape + r8], 0
jz cad
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
oae:
cmp byte [tape + r8], 0
jz cae
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oae
cae:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oaf:
cmp byte [tape + r8], 0
jz caf
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf
caf:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ob0:
cmp byte [tape + r8], 0
jz cb0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ob0
cb0:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
ob1:
cmp byte [tape + r8], 0
jz cb1
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob1
cb1:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 6
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ob2:
cmp byte [tape + r8], 0
jz cb2
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob2
cb2:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
ob3:
cmp byte [tape + r8], 0
jz cb3
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ob3
cb3:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
ob4:
cmp byte [tape + r8], 0
jz cb4
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ob4
cb4:
add r8, 8
and r8, 0xFFFF
ob5:
cmp byte [tape + r8], 0
jz cb5
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob5
cb5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
ob6:
cmp byte [tape + r8], 0
jz cb6
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ob6
cb6:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ob7:
cmp byte [tape + r8], 0
jz cb7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob7
cb7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ob8:
cmp byte [tape + r8], 0
jz cb8
add r8, 107
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 116
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ob8
cb8:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad
cad:
sub r8, 1
and r8, 0xFFFF
ob9:
cmp byte [tape + r8], 0
jz cb9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob9
cb9:
add r8, 1
and r8, 0xFFFF
oba:
cmp byte [tape + r8], 0
jz cba
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
call z
sub r8, 5
and r8, 0xFFFF
push 1
push 5
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba
cba:
add r8, 115
and r8, 0xFFFF
push 1
push 116
call ms
sub r8, 116
and r8, 0xFFFF
obb:
cmp byte [tape + r8], 0
jz cbb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb
cbb:
add r8, 1
and r8, 0xFFFF
obc:
cmp byte [tape + r8], 0
jz cbc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
obd:
cmp byte [tape + r8], 0
jz cbd
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd
cbd:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 1
and r8, 0xFFFF
obe:
cmp byte [tape + r8], 0
jz cbe
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe
cbe:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
obf:
cmp byte [tape + r8], 0
jz cbf
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp obf
cbf:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
oc0:
cmp byte [tape + r8], 0
jz cc0
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc0
cc0:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
add r8, 1
and r8, 0xFFFF
oc1:
cmp byte [tape + r8], 0
jz cc1
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc1
cc1:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oc2:
cmp byte [tape + r8], 0
jz cc2
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc2
cc2:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oc3:
cmp byte [tape + r8], 0
jz cc3
call z
add r8, 8
and r8, 0xFFFF
oc4:
cmp byte [tape + r8], 0
jz cc4
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc4
cc4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oc5:
cmp byte [tape + r8], 0
jz cc5
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc5
cc5:
jmp oc3
cc3:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oc6:
cmp byte [tape + r8], 0
jz cc6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc6
cc6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oc7:
cmp byte [tape + r8], 0
jz cc7
add r8, 108
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oc7
cc7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obc
cbc:
add r8, 117
and r8, 0xFFFF
push 1
push 118
call ms
sub r8, 118
and r8, 0xFFFF
oc8:
cmp byte [tape + r8], 0
jz cc8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc8
cc8:
add r8, 1
and r8, 0xFFFF
oc9:
cmp byte [tape + r8], 0
jz cc9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call i
add r8, 110
and r8, 0xFFFF
call z
sub r8, 110
and r8, 0xFFFF
push 1
push 110
call m
call z
add r8, 110
and r8, 0xFFFF
oca:
cmp byte [tape + r8], 0
jz cca
sub r8, 110
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oca
cca:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ocb:
cmp byte [tape + r8], 0
jz ccb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocb
ccb:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
occ:
cmp byte [tape + r8], 0
jz ccc
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp occ
ccc:
add r8, 7
and r8, 0xFFFF
call z
add r8, 109
and r8, 0xFFFF
ocd:
cmp byte [tape + r8], 0
jz ccd
sub r8, 109
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd
ccd:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oce:
cmp byte [tape + r8], 0
jz cce
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce
cce:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
ocf:
cmp byte [tape + r8], 0
jz ccf
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ocf
ccf:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
od0:
cmp byte [tape + r8], 0
jz cd0
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od0
cd0:
add r8, 8
and r8, 0xFFFF
od1:
cmp byte [tape + r8], 0
jz cd1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od1
cd1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
od2:
cmp byte [tape + r8], 0
jz cd2
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od2
cd2:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
od3:
cmp byte [tape + r8], 0
jz cd3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od3
cd3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
od4:
cmp byte [tape + r8], 0
jz cd4
add r8, 109
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 118
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp od4
cd4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc9
cc9:
add r8, 116
and r8, 0xFFFF
push 1
push 117
call ms
sub r8, 4
and r8, 0xFFFF
push 1
push 113
call ms
sub r8, 113
and r8, 0xFFFF
od5:
cmp byte [tape + r8], 0
jz cd5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od5
cd5:
add r8, 1
and r8, 0xFFFF
od6:
cmp byte [tape + r8], 0
jz cd6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
od7:
cmp byte [tape + r8], 0
jz cd7
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od7
cd7:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od8:
cmp byte [tape + r8], 0
jz cd8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od8
cd8:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
od9:
cmp byte [tape + r8], 0
jz cd9
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp od9
cd9:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oda:
cmp byte [tape + r8], 0
jz cda
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oda
cda:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
odb:
cmp byte [tape + r8], 0
jz cdb
add r8, 111
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 120
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp odb
cdb:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od6
cd6:
sub r8, 1
and r8, 0xFFFF
odc:
cmp byte [tape + r8], 0
jz cdc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odc
cdc:
add r8, 1
and r8, 0xFFFF
odd:
cmp byte [tape + r8], 0
jz cdd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 25
and r8, 0xFFFF
call z
sub r8, 25
and r8, 0xFFFF
push 1
push 25
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odd
cdd:
add r8, 119
and r8, 0xFFFF
push 1
push 120
call ms
add r8, 1
and r8, 0xFFFF
push 1
push 121
call ms
sub r8, 121
and r8, 0xFFFF
ode:
cmp byte [tape + r8], 0
jz cde
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode
cde:
add r8, 1
and r8, 0xFFFF
odf:
cmp byte [tape + r8], 0
jz cdf
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
oe0:
cmp byte [tape + r8], 0
jz ce0
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe0
ce0:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe1:
cmp byte [tape + r8], 0
jz ce1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe1
ce1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oe2:
cmp byte [tape + r8], 0
jz ce2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oe2
ce2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oe3:
cmp byte [tape + r8], 0
jz ce3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe3
ce3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oe4:
cmp byte [tape + r8], 0
jz ce4
add r8, 113
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 122
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oe4
ce4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odf
cdf:
sub r8, 1
and r8, 0xFFFF
oe5:
cmp byte [tape + r8], 0
jz ce5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe5
ce5:
add r8, 1
and r8, 0xFFFF
oe6:
cmp byte [tape + r8], 0
jz ce6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 18
and r8, 0xFFFF
call z
sub r8, 18
and r8, 0xFFFF
push 1
push 18
call m
call z
add r8, 17
and r8, 0xFFFF
oe7:
cmp byte [tape + r8], 0
jz ce7
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe7
ce7:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe8:
cmp byte [tape + r8], 0
jz ce8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe8
ce8:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oe9:
cmp byte [tape + r8], 0
jz ce9
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oe9
ce9:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
oea:
cmp byte [tape + r8], 0
jz cea
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oea
cea:
add r8, 1
and r8, 0xFFFF
oeb:
cmp byte [tape + r8], 0
jz ceb
sub r8, 3
and r8, 0xFFFF
oec:
cmp byte [tape + r8], 0
jz cec
sub r8, 2
and r8, 0xFFFF
jmp oec
cec:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oed:
cmp byte [tape + r8], 0
jz ced
add r8, 2
and r8, 0xFFFF
jmp oed
ced:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb
ceb:
sub r8, 3
and r8, 0xFFFF
oee:
cmp byte [tape + r8], 0
jz cee
sub r8, 2
and r8, 0xFFFF
jmp oee
cee:
add r8, 1
and r8, 0xFFFF
oef:
cmp byte [tape + r8], 0
jz cef
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef
cef:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
of0:
cmp byte [tape + r8], 0
jz cf0
add r8, 2
and r8, 0xFFFF
jmp of0
cf0:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
of1:
cmp byte [tape + r8], 0
jz cf1
sub r8, 2
and r8, 0xFFFF
jmp of1
cf1:
add r8, 1
and r8, 0xFFFF
of2:
cmp byte [tape + r8], 0
jz cf2
add r8, 1
and r8, 0xFFFF
of3:
cmp byte [tape + r8], 0
jz cf3
add r8, 2
and r8, 0xFFFF
jmp of3
cf3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
of4:
cmp byte [tape + r8], 0
jz cf4
sub r8, 2
and r8, 0xFFFF
jmp of4
cf4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of2
cf2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of5:
cmp byte [tape + r8], 0
jz cf5
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of5
cf5:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
of6:
cmp byte [tape + r8], 0
jz cf6
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of6
cf6:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
of7:
cmp byte [tape + r8], 0
jz cf7
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp of7
cf7:
add r8, 1
and r8, 0xFFFF
of8:
cmp byte [tape + r8], 0
jz cf8
sub r8, 3
and r8, 0xFFFF
of9:
cmp byte [tape + r8], 0
jz cf9
sub r8, 2
and r8, 0xFFFF
jmp of9
cf9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofa:
cmp byte [tape + r8], 0
jz cfa
add r8, 2
and r8, 0xFFFF
jmp ofa
cfa:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of8
cf8:
sub r8, 3
and r8, 0xFFFF
ofb:
cmp byte [tape + r8], 0
jz cfb
sub r8, 2
and r8, 0xFFFF
jmp ofb
cfb:
add r8, 1
and r8, 0xFFFF
ofc:
cmp byte [tape + r8], 0
jz cfc
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofc
cfc:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
ofd:
cmp byte [tape + r8], 0
jz cfd
add r8, 2
and r8, 0xFFFF
jmp ofd
cfd:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
ofe:
cmp byte [tape + r8], 0
jz cfe
sub r8, 2
and r8, 0xFFFF
jmp ofe
cfe:
add r8, 1
and r8, 0xFFFF
off:
cmp byte [tape + r8], 0
jz cff
add r8, 1
and r8, 0xFFFF
o100:
cmp byte [tape + r8], 0
jz c100
add r8, 2
and r8, 0xFFFF
jmp o100
c100:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o101:
cmp byte [tape + r8], 0
jz c101
sub r8, 2
and r8, 0xFFFF
jmp o101
c101:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp off
cff:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 34
and r8, 0xFFFF
call z
add r8, 25
and r8, 0xFFFF
o102:
cmp byte [tape + r8], 0
jz c102
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o102
c102:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o103:
cmp byte [tape + r8], 0
jz c103
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o103
c103:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o104:
cmp byte [tape + r8], 0
jz c104
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o104
c104:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o105:
cmp byte [tape + r8], 0
jz c105
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o105
c105:
add r8, 9
and r8, 0xFFFF
o106:
cmp byte [tape + r8], 0
jz c106
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o106
c106:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o107:
cmp byte [tape + r8], 0
jz c107
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o107
c107:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o108:
cmp byte [tape + r8], 0
jz c108
call z
add r8, 8
and r8, 0xFFFF
o109:
cmp byte [tape + r8], 0
jz c109
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o109
c109:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o10a:
cmp byte [tape + r8], 0
jz c10a
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o10a
c10a:
jmp o108
c108:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o10b:
cmp byte [tape + r8], 0
jz c10b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10b
c10b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o10c:
cmp byte [tape + r8], 0
jz c10c
add r8, 114
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 123
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o10c
c10c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe6
ce6:
sub r8, 1
and r8, 0xFFFF
o10d:
cmp byte [tape + r8], 0
jz c10d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d
c10d:
add r8, 1
and r8, 0xFFFF
o10e:
cmp byte [tape + r8], 0
jz c10e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 18
and r8, 0xFFFF
call z
sub r8, 18
and r8, 0xFFFF
push 1
push 18
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10e
c10e:
add r8, 122
and r8, 0xFFFF
push 1
push 123
call ms
sub r8, 123
and r8, 0xFFFF
o10f:
cmp byte [tape + r8], 0
jz c10f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10f
c10f:
add r8, 1
and r8, 0xFFFF
o110:
cmp byte [tape + r8], 0
jz c110
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o111:
cmp byte [tape + r8], 0
jz c111
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o111
c111:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o112:
cmp byte [tape + r8], 0
jz c112
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o112
c112:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o113:
cmp byte [tape + r8], 0
jz c113
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o113
c113:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o114:
cmp byte [tape + r8], 0
jz c114
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o114
c114:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o115:
cmp byte [tape + r8], 0
jz c115
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o115
c115:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o116:
cmp byte [tape + r8], 0
jz c116
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o116
c116:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o117:
cmp byte [tape + r8], 0
jz c117
call z
add r8, 8
and r8, 0xFFFF
o118:
cmp byte [tape + r8], 0
jz c118
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o118
c118:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o119:
cmp byte [tape + r8], 0
jz c119
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o119
c119:
jmp o117
c117:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o11a:
cmp byte [tape + r8], 0
jz c11a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a
c11a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o11b:
cmp byte [tape + r8], 0
jz c11b
add r8, 115
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 124
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o11b
c11b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o110
c110:
sub r8, 1
and r8, 0xFFFF
o11c:
cmp byte [tape + r8], 0
jz c11c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11c
c11c:
add r8, 1
and r8, 0xFFFF
o11d:
cmp byte [tape + r8], 0
jz c11d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 18
and r8, 0xFFFF
call z
sub r8, 18
and r8, 0xFFFF
push 1
push 18
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11d
c11d:
add r8, 123
and r8, 0xFFFF
push 1
push 124
call ms
sub r8, 124
and r8, 0xFFFF
o11e:
cmp byte [tape + r8], 0
jz c11e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11e
c11e:
add r8, 1
and r8, 0xFFFF
o11f:
cmp byte [tape + r8], 0
jz c11f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
o120:
cmp byte [tape + r8], 0
jz c120
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o120
c120:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o121:
cmp byte [tape + r8], 0
jz c121
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o121
c121:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o122:
cmp byte [tape + r8], 0
jz c122
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o122
c122:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o123:
cmp byte [tape + r8], 0
jz c123
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o123
c123:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o124:
cmp byte [tape + r8], 0
jz c124
add r8, 116
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 125
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o124
c124:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11f
c11f:
sub r8, 1
and r8, 0xFFFF
o125:
cmp byte [tape + r8], 0
jz c125
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o125
c125:
add r8, 1
and r8, 0xFFFF
o126:
cmp byte [tape + r8], 0
jz c126
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o127:
cmp byte [tape + r8], 0
jz c127
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o127
c127:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o128:
cmp byte [tape + r8], 0
jz c128
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o128
c128:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o129:
cmp byte [tape + r8], 0
jz c129
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o129
c129:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12a:
cmp byte [tape + r8], 0
jz c12a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a
c12a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12b:
cmp byte [tape + r8], 0
jz c12b
add r8, 117
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 126
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12b
c12b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o126
c126:
sub r8, 1
and r8, 0xFFFF
o12c:
cmp byte [tape + r8], 0
jz c12c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c
c12c:
add r8, 1
and r8, 0xFFFF
o12d:
cmp byte [tape + r8], 0
jz c12d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o12e:
cmp byte [tape + r8], 0
jz c12e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12e
c12e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o12f:
cmp byte [tape + r8], 0
jz c12f
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f
c12f:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o130:
cmp byte [tape + r8], 0
jz c130
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o130
c130:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o131:
cmp byte [tape + r8], 0
jz c131
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o131
c131:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o132:
cmp byte [tape + r8], 0
jz c132
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o132
c132:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o133:
cmp byte [tape + r8], 0
jz c133
add r8, 118
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 127
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o133
c133:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12d
c12d:
sub r8, 1
and r8, 0xFFFF
o134:
cmp byte [tape + r8], 0
jz c134
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o134
c134:
add r8, 1
and r8, 0xFFFF
o135:
cmp byte [tape + r8], 0
jz c135
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o136:
cmp byte [tape + r8], 0
jz c136
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o136
c136:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o135
c135:
add r8, 126
and r8, 0xFFFF
push 1
push 127
call ms
sub r8, 127
and r8, 0xFFFF
o137:
cmp byte [tape + r8], 0
jz c137
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o137
c137:
add r8, 1
and r8, 0xFFFF
o138:
cmp byte [tape + r8], 0
jz c138
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 10
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o138
c138:
add r8, 125
and r8, 0xFFFF
push 1
push 126
call ms
sub r8, 126
and r8, 0xFFFF
o139:
cmp byte [tape + r8], 0
jz c139
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o139
c139:
add r8, 1
and r8, 0xFFFF
o13a:
cmp byte [tape + r8], 0
jz c13a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o13b:
cmp byte [tape + r8], 0
jz c13b
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13b
c13b:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13c:
cmp byte [tape + r8], 0
jz c13c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c
c13c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o13d:
cmp byte [tape + r8], 0
jz c13d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o13d
c13d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o13e:
cmp byte [tape + r8], 0
jz c13e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13e
c13e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o13f:
cmp byte [tape + r8], 0
jz c13f
add r8, 119
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 128
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o13f
c13f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13a
c13a:
sub r8, 1
and r8, 0xFFFF
o140:
cmp byte [tape + r8], 0
jz c140
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o140
c140:
add r8, 1
and r8, 0xFFFF
o141:
cmp byte [tape + r8], 0
jz c141
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o142:
cmp byte [tape + r8], 0
jz c142
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o142
c142:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o143:
cmp byte [tape + r8], 0
jz c143
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o143
c143:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o144:
cmp byte [tape + r8], 0
jz c144
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o144
c144:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o145:
cmp byte [tape + r8], 0
jz c145
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o145
c145:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o146:
cmp byte [tape + r8], 0
jz c146
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o146
c146:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o147:
cmp byte [tape + r8], 0
jz c147
add r8, 120
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 129
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o147
c147:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o141
c141:
sub r8, 1
and r8, 0xFFFF
o148:
cmp byte [tape + r8], 0
jz c148
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o148
c148:
add r8, 1
and r8, 0xFFFF
o149:
cmp byte [tape + r8], 0
jz c149
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o14a:
cmp byte [tape + r8], 0
jz c14a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14a
c14a:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o149
c149:
add r8, 128
and r8, 0xFFFF
push 1
push 129
call ms
sub r8, 129
and r8, 0xFFFF
o14b:
cmp byte [tape + r8], 0
jz c14b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b
c14b:
add r8, 1
and r8, 0xFFFF
o14c:
cmp byte [tape + r8], 0
jz c14c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14c
c14c:
add r8, 127
and r8, 0xFFFF
push 1
push 128
call ms
sub r8, 128
and r8, 0xFFFF
o14d:
cmp byte [tape + r8], 0
jz c14d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14d
c14d:
add r8, 1
and r8, 0xFFFF
o14e:
cmp byte [tape + r8], 0
jz c14e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o14f:
cmp byte [tape + r8], 0
jz c14f
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f
c14f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o150:
cmp byte [tape + r8], 0
jz c150
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o150
c150:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o151:
cmp byte [tape + r8], 0
jz c151
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o151
c151:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o152:
cmp byte [tape + r8], 0
jz c152
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o152
c152:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o153:
cmp byte [tape + r8], 0
jz c153
add r8, 121
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 130
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o153
c153:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14e
c14e:
sub r8, 1
and r8, 0xFFFF
o154:
cmp byte [tape + r8], 0
jz c154
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o154
c154:
add r8, 1
and r8, 0xFFFF
o155:
cmp byte [tape + r8], 0
jz c155
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o156:
cmp byte [tape + r8], 0
jz c156
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o156
c156:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o157:
cmp byte [tape + r8], 0
jz c157
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o157
c157:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o158:
cmp byte [tape + r8], 0
jz c158
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o158
c158:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o159:
cmp byte [tape + r8], 0
jz c159
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o159
c159:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o15a:
cmp byte [tape + r8], 0
jz c15a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o15a
c15a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o15b:
cmp byte [tape + r8], 0
jz c15b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15b
c15b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o15c:
cmp byte [tape + r8], 0
jz c15c
add r8, 122
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 131
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o15c
c15c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o155
c155:
sub r8, 1
and r8, 0xFFFF
o15d:
cmp byte [tape + r8], 0
jz c15d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d
c15d:
add r8, 1
and r8, 0xFFFF
o15e:
cmp byte [tape + r8], 0
jz c15e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o15f:
cmp byte [tape + r8], 0
jz c15f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15f
c15f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15e
c15e:
add r8, 130
and r8, 0xFFFF
push 1
push 131
call ms
sub r8, 131
and r8, 0xFFFF
o160:
cmp byte [tape + r8], 0
jz c160
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o160
c160:
add r8, 1
and r8, 0xFFFF
o161:
cmp byte [tape + r8], 0
jz c161
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 12
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o161
c161:
add r8, 129
and r8, 0xFFFF
push 1
push 130
call ms
sub r8, 130
and r8, 0xFFFF
o162:
cmp byte [tape + r8], 0
jz c162
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o162
c162:
add r8, 1
and r8, 0xFFFF
o163:
cmp byte [tape + r8], 0
jz c163
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o164:
cmp byte [tape + r8], 0
jz c164
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o164
c164:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o165:
cmp byte [tape + r8], 0
jz c165
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o165
c165:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o166:
cmp byte [tape + r8], 0
jz c166
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o166
c166:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o167:
cmp byte [tape + r8], 0
jz c167
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o167
c167:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o168:
cmp byte [tape + r8], 0
jz c168
add r8, 123
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 132
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o168
c168:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o163
c163:
sub r8, 1
and r8, 0xFFFF
o169:
cmp byte [tape + r8], 0
jz c169
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o169
c169:
add r8, 1
and r8, 0xFFFF
o16a:
cmp byte [tape + r8], 0
jz c16a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o16b:
cmp byte [tape + r8], 0
jz c16b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b
c16b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o16c:
cmp byte [tape + r8], 0
jz c16c
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16c
c16c:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o16d:
cmp byte [tape + r8], 0
jz c16d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16d
c16d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o16e:
cmp byte [tape + r8], 0
jz c16e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o16e
c16e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o16f:
cmp byte [tape + r8], 0
jz c16f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16f
c16f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o170:
cmp byte [tape + r8], 0
jz c170
add r8, 124
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 133
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o170
c170:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a
c16a:
sub r8, 1
and r8, 0xFFFF
o171:
cmp byte [tape + r8], 0
jz c171
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o171
c171:
add r8, 1
and r8, 0xFFFF
o172:
cmp byte [tape + r8], 0
jz c172
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o173:
cmp byte [tape + r8], 0
jz c173
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o173
c173:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o172
c172:
add r8, 132
and r8, 0xFFFF
push 1
push 133
call ms
sub r8, 133
and r8, 0xFFFF
o174:
cmp byte [tape + r8], 0
jz c174
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o174
c174:
add r8, 1
and r8, 0xFFFF
o175:
cmp byte [tape + r8], 0
jz c175
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o175
c175:
add r8, 131
and r8, 0xFFFF
push 1
push 132
call ms
sub r8, 132
and r8, 0xFFFF
o176:
cmp byte [tape + r8], 0
jz c176
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o176
c176:
add r8, 1
and r8, 0xFFFF
o177:
cmp byte [tape + r8], 0
jz c177
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o178:
cmp byte [tape + r8], 0
jz c178
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o178
c178:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o179:
cmp byte [tape + r8], 0
jz c179
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o179
c179:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o17a:
cmp byte [tape + r8], 0
jz c17a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o17a
c17a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o17b:
cmp byte [tape + r8], 0
jz c17b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17b
c17b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o17c:
cmp byte [tape + r8], 0
jz c17c
add r8, 125
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 134
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o17c
c17c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o177
c177:
sub r8, 1
and r8, 0xFFFF
o17d:
cmp byte [tape + r8], 0
jz c17d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17d
c17d:
add r8, 1
and r8, 0xFFFF
o17e:
cmp byte [tape + r8], 0
jz c17e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o17f:
cmp byte [tape + r8], 0
jz c17f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17f
c17f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o180:
cmp byte [tape + r8], 0
jz c180
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o180
c180:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o181:
cmp byte [tape + r8], 0
jz c181
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o181
c181:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o182:
cmp byte [tape + r8], 0
jz c182
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o182
c182:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o183:
cmp byte [tape + r8], 0
jz c183
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o183
c183:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o184:
cmp byte [tape + r8], 0
jz c184
add r8, 126
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 135
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o184
c184:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17e
c17e:
sub r8, 1
and r8, 0xFFFF
o185:
cmp byte [tape + r8], 0
jz c185
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o185
c185:
add r8, 1
and r8, 0xFFFF
o186:
cmp byte [tape + r8], 0
jz c186
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o187:
cmp byte [tape + r8], 0
jz c187
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o187
c187:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o186
c186:
add r8, 134
and r8, 0xFFFF
push 1
push 135
call ms
sub r8, 135
and r8, 0xFFFF
o188:
cmp byte [tape + r8], 0
jz c188
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o188
c188:
add r8, 1
and r8, 0xFFFF
o189:
cmp byte [tape + r8], 0
jz c189
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o189
c189:
add r8, 133
and r8, 0xFFFF
push 1
push 134
call ms
sub r8, 134
and r8, 0xFFFF
o18a:
cmp byte [tape + r8], 0
jz c18a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18a
c18a:
add r8, 1
and r8, 0xFFFF
o18b:
cmp byte [tape + r8], 0
jz c18b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o18c:
cmp byte [tape + r8], 0
jz c18c
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18c
c18c:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o18d:
cmp byte [tape + r8], 0
jz c18d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18d
c18d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o18e:
cmp byte [tape + r8], 0
jz c18e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o18e
c18e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o18f:
cmp byte [tape + r8], 0
jz c18f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18f
c18f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o190:
cmp byte [tape + r8], 0
jz c190
add r8, 127
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 136
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o190
c190:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18b
c18b:
sub r8, 1
and r8, 0xFFFF
o191:
cmp byte [tape + r8], 0
jz c191
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o191
c191:
add r8, 1
and r8, 0xFFFF
o192:
cmp byte [tape + r8], 0
jz c192
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o193:
cmp byte [tape + r8], 0
jz c193
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o193
c193:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o194:
cmp byte [tape + r8], 0
jz c194
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o194
c194:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o195:
cmp byte [tape + r8], 0
jz c195
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o195
c195:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o196:
cmp byte [tape + r8], 0
jz c196
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o196
c196:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o197:
cmp byte [tape + r8], 0
jz c197
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o197
c197:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o198:
cmp byte [tape + r8], 0
jz c198
add r8, 128
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 137
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o198
c198:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o192
c192:
sub r8, 1
and r8, 0xFFFF
o199:
cmp byte [tape + r8], 0
jz c199
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o199
c199:
add r8, 1
and r8, 0xFFFF
o19a:
cmp byte [tape + r8], 0
jz c19a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o19b:
cmp byte [tape + r8], 0
jz c19b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b
c19b:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19a
c19a:
add r8, 136
and r8, 0xFFFF
push 1
push 137
call ms
sub r8, 137
and r8, 0xFFFF
o19c:
cmp byte [tape + r8], 0
jz c19c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c
c19c:
add r8, 1
and r8, 0xFFFF
o19d:
cmp byte [tape + r8], 0
jz c19d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d
c19d:
add r8, 135
and r8, 0xFFFF
push 1
push 136
call ms
sub r8, 136
and r8, 0xFFFF
o19e:
cmp byte [tape + r8], 0
jz c19e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19e
c19e:
add r8, 1
and r8, 0xFFFF
o19f:
cmp byte [tape + r8], 0
jz c19f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1a0:
cmp byte [tape + r8], 0
jz c1a0
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a0
c1a0:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1a1:
cmp byte [tape + r8], 0
jz c1a1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a1
c1a1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1a2:
cmp byte [tape + r8], 0
jz c1a2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a2
c1a2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a3:
cmp byte [tape + r8], 0
jz c1a3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a3
c1a3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a4:
cmp byte [tape + r8], 0
jz c1a4
add r8, 129
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 138
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a4
c1a4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19f
c19f:
sub r8, 1
and r8, 0xFFFF
o1a5:
cmp byte [tape + r8], 0
jz c1a5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a5
c1a5:
add r8, 1
and r8, 0xFFFF
o1a6:
cmp byte [tape + r8], 0
jz c1a6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1a7:
cmp byte [tape + r8], 0
jz c1a7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a7
c1a7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o1a8:
cmp byte [tape + r8], 0
jz c1a8
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a8
c1a8:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1a9:
cmp byte [tape + r8], 0
jz c1a9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a9
c1a9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1aa:
cmp byte [tape + r8], 0
jz c1aa
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1aa
c1aa:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1ab:
cmp byte [tape + r8], 0
jz c1ab
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab
c1ab:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1ac:
cmp byte [tape + r8], 0
jz c1ac
add r8, 130
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 139
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1ac
c1ac:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a6
c1a6:
sub r8, 1
and r8, 0xFFFF
o1ad:
cmp byte [tape + r8], 0
jz c1ad
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ad
c1ad:
add r8, 1
and r8, 0xFFFF
o1ae:
cmp byte [tape + r8], 0
jz c1ae
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o1af:
cmp byte [tape + r8], 0
jz c1af
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1af
c1af:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ae
c1ae:
add r8, 138
and r8, 0xFFFF
push 1
push 139
call ms
sub r8, 139
and r8, 0xFFFF
o1b0:
cmp byte [tape + r8], 0
jz c1b0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b0
c1b0:
add r8, 1
and r8, 0xFFFF
o1b1:
cmp byte [tape + r8], 0
jz c1b1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b1
c1b1:
add r8, 137
and r8, 0xFFFF
push 1
push 138
call ms
sub r8, 138
and r8, 0xFFFF
o1b2:
cmp byte [tape + r8], 0
jz c1b2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b2
c1b2:
add r8, 1
and r8, 0xFFFF
o1b3:
cmp byte [tape + r8], 0
jz c1b3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1b4:
cmp byte [tape + r8], 0
jz c1b4
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b4
c1b4:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1b5:
cmp byte [tape + r8], 0
jz c1b5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b5
c1b5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1b6:
cmp byte [tape + r8], 0
jz c1b6
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1b6
c1b6:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1b7:
cmp byte [tape + r8], 0
jz c1b7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b7
c1b7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1b8:
cmp byte [tape + r8], 0
jz c1b8
add r8, 131
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 140
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1b8
c1b8:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b3
c1b3:
sub r8, 1
and r8, 0xFFFF
o1b9:
cmp byte [tape + r8], 0
jz c1b9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b9
c1b9:
add r8, 1
and r8, 0xFFFF
o1ba:
cmp byte [tape + r8], 0
jz c1ba
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1bb:
cmp byte [tape + r8], 0
jz c1bb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1bb
c1bb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o1bc:
cmp byte [tape + r8], 0
jz c1bc
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1bc
c1bc:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1bd:
cmp byte [tape + r8], 0
jz c1bd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1bd
c1bd:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1be:
cmp byte [tape + r8], 0
jz c1be
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1be
c1be:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1bf:
cmp byte [tape + r8], 0
jz c1bf
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1bf
c1bf:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1c0:
cmp byte [tape + r8], 0
jz c1c0
add r8, 132
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 141
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1c0
c1c0:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ba
c1ba:
sub r8, 1
and r8, 0xFFFF
o1c1:
cmp byte [tape + r8], 0
jz c1c1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c1
c1c1:
add r8, 1
and r8, 0xFFFF
o1c2:
cmp byte [tape + r8], 0
jz c1c2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o1c3:
cmp byte [tape + r8], 0
jz c1c3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c3
c1c3:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c2
c1c2:
add r8, 140
and r8, 0xFFFF
push 1
push 141
call ms
sub r8, 141
and r8, 0xFFFF
o1c4:
cmp byte [tape + r8], 0
jz c1c4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c4
c1c4:
add r8, 1
and r8, 0xFFFF
o1c5:
cmp byte [tape + r8], 0
jz c1c5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c5
c1c5:
add r8, 139
and r8, 0xFFFF
push 1
push 140
call ms
sub r8, 140
and r8, 0xFFFF
o1c6:
cmp byte [tape + r8], 0
jz c1c6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c6
c1c6:
add r8, 1
and r8, 0xFFFF
o1c7:
cmp byte [tape + r8], 0
jz c1c7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1c8:
cmp byte [tape + r8], 0
jz c1c8
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c8
c1c8:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1c9:
cmp byte [tape + r8], 0
jz c1c9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c9
c1c9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1ca:
cmp byte [tape + r8], 0
jz c1ca
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1ca
c1ca:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1cb:
cmp byte [tape + r8], 0
jz c1cb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1cb
c1cb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1cc:
cmp byte [tape + r8], 0
jz c1cc
add r8, 133
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 142
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1cc
c1cc:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1c7
c1c7:
sub r8, 1
and r8, 0xFFFF
o1cd:
cmp byte [tape + r8], 0
jz c1cd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1cd
c1cd:
add r8, 1
and r8, 0xFFFF
o1ce:
cmp byte [tape + r8], 0
jz c1ce
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1cf:
cmp byte [tape + r8], 0
jz c1cf
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1cf
c1cf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o1d0:
cmp byte [tape + r8], 0
jz c1d0
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1d0
c1d0:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1d1:
cmp byte [tape + r8], 0
jz c1d1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1d1
c1d1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1d2:
cmp byte [tape + r8], 0
jz c1d2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1d2
c1d2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1d3:
cmp byte [tape + r8], 0
jz c1d3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1d3
c1d3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1d4:
cmp byte [tape + r8], 0
jz c1d4
add r8, 134
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 143
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1d4
c1d4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ce
c1ce:
sub r8, 1
and r8, 0xFFFF
o1d5:
cmp byte [tape + r8], 0
jz c1d5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1d5
c1d5:
add r8, 1
and r8, 0xFFFF
o1d6:
cmp byte [tape + r8], 0
jz c1d6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o1d7:
cmp byte [tape + r8], 0
jz c1d7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1d7
c1d7:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1d6
c1d6:
add r8, 142
and r8, 0xFFFF
push 1
push 143
call ms
sub r8, 143
and r8, 0xFFFF
o1d8:
cmp byte [tape + r8], 0
jz c1d8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1d8
c1d8:
add r8, 1
and r8, 0xFFFF
o1d9:
cmp byte [tape + r8], 0
jz c1d9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1d9
c1d9:
add r8, 141
and r8, 0xFFFF
push 1
push 142
call ms
sub r8, 142
and r8, 0xFFFF
o1da:
cmp byte [tape + r8], 0
jz c1da
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1da
c1da:
add r8, 1
and r8, 0xFFFF
o1db:
cmp byte [tape + r8], 0
jz c1db
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1dc:
cmp byte [tape + r8], 0
jz c1dc
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1dc
c1dc:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1dd:
cmp byte [tape + r8], 0
jz c1dd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1dd
c1dd:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1de:
cmp byte [tape + r8], 0
jz c1de
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1de
c1de:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1df:
cmp byte [tape + r8], 0
jz c1df
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1df
c1df:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1e0:
cmp byte [tape + r8], 0
jz c1e0
add r8, 135
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 144
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1e0
c1e0:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1db
c1db:
sub r8, 1
and r8, 0xFFFF
o1e1:
cmp byte [tape + r8], 0
jz c1e1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1e1
c1e1:
add r8, 1
and r8, 0xFFFF
o1e2:
cmp byte [tape + r8], 0
jz c1e2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1e3:
cmp byte [tape + r8], 0
jz c1e3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1e3
c1e3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o1e4:
cmp byte [tape + r8], 0
jz c1e4
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1e4
c1e4:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1e5:
cmp byte [tape + r8], 0
jz c1e5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1e5
c1e5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1e6:
cmp byte [tape + r8], 0
jz c1e6
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1e6
c1e6:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1e7:
cmp byte [tape + r8], 0
jz c1e7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1e7
c1e7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1e8:
cmp byte [tape + r8], 0
jz c1e8
add r8, 136
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 145
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1e8
c1e8:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1e2
c1e2:
sub r8, 1
and r8, 0xFFFF
o1e9:
cmp byte [tape + r8], 0
jz c1e9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1e9
c1e9:
add r8, 1
and r8, 0xFFFF
o1ea:
cmp byte [tape + r8], 0
jz c1ea
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o1eb:
cmp byte [tape + r8], 0
jz c1eb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1eb
c1eb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ea
c1ea:
add r8, 144
and r8, 0xFFFF
push 1
push 145
call ms
sub r8, 145
and r8, 0xFFFF
o1ec:
cmp byte [tape + r8], 0
jz c1ec
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ec
c1ec:
add r8, 1
and r8, 0xFFFF
o1ed:
cmp byte [tape + r8], 0
jz c1ed
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 11
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ed
c1ed:
add r8, 143
and r8, 0xFFFF
push 1
push 144
call ms
sub r8, 144
and r8, 0xFFFF
o1ee:
cmp byte [tape + r8], 0
jz c1ee
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ee
c1ee:
add r8, 1
and r8, 0xFFFF
o1ef:
cmp byte [tape + r8], 0
jz c1ef
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1f0:
cmp byte [tape + r8], 0
jz c1f0
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1f0
c1f0:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 11
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1f1:
cmp byte [tape + r8], 0
jz c1f1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1f1
c1f1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1f2:
cmp byte [tape + r8], 0
jz c1f2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1f2
c1f2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1f3:
cmp byte [tape + r8], 0
jz c1f3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1f3
c1f3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1f4:
cmp byte [tape + r8], 0
jz c1f4
add r8, 137
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 146
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1f4
c1f4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ef
c1ef:
sub r8, 1
and r8, 0xFFFF
o1f5:
cmp byte [tape + r8], 0
jz c1f5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1f5
c1f5:
add r8, 1
and r8, 0xFFFF
o1f6:
cmp byte [tape + r8], 0
jz c1f6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1f7:
cmp byte [tape + r8], 0
jz c1f7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1f7
c1f7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o1f8:
cmp byte [tape + r8], 0
jz c1f8
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1f8
c1f8:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1f9:
cmp byte [tape + r8], 0
jz c1f9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1f9
c1f9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1fa:
cmp byte [tape + r8], 0
jz c1fa
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1fa
c1fa:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1fb:
cmp byte [tape + r8], 0
jz c1fb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1fb
c1fb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1fc:
cmp byte [tape + r8], 0
jz c1fc
add r8, 138
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 147
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1fc
c1fc:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1f6
c1f6:
sub r8, 1
and r8, 0xFFFF
o1fd:
cmp byte [tape + r8], 0
jz c1fd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1fd
c1fd:
add r8, 1
and r8, 0xFFFF
o1fe:
cmp byte [tape + r8], 0
jz c1fe
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o1ff:
cmp byte [tape + r8], 0
jz c1ff
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ff
c1ff:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1fe
c1fe:
add r8, 146
and r8, 0xFFFF
push 1
push 147
call ms
sub r8, 147
and r8, 0xFFFF
o200:
cmp byte [tape + r8], 0
jz c200
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o200
c200:
add r8, 1
and r8, 0xFFFF
o201:
cmp byte [tape + r8], 0
jz c201
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 10
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o201
c201:
add r8, 145
and r8, 0xFFFF
push 1
push 146
call ms
sub r8, 146
and r8, 0xFFFF
o202:
cmp byte [tape + r8], 0
jz c202
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o202
c202:
add r8, 1
and r8, 0xFFFF
o203:
cmp byte [tape + r8], 0
jz c203
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o204:
cmp byte [tape + r8], 0
jz c204
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o204
c204:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o205:
cmp byte [tape + r8], 0
jz c205
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o205
c205:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o206:
cmp byte [tape + r8], 0
jz c206
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o206
c206:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o207:
cmp byte [tape + r8], 0
jz c207
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o207
c207:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o208:
cmp byte [tape + r8], 0
jz c208
add r8, 139
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 148
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o208
c208:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o203
c203:
sub r8, 1
and r8, 0xFFFF
o209:
cmp byte [tape + r8], 0
jz c209
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o209
c209:
add r8, 1
and r8, 0xFFFF
o20a:
cmp byte [tape + r8], 0
jz c20a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o20b:
cmp byte [tape + r8], 0
jz c20b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o20b
c20b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o20c:
cmp byte [tape + r8], 0
jz c20c
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o20c
c20c:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o20d:
cmp byte [tape + r8], 0
jz c20d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o20d
c20d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o20e:
cmp byte [tape + r8], 0
jz c20e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o20e
c20e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o20f:
cmp byte [tape + r8], 0
jz c20f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o20f
c20f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o210:
cmp byte [tape + r8], 0
jz c210
add r8, 140
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 149
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o210
c210:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o20a
c20a:
sub r8, 1
and r8, 0xFFFF
o211:
cmp byte [tape + r8], 0
jz c211
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o211
c211:
add r8, 1
and r8, 0xFFFF
o212:
cmp byte [tape + r8], 0
jz c212
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o213:
cmp byte [tape + r8], 0
jz c213
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o213
c213:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o212
c212:
add r8, 148
and r8, 0xFFFF
push 1
push 149
call ms
sub r8, 149
and r8, 0xFFFF
o214:
cmp byte [tape + r8], 0
jz c214
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o214
c214:
add r8, 1
and r8, 0xFFFF
o215:
cmp byte [tape + r8], 0
jz c215
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 13
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o215
c215:
add r8, 147
and r8, 0xFFFF
push 1
push 148
call ms
sub r8, 148
and r8, 0xFFFF
o216:
cmp byte [tape + r8], 0
jz c216
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o216
c216:
add r8, 1
and r8, 0xFFFF
o217:
cmp byte [tape + r8], 0
jz c217
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 18
and r8, 0xFFFF
o218:
cmp byte [tape + r8], 0
jz c218
sub r8, 18
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 25
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o218
c218:
sub r8, 25
and r8, 0xFFFF
push 1
push 25
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o219:
cmp byte [tape + r8], 0
jz c219
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o219
c219:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o21a:
cmp byte [tape + r8], 0
jz c21a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o21a
c21a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o21b:
cmp byte [tape + r8], 0
jz c21b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o21b
c21b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o21c:
cmp byte [tape + r8], 0
jz c21c
add r8, 141
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 150
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o21c
c21c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o217
c217:
sub r8, 1
and r8, 0xFFFF
o21d:
cmp byte [tape + r8], 0
jz c21d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o21d
c21d:
add r8, 1
and r8, 0xFFFF
o21e:
cmp byte [tape + r8], 0
jz c21e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o21f:
cmp byte [tape + r8], 0
jz c21f
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o21f
c21f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o220:
cmp byte [tape + r8], 0
jz c220
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o220
c220:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o221:
cmp byte [tape + r8], 0
jz c221
add r8, 2
and r8, 0xFFFF
o222:
cmp byte [tape + r8], 0
jz c222
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o222
c222:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o223:
cmp byte [tape + r8], 0
jz c223
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o223
c223:
sub r8, 3
and r8, 0xFFFF
o224:
cmp byte [tape + r8], 0
jz c224
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o224
c224:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o221
c221:
add r8, 2
and r8, 0xFFFF
o225:
cmp byte [tape + r8], 0
jz c225
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o225
c225:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o226:
cmp byte [tape + r8], 0
jz c226
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o226
c226:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o227:
cmp byte [tape + r8], 0
jz c227
add r8, 142
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 151
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o227
c227:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o21e
c21e:
sub r8, 1
and r8, 0xFFFF
o228:
cmp byte [tape + r8], 0
jz c228
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o228
c228:
add r8, 1
and r8, 0xFFFF
o229:
cmp byte [tape + r8], 0
jz c229
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o22a:
cmp byte [tape + r8], 0
jz c22a
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o22a
c22a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 30
and r8, 0xFFFF
call z
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
call z
add byte [tape + r8], 12
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o229
c229:
add r8, 150
and r8, 0xFFFF
push 1
push 151
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 150
call ms
sub r8, 150
and r8, 0xFFFF
o22b:
cmp byte [tape + r8], 0
jz c22b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o22b
c22b:
add r8, 1
and r8, 0xFFFF
o22c:
cmp byte [tape + r8], 0
jz c22c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o22d:
cmp byte [tape + r8], 0
jz c22d
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o22d
c22d:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o22e:
cmp byte [tape + r8], 0
jz c22e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o22e
c22e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o22f:
cmp byte [tape + r8], 0
jz c22f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o22f
c22f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o230:
cmp byte [tape + r8], 0
jz c230
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o230
c230:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o231:
cmp byte [tape + r8], 0
jz c231
add r8, 143
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 152
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o231
c231:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o22c
c22c:
sub r8, 1
and r8, 0xFFFF
o232:
cmp byte [tape + r8], 0
jz c232
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o232
c232:
add r8, 1
and r8, 0xFFFF
o233:
cmp byte [tape + r8], 0
jz c233
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o234:
cmp byte [tape + r8], 0
jz c234
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o234
c234:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o235:
cmp byte [tape + r8], 0
jz c235
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o235
c235:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o236:
cmp byte [tape + r8], 0
jz c236
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o236
c236:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o237:
cmp byte [tape + r8], 0
jz c237
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o237
c237:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o238:
cmp byte [tape + r8], 0
jz c238
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o238
c238:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o239:
cmp byte [tape + r8], 0
jz c239
add r8, 144
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 153
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o239
c239:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o233
c233:
sub r8, 1
and r8, 0xFFFF
o23a:
cmp byte [tape + r8], 0
jz c23a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o23a
c23a:
add r8, 1
and r8, 0xFFFF
o23b:
cmp byte [tape + r8], 0
jz c23b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o23c:
cmp byte [tape + r8], 0
jz c23c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o23c
c23c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o23b
c23b:
add r8, 152
and r8, 0xFFFF
push 1
push 153
call ms
sub r8, 153
and r8, 0xFFFF
o23d:
cmp byte [tape + r8], 0
jz c23d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o23d
c23d:
add r8, 1
and r8, 0xFFFF
o23e:
cmp byte [tape + r8], 0
jz c23e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 12
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 14
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o23e
c23e:
add r8, 151
and r8, 0xFFFF
push 1
push 152
call ms
sub r8, 152
and r8, 0xFFFF
o23f:
cmp byte [tape + r8], 0
jz c23f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o23f
c23f:
add r8, 1
and r8, 0xFFFF
o240:
cmp byte [tape + r8], 0
jz c240
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o241:
cmp byte [tape + r8], 0
jz c241
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o241
c241:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o242:
cmp byte [tape + r8], 0
jz c242
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o242
c242:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o243:
cmp byte [tape + r8], 0
jz c243
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o243
c243:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o244:
cmp byte [tape + r8], 0
jz c244
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o244
c244:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o245:
cmp byte [tape + r8], 0
jz c245
add r8, 145
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 154
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o245
c245:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o240
c240:
sub r8, 1
and r8, 0xFFFF
o246:
cmp byte [tape + r8], 0
jz c246
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o246
c246:
add r8, 1
and r8, 0xFFFF
o247:
cmp byte [tape + r8], 0
jz c247
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o248:
cmp byte [tape + r8], 0
jz c248
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o248
c248:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 24
and r8, 0xFFFF
o249:
cmp byte [tape + r8], 0
jz c249
sub r8, 24
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 31
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o249
c249:
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o24a:
cmp byte [tape + r8], 0
jz c24a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o24a
c24a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o24b:
cmp byte [tape + r8], 0
jz c24b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o24b
c24b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o24c:
cmp byte [tape + r8], 0
jz c24c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o24c
c24c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o24d:
cmp byte [tape + r8], 0
jz c24d
add r8, 146
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 155
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o24d
c24d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o247
c247:
sub r8, 1
and r8, 0xFFFF
o24e:
cmp byte [tape + r8], 0
jz c24e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o24e
c24e:
add r8, 1
and r8, 0xFFFF
o24f:
cmp byte [tape + r8], 0
jz c24f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o250:
cmp byte [tape + r8], 0
jz c250
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o250
c250:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 154
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 156
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o24f
c24f:
add r8, 154
and r8, 0xFFFF
push 1
push 155
call ms
sub r8, 155
and r8, 0xFFFF
o251:
cmp byte [tape + r8], 0
jz c251
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o251
c251:
add r8, 1
and r8, 0xFFFF
o252:
cmp byte [tape + r8], 0
jz c252
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o253:
cmp byte [tape + r8], 0
jz c253
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o253
c253:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o252
c252:
add r8, 155
and r8, 0xFFFF
push 1
push 156
call ms
sub r8, 156
and r8, 0xFFFF
o254:
cmp byte [tape + r8], 0
jz c254
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o254
c254:
add r8, 1
and r8, 0xFFFF
o255:
cmp byte [tape + r8], 0
jz c255
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o256:
cmp byte [tape + r8], 0
jz c256
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o256
c256:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o257:
cmp byte [tape + r8], 0
jz c257
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o257
c257:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o258:
cmp byte [tape + r8], 0
jz c258
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o258
c258:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o259:
cmp byte [tape + r8], 0
jz c259
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o259
c259:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o25a:
cmp byte [tape + r8], 0
jz c25a
add r8, 148
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 157
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o25a
c25a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o255
c255:
sub r8, 1
and r8, 0xFFFF
o25b:
cmp byte [tape + r8], 0
jz c25b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o25b
c25b:
add r8, 1
and r8, 0xFFFF
o25c:
cmp byte [tape + r8], 0
jz c25c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o25d:
cmp byte [tape + r8], 0
jz c25d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o25d
c25d:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o25c
c25c:
add r8, 156
and r8, 0xFFFF
push 1
push 157
call ms
sub r8, 157
and r8, 0xFFFF
o25e:
cmp byte [tape + r8], 0
jz c25e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o25e
c25e:
add r8, 1
and r8, 0xFFFF
o25f:
cmp byte [tape + r8], 0
jz c25f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 13
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o25f
c25f:
add r8, 153
and r8, 0xFFFF
push 1
push 154
call ms
sub r8, 154
and r8, 0xFFFF
o260:
cmp byte [tape + r8], 0
jz c260
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o260
c260:
add r8, 1
and r8, 0xFFFF
o261:
cmp byte [tape + r8], 0
jz c261
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o262:
cmp byte [tape + r8], 0
jz c262
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o262
c262:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 15
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o263:
cmp byte [tape + r8], 0
jz c263
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o263
c263:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o264:
cmp byte [tape + r8], 0
jz c264
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o264
c264:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o265:
cmp byte [tape + r8], 0
jz c265
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o265
c265:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o266:
cmp byte [tape + r8], 0
jz c266
add r8, 149
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 158
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o266
c266:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o261
c261:
sub r8, 1
and r8, 0xFFFF
o267:
cmp byte [tape + r8], 0
jz c267
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o267
c267:
add r8, 1
and r8, 0xFFFF
o268:
cmp byte [tape + r8], 0
jz c268
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o269:
cmp byte [tape + r8], 0
jz c269
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o269
c269:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o26a:
cmp byte [tape + r8], 0
jz c26a
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o26a
c26a:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o26b:
cmp byte [tape + r8], 0
jz c26b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o26b
c26b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o26c:
cmp byte [tape + r8], 0
jz c26c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o26c
c26c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o26d:
cmp byte [tape + r8], 0
jz c26d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o26d
c26d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o26e:
cmp byte [tape + r8], 0
jz c26e
add r8, 150
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 159
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o26e
c26e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o268
c268:
sub r8, 1
and r8, 0xFFFF
o26f:
cmp byte [tape + r8], 0
jz c26f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o26f
c26f:
add r8, 1
and r8, 0xFFFF
o270:
cmp byte [tape + r8], 0
jz c270
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o271:
cmp byte [tape + r8], 0
jz c271
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o271
c271:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o270
c270:
add r8, 158
and r8, 0xFFFF
push 1
push 159
call ms
sub r8, 159
and r8, 0xFFFF
o272:
cmp byte [tape + r8], 0
jz c272
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o272
c272:
add r8, 1
and r8, 0xFFFF
o273:
cmp byte [tape + r8], 0
jz c273
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o273
c273:
add r8, 157
and r8, 0xFFFF
push 1
push 158
call ms
sub r8, 158
and r8, 0xFFFF
o274:
cmp byte [tape + r8], 0
jz c274
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o274
c274:
add r8, 1
and r8, 0xFFFF
o275:
cmp byte [tape + r8], 0
jz c275
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o276:
cmp byte [tape + r8], 0
jz c276
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o276
c276:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o277:
cmp byte [tape + r8], 0
jz c277
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o277
c277:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o278:
cmp byte [tape + r8], 0
jz c278
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o278
c278:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o279:
cmp byte [tape + r8], 0
jz c279
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o279
c279:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o27a:
cmp byte [tape + r8], 0
jz c27a
add r8, 151
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 160
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o27a
c27a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o275
c275:
sub r8, 1
and r8, 0xFFFF
o27b:
cmp byte [tape + r8], 0
jz c27b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o27b
c27b:
add r8, 1
and r8, 0xFFFF
o27c:
cmp byte [tape + r8], 0
jz c27c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o27d:
cmp byte [tape + r8], 0
jz c27d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o27d
c27d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o27e:
cmp byte [tape + r8], 0
jz c27e
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o27e
c27e:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o27f:
cmp byte [tape + r8], 0
jz c27f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o27f
c27f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o280:
cmp byte [tape + r8], 0
jz c280
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o280
c280:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o281:
cmp byte [tape + r8], 0
jz c281
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o281
c281:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o282:
cmp byte [tape + r8], 0
jz c282
add r8, 152
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 161
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o282
c282:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o27c
c27c:
sub r8, 1
and r8, 0xFFFF
o283:
cmp byte [tape + r8], 0
jz c283
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o283
c283:
add r8, 1
and r8, 0xFFFF
o284:
cmp byte [tape + r8], 0
jz c284
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o285:
cmp byte [tape + r8], 0
jz c285
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o285
c285:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o284
c284:
add r8, 160
and r8, 0xFFFF
push 1
push 161
call ms
sub r8, 161
and r8, 0xFFFF
o286:
cmp byte [tape + r8], 0
jz c286
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o286
c286:
add r8, 1
and r8, 0xFFFF
o287:
cmp byte [tape + r8], 0
jz c287
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o287
c287:
add r8, 159
and r8, 0xFFFF
push 1
push 160
call ms
sub r8, 160
and r8, 0xFFFF
o288:
cmp byte [tape + r8], 0
jz c288
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o288
c288:
add r8, 1
and r8, 0xFFFF
o289:
cmp byte [tape + r8], 0
jz c289
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o28a:
cmp byte [tape + r8], 0
jz c28a
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o28a
c28a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o28b:
cmp byte [tape + r8], 0
jz c28b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o28b
c28b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o28c:
cmp byte [tape + r8], 0
jz c28c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o28c
c28c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o28d:
cmp byte [tape + r8], 0
jz c28d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o28d
c28d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o28e:
cmp byte [tape + r8], 0
jz c28e
add r8, 153
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 162
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o28e
c28e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o289
c289:
sub r8, 1
and r8, 0xFFFF
o28f:
cmp byte [tape + r8], 0
jz c28f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o28f
c28f:
add r8, 1
and r8, 0xFFFF
o290:
cmp byte [tape + r8], 0
jz c290
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o291:
cmp byte [tape + r8], 0
jz c291
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o291
c291:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o292:
cmp byte [tape + r8], 0
jz c292
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o292
c292:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o293:
cmp byte [tape + r8], 0
jz c293
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o293
c293:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o294:
cmp byte [tape + r8], 0
jz c294
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o294
c294:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o295:
cmp byte [tape + r8], 0
jz c295
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o295
c295:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o296:
cmp byte [tape + r8], 0
jz c296
add r8, 154
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 163
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o296
c296:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o290
c290:
sub r8, 1
and r8, 0xFFFF
o297:
cmp byte [tape + r8], 0
jz c297
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o297
c297:
add r8, 1
and r8, 0xFFFF
o298:
cmp byte [tape + r8], 0
jz c298
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o299:
cmp byte [tape + r8], 0
jz c299
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o299
c299:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o298
c298:
add r8, 162
and r8, 0xFFFF
push 1
push 163
call ms
sub r8, 163
and r8, 0xFFFF
o29a:
cmp byte [tape + r8], 0
jz c29a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o29a
c29a:
add r8, 1
and r8, 0xFFFF
o29b:
cmp byte [tape + r8], 0
jz c29b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o29b
c29b:
add r8, 161
and r8, 0xFFFF
push 1
push 162
call ms
sub r8, 162
and r8, 0xFFFF
o29c:
cmp byte [tape + r8], 0
jz c29c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o29c
c29c:
add r8, 1
and r8, 0xFFFF
o29d:
cmp byte [tape + r8], 0
jz c29d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o29e:
cmp byte [tape + r8], 0
jz c29e
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o29e
c29e:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o29f:
cmp byte [tape + r8], 0
jz c29f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o29f
c29f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2a0:
cmp byte [tape + r8], 0
jz c2a0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2a0
c2a0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2a1:
cmp byte [tape + r8], 0
jz c2a1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2a1
c2a1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2a2:
cmp byte [tape + r8], 0
jz c2a2
add r8, 155
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 164
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2a2
c2a2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o29d
c29d:
sub r8, 1
and r8, 0xFFFF
o2a3:
cmp byte [tape + r8], 0
jz c2a3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2a3
c2a3:
add r8, 1
and r8, 0xFFFF
o2a4:
cmp byte [tape + r8], 0
jz c2a4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o2a5:
cmp byte [tape + r8], 0
jz c2a5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2a5
c2a5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o2a6:
cmp byte [tape + r8], 0
jz c2a6
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2a6
c2a6:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2a7:
cmp byte [tape + r8], 0
jz c2a7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2a7
c2a7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2a8:
cmp byte [tape + r8], 0
jz c2a8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2a8
c2a8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2a9:
cmp byte [tape + r8], 0
jz c2a9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2a9
c2a9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2aa:
cmp byte [tape + r8], 0
jz c2aa
add r8, 156
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 165
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2aa
c2aa:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2a4
c2a4:
sub r8, 1
and r8, 0xFFFF
o2ab:
cmp byte [tape + r8], 0
jz c2ab
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ab
c2ab:
add r8, 1
and r8, 0xFFFF
o2ac:
cmp byte [tape + r8], 0
jz c2ac
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o2ad:
cmp byte [tape + r8], 0
jz c2ad
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ad
c2ad:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ac
c2ac:
add r8, 164
and r8, 0xFFFF
push 1
push 165
call ms
sub r8, 165
and r8, 0xFFFF
o2ae:
cmp byte [tape + r8], 0
jz c2ae
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ae
c2ae:
add r8, 1
and r8, 0xFFFF
o2af:
cmp byte [tape + r8], 0
jz c2af
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2af
c2af:
add r8, 163
and r8, 0xFFFF
push 1
push 164
call ms
sub r8, 164
and r8, 0xFFFF
o2b0:
cmp byte [tape + r8], 0
jz c2b0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b0
c2b0:
add r8, 1
and r8, 0xFFFF
o2b1:
cmp byte [tape + r8], 0
jz c2b1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o2b2:
cmp byte [tape + r8], 0
jz c2b2
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b2
c2b2:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2b3:
cmp byte [tape + r8], 0
jz c2b3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b3
c2b3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2b4:
cmp byte [tape + r8], 0
jz c2b4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2b4
c2b4:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2b5:
cmp byte [tape + r8], 0
jz c2b5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b5
c2b5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2b6:
cmp byte [tape + r8], 0
jz c2b6
add r8, 157
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 166
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2b6
c2b6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b1
c2b1:
sub r8, 1
and r8, 0xFFFF
o2b7:
cmp byte [tape + r8], 0
jz c2b7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b7
c2b7:
add r8, 1
and r8, 0xFFFF
o2b8:
cmp byte [tape + r8], 0
jz c2b8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o2b9:
cmp byte [tape + r8], 0
jz c2b9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b9
c2b9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o2ba:
cmp byte [tape + r8], 0
jz c2ba
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ba
c2ba:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2bb:
cmp byte [tape + r8], 0
jz c2bb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2bb
c2bb:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2bc:
cmp byte [tape + r8], 0
jz c2bc
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2bc
c2bc:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2bd:
cmp byte [tape + r8], 0
jz c2bd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2bd
c2bd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2be:
cmp byte [tape + r8], 0
jz c2be
add r8, 158
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 167
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2be
c2be:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2b8
c2b8:
sub r8, 1
and r8, 0xFFFF
o2bf:
cmp byte [tape + r8], 0
jz c2bf
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2bf
c2bf:
add r8, 1
and r8, 0xFFFF
o2c0:
cmp byte [tape + r8], 0
jz c2c0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o2c1:
cmp byte [tape + r8], 0
jz c2c1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c1
c2c1:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c0
c2c0:
add r8, 166
and r8, 0xFFFF
push 1
push 167
call ms
sub r8, 167
and r8, 0xFFFF
o2c2:
cmp byte [tape + r8], 0
jz c2c2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c2
c2c2:
add r8, 1
and r8, 0xFFFF
o2c3:
cmp byte [tape + r8], 0
jz c2c3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c3
c2c3:
add r8, 165
and r8, 0xFFFF
push 1
push 166
call ms
sub r8, 166
and r8, 0xFFFF
o2c4:
cmp byte [tape + r8], 0
jz c2c4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c4
c2c4:
add r8, 1
and r8, 0xFFFF
o2c5:
cmp byte [tape + r8], 0
jz c2c5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o2c6:
cmp byte [tape + r8], 0
jz c2c6
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c6
c2c6:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2c7:
cmp byte [tape + r8], 0
jz c2c7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c7
c2c7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2c8:
cmp byte [tape + r8], 0
jz c2c8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2c8
c2c8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2c9:
cmp byte [tape + r8], 0
jz c2c9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c9
c2c9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2ca:
cmp byte [tape + r8], 0
jz c2ca
add r8, 159
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 168
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2ca
c2ca:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2c5
c2c5:
sub r8, 1
and r8, 0xFFFF
o2cb:
cmp byte [tape + r8], 0
jz c2cb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2cb
c2cb:
add r8, 1
and r8, 0xFFFF
o2cc:
cmp byte [tape + r8], 0
jz c2cc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o2cd:
cmp byte [tape + r8], 0
jz c2cd
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2cd
c2cd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o2ce:
cmp byte [tape + r8], 0
jz c2ce
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ce
c2ce:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2cf:
cmp byte [tape + r8], 0
jz c2cf
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2cf
c2cf:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2d0:
cmp byte [tape + r8], 0
jz c2d0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2d0
c2d0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2d1:
cmp byte [tape + r8], 0
jz c2d1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2d1
c2d1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2d2:
cmp byte [tape + r8], 0
jz c2d2
add r8, 160
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 169
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2d2
c2d2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2cc
c2cc:
sub r8, 1
and r8, 0xFFFF
o2d3:
cmp byte [tape + r8], 0
jz c2d3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2d3
c2d3:
add r8, 1
and r8, 0xFFFF
o2d4:
cmp byte [tape + r8], 0
jz c2d4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o2d5:
cmp byte [tape + r8], 0
jz c2d5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2d5
c2d5:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2d4
c2d4:
add r8, 168
and r8, 0xFFFF
push 1
push 169
call ms
sub r8, 169
and r8, 0xFFFF
o2d6:
cmp byte [tape + r8], 0
jz c2d6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2d6
c2d6:
add r8, 1
and r8, 0xFFFF
o2d7:
cmp byte [tape + r8], 0
jz c2d7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 5
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2d7
c2d7:
add r8, 167
and r8, 0xFFFF
push 1
push 168
call ms
sub r8, 168
and r8, 0xFFFF
o2d8:
cmp byte [tape + r8], 0
jz c2d8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2d8
c2d8:
add r8, 1
and r8, 0xFFFF
o2d9:
cmp byte [tape + r8], 0
jz c2d9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o2da:
cmp byte [tape + r8], 0
jz c2da
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2da
c2da:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2db:
cmp byte [tape + r8], 0
jz c2db
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2db
c2db:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2dc:
cmp byte [tape + r8], 0
jz c2dc
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2dc
c2dc:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2dd:
cmp byte [tape + r8], 0
jz c2dd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2dd
c2dd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2de:
cmp byte [tape + r8], 0
jz c2de
add r8, 161
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 170
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2de
c2de:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2d9
c2d9:
sub r8, 1
and r8, 0xFFFF
o2df:
cmp byte [tape + r8], 0
jz c2df
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2df
c2df:
add r8, 1
and r8, 0xFFFF
o2e0:
cmp byte [tape + r8], 0
jz c2e0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o2e1:
cmp byte [tape + r8], 0
jz c2e1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2e1
c2e1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o2e2:
cmp byte [tape + r8], 0
jz c2e2
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2e2
c2e2:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2e3:
cmp byte [tape + r8], 0
jz c2e3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2e3
c2e3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2e4:
cmp byte [tape + r8], 0
jz c2e4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2e4
c2e4:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2e5:
cmp byte [tape + r8], 0
jz c2e5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2e5
c2e5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2e6:
cmp byte [tape + r8], 0
jz c2e6
add r8, 162
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 171
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2e6
c2e6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2e0
c2e0:
sub r8, 1
and r8, 0xFFFF
o2e7:
cmp byte [tape + r8], 0
jz c2e7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2e7
c2e7:
add r8, 1
and r8, 0xFFFF
o2e8:
cmp byte [tape + r8], 0
jz c2e8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o2e9:
cmp byte [tape + r8], 0
jz c2e9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2e9
c2e9:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2e8
c2e8:
add r8, 170
and r8, 0xFFFF
push 1
push 171
call ms
sub r8, 171
and r8, 0xFFFF
o2ea:
cmp byte [tape + r8], 0
jz c2ea
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ea
c2ea:
add r8, 1
and r8, 0xFFFF
o2eb:
cmp byte [tape + r8], 0
jz c2eb
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2eb
c2eb:
add r8, 169
and r8, 0xFFFF
push 1
push 170
call ms
sub r8, 170
and r8, 0xFFFF
o2ec:
cmp byte [tape + r8], 0
jz c2ec
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ec
c2ec:
add r8, 1
and r8, 0xFFFF
o2ed:
cmp byte [tape + r8], 0
jz c2ed
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o2ee:
cmp byte [tape + r8], 0
jz c2ee
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ee
c2ee:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2ef:
cmp byte [tape + r8], 0
jz c2ef
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ef
c2ef:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2f0:
cmp byte [tape + r8], 0
jz c2f0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2f0
c2f0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2f1:
cmp byte [tape + r8], 0
jz c2f1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2f1
c2f1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2f2:
cmp byte [tape + r8], 0
jz c2f2
add r8, 163
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 172
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2f2
c2f2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ed
c2ed:
sub r8, 1
and r8, 0xFFFF
o2f3:
cmp byte [tape + r8], 0
jz c2f3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2f3
c2f3:
add r8, 1
and r8, 0xFFFF
o2f4:
cmp byte [tape + r8], 0
jz c2f4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o2f5:
cmp byte [tape + r8], 0
jz c2f5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2f5
c2f5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o2f6:
cmp byte [tape + r8], 0
jz c2f6
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2f6
c2f6:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o2f7:
cmp byte [tape + r8], 0
jz c2f7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2f7
c2f7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o2f8:
cmp byte [tape + r8], 0
jz c2f8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o2f8
c2f8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o2f9:
cmp byte [tape + r8], 0
jz c2f9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2f9
c2f9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o2fa:
cmp byte [tape + r8], 0
jz c2fa
add r8, 164
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 173
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o2fa
c2fa:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2f4
c2f4:
sub r8, 1
and r8, 0xFFFF
o2fb:
cmp byte [tape + r8], 0
jz c2fb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2fb
c2fb:
add r8, 1
and r8, 0xFFFF
o2fc:
cmp byte [tape + r8], 0
jz c2fc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o2fd:
cmp byte [tape + r8], 0
jz c2fd
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2fd
c2fd:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2fc
c2fc:
add r8, 172
and r8, 0xFFFF
push 1
push 173
call ms
sub r8, 173
and r8, 0xFFFF
o2fe:
cmp byte [tape + r8], 0
jz c2fe
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2fe
c2fe:
add r8, 1
and r8, 0xFFFF
o2ff:
cmp byte [tape + r8], 0
jz c2ff
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 5
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 7
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o2ff
c2ff:
add r8, 171
and r8, 0xFFFF
push 1
push 172
call ms
sub r8, 172
and r8, 0xFFFF
o300:
cmp byte [tape + r8], 0
jz c300
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o300
c300:
add r8, 1
and r8, 0xFFFF
o301:
cmp byte [tape + r8], 0
jz c301
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o302:
cmp byte [tape + r8], 0
jz c302
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o302
c302:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o303:
cmp byte [tape + r8], 0
jz c303
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o303
c303:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o304:
cmp byte [tape + r8], 0
jz c304
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o304
c304:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o305:
cmp byte [tape + r8], 0
jz c305
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o305
c305:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o306:
cmp byte [tape + r8], 0
jz c306
add r8, 165
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 174
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o306
c306:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o301
c301:
sub r8, 1
and r8, 0xFFFF
o307:
cmp byte [tape + r8], 0
jz c307
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o307
c307:
add r8, 1
and r8, 0xFFFF
o308:
cmp byte [tape + r8], 0
jz c308
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o309:
cmp byte [tape + r8], 0
jz c309
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o309
c309:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o30a:
cmp byte [tape + r8], 0
jz c30a
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o30a
c30a:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o30b:
cmp byte [tape + r8], 0
jz c30b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o30b
c30b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o30c:
cmp byte [tape + r8], 0
jz c30c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o30c
c30c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o30d:
cmp byte [tape + r8], 0
jz c30d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o30d
c30d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o30e:
cmp byte [tape + r8], 0
jz c30e
add r8, 166
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 175
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o30e
c30e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o308
c308:
sub r8, 1
and r8, 0xFFFF
o30f:
cmp byte [tape + r8], 0
jz c30f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o30f
c30f:
add r8, 1
and r8, 0xFFFF
o310:
cmp byte [tape + r8], 0
jz c310
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o311:
cmp byte [tape + r8], 0
jz c311
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o311
c311:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o310
c310:
add r8, 174
and r8, 0xFFFF
push 1
push 175
call ms
sub r8, 175
and r8, 0xFFFF
o312:
cmp byte [tape + r8], 0
jz c312
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o312
c312:
add r8, 1
and r8, 0xFFFF
o313:
cmp byte [tape + r8], 0
jz c313
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o314:
cmp byte [tape + r8], 0
jz c314
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o314
c314:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o315:
cmp byte [tape + r8], 0
jz c315
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o315
c315:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o316:
cmp byte [tape + r8], 0
jz c316
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o316
c316:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o317:
cmp byte [tape + r8], 0
jz c317
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o317
c317:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o318:
cmp byte [tape + r8], 0
jz c318
add r8, 167
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 176
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o318
c318:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o313
c313:
sub r8, 1
and r8, 0xFFFF
o319:
cmp byte [tape + r8], 0
jz c319
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o319
c319:
add r8, 1
and r8, 0xFFFF
o31a:
cmp byte [tape + r8], 0
jz c31a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o31b:
cmp byte [tape + r8], 0
jz c31b
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o31b
c31b:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o31c:
cmp byte [tape + r8], 0
jz c31c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o31c
c31c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o31d:
cmp byte [tape + r8], 0
jz c31d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o31d
c31d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o31e:
cmp byte [tape + r8], 0
jz c31e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o31e
c31e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o31f:
cmp byte [tape + r8], 0
jz c31f
add r8, 168
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 177
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o31f
c31f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o31a
c31a:
sub r8, 1
and r8, 0xFFFF
o320:
cmp byte [tape + r8], 0
jz c320
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o320
c320:
add r8, 1
and r8, 0xFFFF
o321:
cmp byte [tape + r8], 0
jz c321
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o322:
cmp byte [tape + r8], 0
jz c322
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o322
c322:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 176
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 178
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o321
c321:
add r8, 176
and r8, 0xFFFF
push 1
push 177
call ms
sub r8, 177
and r8, 0xFFFF
o323:
cmp byte [tape + r8], 0
jz c323
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o323
c323:
add r8, 1
and r8, 0xFFFF
o324:
cmp byte [tape + r8], 0
jz c324
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o325:
cmp byte [tape + r8], 0
jz c325
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o325
c325:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o324
c324:
add r8, 177
and r8, 0xFFFF
push 1
push 178
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 176
call ms
sub r8, 176
and r8, 0xFFFF
o326:
cmp byte [tape + r8], 0
jz c326
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o326
c326:
add r8, 1
and r8, 0xFFFF
o327:
cmp byte [tape + r8], 0
jz c327
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o328:
cmp byte [tape + r8], 0
jz c328
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o328
c328:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o329:
cmp byte [tape + r8], 0
jz c329
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o329
c329:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o32a:
cmp byte [tape + r8], 0
jz c32a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o32a
c32a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o32b:
cmp byte [tape + r8], 0
jz c32b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o32b
c32b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o32c:
cmp byte [tape + r8], 0
jz c32c
add r8, 170
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 179
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o32c
c32c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o327
c327:
sub r8, 1
and r8, 0xFFFF
o32d:
cmp byte [tape + r8], 0
jz c32d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o32d
c32d:
add r8, 1
and r8, 0xFFFF
o32e:
cmp byte [tape + r8], 0
jz c32e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
add r8, 171
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 180
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o32e
c32e:
add r8, 178
and r8, 0xFFFF
push 1
push 179
call ms
sub r8, 179
and r8, 0xFFFF
o32f:
cmp byte [tape + r8], 0
jz c32f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o32f
c32f:
add r8, 1
and r8, 0xFFFF
o330:
cmp byte [tape + r8], 0
jz c330
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o330
c330:
add r8, 179
and r8, 0xFFFF
push 1
push 180
call ms
sub r8, 180
and r8, 0xFFFF
o331:
cmp byte [tape + r8], 0
jz c331
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o331
c331:
add r8, 1
and r8, 0xFFFF
o332:
cmp byte [tape + r8], 0
jz c332
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 6
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o332
c332:
add r8, 173
and r8, 0xFFFF
push 1
push 174
call ms
sub r8, 174
and r8, 0xFFFF
o333:
cmp byte [tape + r8], 0
jz c333
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o333
c333:
add r8, 1
and r8, 0xFFFF
o334:
cmp byte [tape + r8], 0
jz c334
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o335:
cmp byte [tape + r8], 0
jz c335
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o335
c335:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o336:
cmp byte [tape + r8], 0
jz c336
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o336
c336:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o337:
cmp byte [tape + r8], 0
jz c337
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o337
c337:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o338:
cmp byte [tape + r8], 0
jz c338
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o338
c338:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o339:
cmp byte [tape + r8], 0
jz c339
add r8, 172
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 181
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o339
c339:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o334
c334:
sub r8, 1
and r8, 0xFFFF
o33a:
cmp byte [tape + r8], 0
jz c33a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o33a
c33a:
add r8, 1
and r8, 0xFFFF
o33b:
cmp byte [tape + r8], 0
jz c33b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o33c:
cmp byte [tape + r8], 0
jz c33c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o33c
c33c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o33d:
cmp byte [tape + r8], 0
jz c33d
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o33d
c33d:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o33e:
cmp byte [tape + r8], 0
jz c33e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o33e
c33e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o33f:
cmp byte [tape + r8], 0
jz c33f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o33f
c33f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o340:
cmp byte [tape + r8], 0
jz c340
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o340
c340:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o341:
cmp byte [tape + r8], 0
jz c341
add r8, 173
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 182
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o341
c341:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o33b
c33b:
sub r8, 1
and r8, 0xFFFF
o342:
cmp byte [tape + r8], 0
jz c342
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o342
c342:
add r8, 1
and r8, 0xFFFF
o343:
cmp byte [tape + r8], 0
jz c343
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o344:
cmp byte [tape + r8], 0
jz c344
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o344
c344:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o343
c343:
add r8, 181
and r8, 0xFFFF
push 1
push 182
call ms
sub r8, 182
and r8, 0xFFFF
o345:
cmp byte [tape + r8], 0
jz c345
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o345
c345:
add r8, 1
and r8, 0xFFFF
o346:
cmp byte [tape + r8], 0
jz c346
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 9
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 14
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o346
c346:
add r8, 180
and r8, 0xFFFF
push 1
push 181
call ms
sub r8, 181
and r8, 0xFFFF
o347:
cmp byte [tape + r8], 0
jz c347
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o347
c347:
add r8, 1
and r8, 0xFFFF
o348:
cmp byte [tape + r8], 0
jz c348
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o349:
cmp byte [tape + r8], 0
jz c349
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o349
c349:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o34a:
cmp byte [tape + r8], 0
jz c34a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o34a
c34a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o34b:
cmp byte [tape + r8], 0
jz c34b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o34b
c34b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o34c:
cmp byte [tape + r8], 0
jz c34c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o34c
c34c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o34d:
cmp byte [tape + r8], 0
jz c34d
add r8, 174
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 183
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o34d
c34d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o348
c348:
sub r8, 1
and r8, 0xFFFF
o34e:
cmp byte [tape + r8], 0
jz c34e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o34e
c34e:
add r8, 1
and r8, 0xFFFF
o34f:
cmp byte [tape + r8], 0
jz c34f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o350:
cmp byte [tape + r8], 0
jz c350
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o350
c350:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o351:
cmp byte [tape + r8], 0
jz c351
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o351
c351:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o352:
cmp byte [tape + r8], 0
jz c352
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o352
c352:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o353:
cmp byte [tape + r8], 0
jz c353
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o353
c353:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o354:
cmp byte [tape + r8], 0
jz c354
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o354
c354:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o355:
cmp byte [tape + r8], 0
jz c355
add r8, 175
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 184
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o355
c355:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o34f
c34f:
sub r8, 1
and r8, 0xFFFF
o356:
cmp byte [tape + r8], 0
jz c356
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o356
c356:
add r8, 1
and r8, 0xFFFF
o357:
cmp byte [tape + r8], 0
jz c357
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o358:
cmp byte [tape + r8], 0
jz c358
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o358
c358:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o357
c357:
add r8, 183
and r8, 0xFFFF
push 1
push 184
call ms
sub r8, 184
and r8, 0xFFFF
o359:
cmp byte [tape + r8], 0
jz c359
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o359
c359:
add r8, 1
and r8, 0xFFFF
o35a:
cmp byte [tape + r8], 0
jz c35a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 8
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o35a
c35a:
add r8, 182
and r8, 0xFFFF
push 1
push 183
call ms
sub r8, 183
and r8, 0xFFFF
o35b:
cmp byte [tape + r8], 0
jz c35b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o35b
c35b:
add r8, 1
and r8, 0xFFFF
o35c:
cmp byte [tape + r8], 0
jz c35c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o35d:
cmp byte [tape + r8], 0
jz c35d
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o35d
c35d:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o35e:
cmp byte [tape + r8], 0
jz c35e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o35e
c35e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o35f:
cmp byte [tape + r8], 0
jz c35f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o35f
c35f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o360:
cmp byte [tape + r8], 0
jz c360
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o360
c360:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o361:
cmp byte [tape + r8], 0
jz c361
add r8, 176
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 185
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o361
c361:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o35c
c35c:
sub r8, 1
and r8, 0xFFFF
o362:
cmp byte [tape + r8], 0
jz c362
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o362
c362:
add r8, 1
and r8, 0xFFFF
o363:
cmp byte [tape + r8], 0
jz c363
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o364:
cmp byte [tape + r8], 0
jz c364
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o364
c364:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o365:
cmp byte [tape + r8], 0
jz c365
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o365
c365:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o366:
cmp byte [tape + r8], 0
jz c366
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o366
c366:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o367:
cmp byte [tape + r8], 0
jz c367
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o367
c367:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o368:
cmp byte [tape + r8], 0
jz c368
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o368
c368:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o369:
cmp byte [tape + r8], 0
jz c369
add r8, 177
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 186
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o369
c369:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o363
c363:
sub r8, 1
and r8, 0xFFFF
o36a:
cmp byte [tape + r8], 0
jz c36a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o36a
c36a:
add r8, 1
and r8, 0xFFFF
o36b:
cmp byte [tape + r8], 0
jz c36b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o36c:
cmp byte [tape + r8], 0
jz c36c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o36c
c36c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o36b
c36b:
add r8, 185
and r8, 0xFFFF
push 1
push 186
call ms
sub r8, 186
and r8, 0xFFFF
o36d:
cmp byte [tape + r8], 0
jz c36d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o36d
c36d:
add r8, 1
and r8, 0xFFFF
o36e:
cmp byte [tape + r8], 0
jz c36e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 20
and r8, 0xFFFF
o36f:
cmp byte [tape + r8], 0
jz c36f
sub r8, 20
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o36f
c36f:
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o370:
cmp byte [tape + r8], 0
jz c370
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o370
c370:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o371:
cmp byte [tape + r8], 0
jz c371
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o371
c371:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o372:
cmp byte [tape + r8], 0
jz c372
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o372
c372:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o373:
cmp byte [tape + r8], 0
jz c373
add r8, 178
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 187
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o373
c373:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o36e
c36e:
sub r8, 1
and r8, 0xFFFF
o374:
cmp byte [tape + r8], 0
jz c374
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o374
c374:
add r8, 1
and r8, 0xFFFF
o375:
cmp byte [tape + r8], 0
jz c375
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o376:
cmp byte [tape + r8], 0
jz c376
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o376
c376:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o375
c375:
add r8, 186
and r8, 0xFFFF
push 1
push 187
call ms
sub r8, 187
and r8, 0xFFFF
o377:
cmp byte [tape + r8], 0
jz c377
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o377
c377:
add r8, 1
and r8, 0xFFFF
o378:
cmp byte [tape + r8], 0
jz c378
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o378
c378:
add r8, 184
and r8, 0xFFFF
push 1
push 185
call ms
sub r8, 185
and r8, 0xFFFF
o379:
cmp byte [tape + r8], 0
jz c379
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o379
c379:
add r8, 1
and r8, 0xFFFF
o37a:
cmp byte [tape + r8], 0
jz c37a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o37b:
cmp byte [tape + r8], 0
jz c37b
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o37b
c37b:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o37c:
cmp byte [tape + r8], 0
jz c37c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o37c
c37c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o37d:
cmp byte [tape + r8], 0
jz c37d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o37d
c37d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o37e:
cmp byte [tape + r8], 0
jz c37e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o37e
c37e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o37f:
cmp byte [tape + r8], 0
jz c37f
add r8, 179
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 188
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o37f
c37f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o37a
c37a:
sub r8, 1
and r8, 0xFFFF
o380:
cmp byte [tape + r8], 0
jz c380
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o380
c380:
add r8, 1
and r8, 0xFFFF
o381:
cmp byte [tape + r8], 0
jz c381
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o382:
cmp byte [tape + r8], 0
jz c382
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o382
c382:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 10
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o381
c381:
add r8, 187
and r8, 0xFFFF
push 1
push 188
call ms
sub r8, 188
and r8, 0xFFFF
o383:
cmp byte [tape + r8], 0
jz c383
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o383
c383:
add r8, 1
and r8, 0xFFFF
o384:
cmp byte [tape + r8], 0
jz c384
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 189
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 189
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o384
c384:
add r8, 124
and r8, 0xFFFF
push 1
push 125
call ms
sub r8, 125
and r8, 0xFFFF
o385:
cmp byte [tape + r8], 0
jz c385
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o385
c385:
add r8, 1
and r8, 0xFFFF
o386:
cmp byte [tape + r8], 0
jz c386
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o387:
cmp byte [tape + r8], 0
jz c387
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o387
c387:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o388:
cmp byte [tape + r8], 0
jz c388
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o388
c388:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o389:
cmp byte [tape + r8], 0
jz c389
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o389
c389:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o38a:
cmp byte [tape + r8], 0
jz c38a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o38a
c38a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o38b:
cmp byte [tape + r8], 0
jz c38b
add r8, 181
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 190
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o38b
c38b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o386
c386:
sub r8, 1
and r8, 0xFFFF
o38c:
cmp byte [tape + r8], 0
jz c38c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o38c
c38c:
add r8, 1
and r8, 0xFFFF
o38d:
cmp byte [tape + r8], 0
jz c38d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o38e:
cmp byte [tape + r8], 0
jz c38e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o38e
c38e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o38f:
cmp byte [tape + r8], 0
jz c38f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o38f
c38f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o390:
cmp byte [tape + r8], 0
jz c390
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o390
c390:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 15
call o
add byte [tape + r8], 11
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o391:
cmp byte [tape + r8], 0
jz c391
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o391
c391:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
o392:
cmp byte [tape + r8], 0
jz c392
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o392
c392:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 4
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o393:
cmp byte [tape + r8], 0
jz c393
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o393
c393:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o394:
cmp byte [tape + r8], 0
jz c394
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o394
c394:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 10
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o38d
c38d:
add r8, 189
and r8, 0xFFFF
push 1
push 190
call ms
sub r8, 190
and r8, 0xFFFF
o395:
cmp byte [tape + r8], 0
jz c395
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o395
c395:
add r8, 1
and r8, 0xFFFF
o396:
cmp byte [tape + r8], 0
jz c396
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o397:
cmp byte [tape + r8], 0
jz c397
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o397
c397:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o398:
cmp byte [tape + r8], 0
jz c398
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o398
c398:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o399:
cmp byte [tape + r8], 0
jz c399
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o399
c399:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o39a:
cmp byte [tape + r8], 0
jz c39a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o39a
c39a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o39b:
cmp byte [tape + r8], 0
jz c39b
add r8, 182
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 191
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o39b
c39b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o396
c396:
sub r8, 1
and r8, 0xFFFF
o39c:
cmp byte [tape + r8], 0
jz c39c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o39c
c39c:
add r8, 1
and r8, 0xFFFF
o39d:
cmp byte [tape + r8], 0
jz c39d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o39e:
cmp byte [tape + r8], 0
jz c39e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o39e
c39e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o39f:
cmp byte [tape + r8], 0
jz c39f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o39f
c39f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o3a0:
cmp byte [tape + r8], 0
jz c3a0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a0
c3a0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 13
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o3a1:
cmp byte [tape + r8], 0
jz c3a1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a1
c3a1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o3a2:
cmp byte [tape + r8], 0
jz c3a2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a2
c3a2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o3a3:
cmp byte [tape + r8], 0
jz c3a3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a3
c3a3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o39d
c39d:
add r8, 190
and r8, 0xFFFF
push 1
push 191
call ms
sub r8, 191
and r8, 0xFFFF
o3a4:
cmp byte [tape + r8], 0
jz c3a4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a4
c3a4:
add r8, 1
and r8, 0xFFFF
o3a5:
cmp byte [tape + r8], 0
jz c3a5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o3a6:
cmp byte [tape + r8], 0
jz c3a6
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a6
c3a6:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o3a7:
cmp byte [tape + r8], 0
jz c3a7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a7
c3a7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o3a8:
cmp byte [tape + r8], 0
jz c3a8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o3a8
c3a8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o3a9:
cmp byte [tape + r8], 0
jz c3a9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a9
c3a9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o3aa:
cmp byte [tape + r8], 0
jz c3aa
add r8, 183
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 192
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o3aa
c3aa:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3a5
c3a5:
sub r8, 1
and r8, 0xFFFF
o3ab:
cmp byte [tape + r8], 0
jz c3ab
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ab
c3ab:
add r8, 1
and r8, 0xFFFF
o3ac:
cmp byte [tape + r8], 0
jz c3ac
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o3ad:
cmp byte [tape + r8], 0
jz c3ad
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ad
c3ad:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 11
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o3ae:
cmp byte [tape + r8], 0
jz c3ae
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ae
c3ae:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o3af:
cmp byte [tape + r8], 0
jz c3af
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3af
c3af:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3b0:
cmp byte [tape + r8], 0
jz c3b0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3b0
c3b0:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
o3b1:
cmp byte [tape + r8], 0
jz c3b1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3b1
c3b1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o3b2:
cmp byte [tape + r8], 0
jz c3b2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3b2
c3b2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 34
and r8, 0xFFFF
o3b3:
cmp byte [tape + r8], 0
jz c3b3
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 41
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3b3
c3b3:
sub r8, 41
and r8, 0xFFFF
push 1
push 41
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o3b4:
cmp byte [tape + r8], 0
jz c3b4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3b4
c3b4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o3b5:
cmp byte [tape + r8], 0
jz c3b5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o3b5
c3b5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o3b6:
cmp byte [tape + r8], 0
jz c3b6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3b6
c3b6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o3b7:
cmp byte [tape + r8], 0
jz c3b7
add r8, 184
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 193
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o3b7
c3b7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ac
c3ac:
sub r8, 1
and r8, 0xFFFF
o3b8:
cmp byte [tape + r8], 0
jz c3b8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3b8
c3b8:
add r8, 1
and r8, 0xFFFF
o3b9:
cmp byte [tape + r8], 0
jz c3b9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o3ba:
cmp byte [tape + r8], 0
jz c3ba
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ba
c3ba:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o3bb:
cmp byte [tape + r8], 0
jz c3bb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3bb
c3bb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 192
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 194
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3b9
c3b9:
add r8, 192
and r8, 0xFFFF
push 1
push 193
call ms
sub r8, 193
and r8, 0xFFFF
o3bc:
cmp byte [tape + r8], 0
jz c3bc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3bc
c3bc:
add r8, 1
and r8, 0xFFFF
o3bd:
cmp byte [tape + r8], 0
jz c3bd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3bd
c3bd:
add r8, 193
and r8, 0xFFFF
push 1
push 194
call ms
sub r8, 194
and r8, 0xFFFF
o3be:
cmp byte [tape + r8], 0
jz c3be
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3be
c3be:
add r8, 1
and r8, 0xFFFF
o3bf:
cmp byte [tape + r8], 0
jz c3bf
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 34
and r8, 0xFFFF
o3c0:
cmp byte [tape + r8], 0
jz c3c0
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 41
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3c0
c3c0:
sub r8, 41
and r8, 0xFFFF
push 1
push 41
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o3c1:
cmp byte [tape + r8], 0
jz c3c1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3c1
c3c1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o3c2:
cmp byte [tape + r8], 0
jz c3c2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o3c2
c3c2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o3c3:
cmp byte [tape + r8], 0
jz c3c3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3c3
c3c3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o3c4:
cmp byte [tape + r8], 0
jz c3c4
add r8, 186
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 195
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o3c4
c3c4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3bf
c3bf:
sub r8, 1
and r8, 0xFFFF
o3c5:
cmp byte [tape + r8], 0
jz c3c5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3c5
c3c5:
add r8, 1
and r8, 0xFFFF
o3c6:
cmp byte [tape + r8], 0
jz c3c6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
add r8, 187
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 196
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3c6
c3c6:
add r8, 194
and r8, 0xFFFF
push 1
push 195
call ms
sub r8, 195
and r8, 0xFFFF
o3c7:
cmp byte [tape + r8], 0
jz c3c7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3c7
c3c7:
add r8, 1
and r8, 0xFFFF
o3c8:
cmp byte [tape + r8], 0
jz c3c8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 12
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3c8
c3c8:
add r8, 195
and r8, 0xFFFF
push 1
push 196
call ms
sub r8, 196
and r8, 0xFFFF
o3c9:
cmp byte [tape + r8], 0
jz c3c9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3c9
c3c9:
add r8, 1
and r8, 0xFFFF
o3ca:
cmp byte [tape + r8], 0
jz c3ca
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ca
c3ca:
add r8, 191
and r8, 0xFFFF
push 1
push 192
call ms
sub r8, 192
and r8, 0xFFFF
o3cb:
cmp byte [tape + r8], 0
jz c3cb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3cb
c3cb:
add r8, 1
and r8, 0xFFFF
o3cc:
cmp byte [tape + r8], 0
jz c3cc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o3cd:
cmp byte [tape + r8], 0
jz c3cd
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3cd
c3cd:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o3ce:
cmp byte [tape + r8], 0
jz c3ce
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ce
c3ce:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o3cf:
cmp byte [tape + r8], 0
jz c3cf
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o3cf
c3cf:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o3d0:
cmp byte [tape + r8], 0
jz c3d0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d0
c3d0:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o3d1:
cmp byte [tape + r8], 0
jz c3d1
add r8, 188
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 197
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o3d1
c3d1:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3cc
c3cc:
sub r8, 1
and r8, 0xFFFF
o3d2:
cmp byte [tape + r8], 0
jz c3d2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d2
c3d2:
add r8, 1
and r8, 0xFFFF
o3d3:
cmp byte [tape + r8], 0
jz c3d3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o3d4:
cmp byte [tape + r8], 0
jz c3d4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d4
c3d4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o3d5:
cmp byte [tape + r8], 0
jz c3d5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d5
c3d5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 15
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o3d6:
cmp byte [tape + r8], 0
jz c3d6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d6
c3d6:
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3d7:
cmp byte [tape + r8], 0
jz c3d7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d7
c3d7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3d8:
cmp byte [tape + r8], 0
jz c3d8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d8
c3d8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 11
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d3
c3d3:
add r8, 196
and r8, 0xFFFF
push 1
push 197
call ms
sub r8, 197
and r8, 0xFFFF
o3d9:
cmp byte [tape + r8], 0
jz c3d9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3d9
c3d9:
add r8, 1
and r8, 0xFFFF
o3da:
cmp byte [tape + r8], 0
jz c3da
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o3db:
cmp byte [tape + r8], 0
jz c3db
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3db
c3db:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o3dc:
cmp byte [tape + r8], 0
jz c3dc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3dc
c3dc:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o3dd:
cmp byte [tape + r8], 0
jz c3dd
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o3dd
c3dd:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o3de:
cmp byte [tape + r8], 0
jz c3de
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3de
c3de:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o3df:
cmp byte [tape + r8], 0
jz c3df
add r8, 189
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 198
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o3df
c3df:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3da
c3da:
sub r8, 1
and r8, 0xFFFF
o3e0:
cmp byte [tape + r8], 0
jz c3e0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e0
c3e0:
add r8, 1
and r8, 0xFFFF
o3e1:
cmp byte [tape + r8], 0
jz c3e1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o3e2:
cmp byte [tape + r8], 0
jz c3e2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e2
c3e2:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3e3:
cmp byte [tape + r8], 0
jz c3e3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e3
c3e3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3e4:
cmp byte [tape + r8], 0
jz c3e4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e4
c3e4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e1
c3e1:
add r8, 197
and r8, 0xFFFF
push 1
push 198
call ms
sub r8, 198
and r8, 0xFFFF
o3e5:
cmp byte [tape + r8], 0
jz c3e5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e5
c3e5:
add r8, 1
and r8, 0xFFFF
o3e6:
cmp byte [tape + r8], 0
jz c3e6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o3e7:
cmp byte [tape + r8], 0
jz c3e7
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e7
c3e7:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o3e8:
cmp byte [tape + r8], 0
jz c3e8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e8
c3e8:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o3e9:
cmp byte [tape + r8], 0
jz c3e9
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o3e9
c3e9:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o3ea:
cmp byte [tape + r8], 0
jz c3ea
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ea
c3ea:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o3eb:
cmp byte [tape + r8], 0
jz c3eb
add r8, 190
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 199
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o3eb
c3eb:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3e6
c3e6:
sub r8, 1
and r8, 0xFFFF
o3ec:
cmp byte [tape + r8], 0
jz c3ec
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ec
c3ec:
add r8, 1
and r8, 0xFFFF
o3ed:
cmp byte [tape + r8], 0
jz c3ed
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o3ee:
cmp byte [tape + r8], 0
jz c3ee
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ee
c3ee:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3ef:
cmp byte [tape + r8], 0
jz c3ef
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ef
c3ef:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3f0:
cmp byte [tape + r8], 0
jz c3f0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f0
c3f0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ed
c3ed:
add r8, 198
and r8, 0xFFFF
push 1
push 199
call ms
sub r8, 199
and r8, 0xFFFF
o3f1:
cmp byte [tape + r8], 0
jz c3f1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f1
c3f1:
add r8, 1
and r8, 0xFFFF
o3f2:
cmp byte [tape + r8], 0
jz c3f2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o3f3:
cmp byte [tape + r8], 0
jz c3f3
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f3
c3f3:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o3f4:
cmp byte [tape + r8], 0
jz c3f4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f4
c3f4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o3f5:
cmp byte [tape + r8], 0
jz c3f5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o3f5
c3f5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o3f6:
cmp byte [tape + r8], 0
jz c3f6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f6
c3f6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o3f7:
cmp byte [tape + r8], 0
jz c3f7
add r8, 191
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 200
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o3f7
c3f7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f2
c3f2:
sub r8, 1
and r8, 0xFFFF
o3f8:
cmp byte [tape + r8], 0
jz c3f8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f8
c3f8:
add r8, 1
and r8, 0xFFFF
o3f9:
cmp byte [tape + r8], 0
jz c3f9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o3fa:
cmp byte [tape + r8], 0
jz c3fa
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3fa
c3fa:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3fb:
cmp byte [tape + r8], 0
jz c3fb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3fb
c3fb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o3fc:
cmp byte [tape + r8], 0
jz c3fc
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3fc
c3fc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3f9
c3f9:
add r8, 199
and r8, 0xFFFF
push 1
push 200
call ms
sub r8, 200
and r8, 0xFFFF
o3fd:
cmp byte [tape + r8], 0
jz c3fd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3fd
c3fd:
add r8, 1
and r8, 0xFFFF
o3fe:
cmp byte [tape + r8], 0
jz c3fe
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o3ff:
cmp byte [tape + r8], 0
jz c3ff
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3ff
c3ff:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o400:
cmp byte [tape + r8], 0
jz c400
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o400
c400:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o401:
cmp byte [tape + r8], 0
jz c401
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o401
c401:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o402:
cmp byte [tape + r8], 0
jz c402
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o402
c402:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o403:
cmp byte [tape + r8], 0
jz c403
add r8, 192
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 201
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o403
c403:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o3fe
c3fe:
sub r8, 1
and r8, 0xFFFF
o404:
cmp byte [tape + r8], 0
jz c404
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o404
c404:
add r8, 1
and r8, 0xFFFF
o405:
cmp byte [tape + r8], 0
jz c405
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o406:
cmp byte [tape + r8], 0
jz c406
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o406
c406:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o407:
cmp byte [tape + r8], 0
jz c407
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o407
c407:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o408:
cmp byte [tape + r8], 0
jz c408
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o408
c408:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o405
c405:
add r8, 200
and r8, 0xFFFF
push 1
push 201
call ms
sub r8, 201
and r8, 0xFFFF
o409:
cmp byte [tape + r8], 0
jz c409
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o409
c409:
add r8, 1
and r8, 0xFFFF
o40a:
cmp byte [tape + r8], 0
jz c40a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o40b:
cmp byte [tape + r8], 0
jz c40b
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o40b
c40b:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o40c:
cmp byte [tape + r8], 0
jz c40c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o40c
c40c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o40d:
cmp byte [tape + r8], 0
jz c40d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o40d
c40d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o40e:
cmp byte [tape + r8], 0
jz c40e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o40e
c40e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o40f:
cmp byte [tape + r8], 0
jz c40f
add r8, 193
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 202
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o40f
c40f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o40a
c40a:
sub r8, 1
and r8, 0xFFFF
o410:
cmp byte [tape + r8], 0
jz c410
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o410
c410:
add r8, 1
and r8, 0xFFFF
o411:
cmp byte [tape + r8], 0
jz c411
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o412:
cmp byte [tape + r8], 0
jz c412
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o412
c412:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o413:
cmp byte [tape + r8], 0
jz c413
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o413
c413:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
o414:
cmp byte [tape + r8], 0
jz c414
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o414
c414:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o415:
cmp byte [tape + r8], 0
jz c415
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o415
c415:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o411
c411:
add r8, 201
and r8, 0xFFFF
push 1
push 202
call ms
sub r8, 202
and r8, 0xFFFF
o416:
cmp byte [tape + r8], 0
jz c416
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o416
c416:
add r8, 1
and r8, 0xFFFF
o417:
cmp byte [tape + r8], 0
jz c417
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o418:
cmp byte [tape + r8], 0
jz c418
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o418
c418:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o419:
cmp byte [tape + r8], 0
jz c419
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o419
c419:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o41a:
cmp byte [tape + r8], 0
jz c41a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o41a
c41a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o41b:
cmp byte [tape + r8], 0
jz c41b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o41b
c41b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o41c:
cmp byte [tape + r8], 0
jz c41c
add r8, 194
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 203
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o41c
c41c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o417
c417:
sub r8, 1
and r8, 0xFFFF
o41d:
cmp byte [tape + r8], 0
jz c41d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o41d
c41d:
add r8, 1
and r8, 0xFFFF
o41e:
cmp byte [tape + r8], 0
jz c41e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o41f:
cmp byte [tape + r8], 0
jz c41f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o41f
c41f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o420:
cmp byte [tape + r8], 0
jz c420
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o420
c420:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o421:
cmp byte [tape + r8], 0
jz c421
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o421
c421:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o422:
cmp byte [tape + r8], 0
jz c422
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o422
c422:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o423:
cmp byte [tape + r8], 0
jz c423
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o423
c423:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 11
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o41e
c41e:
add r8, 202
and r8, 0xFFFF
push 1
push 203
call ms
sub r8, 203
and r8, 0xFFFF
o424:
cmp byte [tape + r8], 0
jz c424
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o424
c424:
add r8, 1
and r8, 0xFFFF
o425:
cmp byte [tape + r8], 0
jz c425
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o426:
cmp byte [tape + r8], 0
jz c426
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o426
c426:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 11
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o427:
cmp byte [tape + r8], 0
jz c427
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o427
c427:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o428:
cmp byte [tape + r8], 0
jz c428
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o428
c428:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o429:
cmp byte [tape + r8], 0
jz c429
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o429
c429:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o42a:
cmp byte [tape + r8], 0
jz c42a
add r8, 195
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 204
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o42a
c42a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o425
c425:
sub r8, 1
and r8, 0xFFFF
o42b:
cmp byte [tape + r8], 0
jz c42b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o42b
c42b:
add r8, 1
and r8, 0xFFFF
o42c:
cmp byte [tape + r8], 0
jz c42c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o42d:
cmp byte [tape + r8], 0
jz c42d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o42d
c42d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o42e:
cmp byte [tape + r8], 0
jz c42e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o42e
c42e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o42f:
cmp byte [tape + r8], 0
jz c42f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o42f
c42f:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o430:
cmp byte [tape + r8], 0
jz c430
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o430
c430:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 6
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o431:
cmp byte [tape + r8], 0
jz c431
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o431
c431:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 10
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o42c
c42c:
add r8, 203
and r8, 0xFFFF
push 1
push 204
call ms
sub r8, 204
and r8, 0xFFFF
o432:
cmp byte [tape + r8], 0
jz c432
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o432
c432:
add r8, 1
and r8, 0xFFFF
o433:
cmp byte [tape + r8], 0
jz c433
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o434:
cmp byte [tape + r8], 0
jz c434
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o434
c434:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o435:
cmp byte [tape + r8], 0
jz c435
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o435
c435:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o436:
cmp byte [tape + r8], 0
jz c436
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o436
c436:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o437:
cmp byte [tape + r8], 0
jz c437
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o437
c437:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o438:
cmp byte [tape + r8], 0
jz c438
add r8, 196
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 205
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o438
c438:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o433
c433:
sub r8, 1
and r8, 0xFFFF
o439:
cmp byte [tape + r8], 0
jz c439
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o439
c439:
add r8, 1
and r8, 0xFFFF
o43a:
cmp byte [tape + r8], 0
jz c43a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o43b:
cmp byte [tape + r8], 0
jz c43b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o43b
c43b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o43c:
cmp byte [tape + r8], 0
jz c43c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o43c
c43c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o43d:
cmp byte [tape + r8], 0
jz c43d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o43d
c43d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 14
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 13
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o43a
c43a:
add r8, 204
and r8, 0xFFFF
push 1
push 205
call ms
sub r8, 205
and r8, 0xFFFF
o43e:
cmp byte [tape + r8], 0
jz c43e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o43e
c43e:
add r8, 1
and r8, 0xFFFF
o43f:
cmp byte [tape + r8], 0
jz c43f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 18
and r8, 0xFFFF
o440:
cmp byte [tape + r8], 0
jz c440
sub r8, 18
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 25
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o440
c440:
sub r8, 25
and r8, 0xFFFF
push 1
push 25
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o441:
cmp byte [tape + r8], 0
jz c441
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o441
c441:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o442:
cmp byte [tape + r8], 0
jz c442
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o442
c442:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o443:
cmp byte [tape + r8], 0
jz c443
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o443
c443:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o444:
cmp byte [tape + r8], 0
jz c444
add r8, 197
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 206
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o444
c444:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o43f
c43f:
sub r8, 1
and r8, 0xFFFF
o445:
cmp byte [tape + r8], 0
jz c445
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o445
c445:
add r8, 1
and r8, 0xFFFF
o446:
cmp byte [tape + r8], 0
jz c446
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o447:
cmp byte [tape + r8], 0
jz c447
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o447
c447:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o448:
cmp byte [tape + r8], 0
jz c448
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o448
c448:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o449:
cmp byte [tape + r8], 0
jz c449
add r8, 2
and r8, 0xFFFF
o44a:
cmp byte [tape + r8], 0
jz c44a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o44a
c44a:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o44b:
cmp byte [tape + r8], 0
jz c44b
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o44b
c44b:
sub r8, 3
and r8, 0xFFFF
o44c:
cmp byte [tape + r8], 0
jz c44c
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o44c
c44c:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o449
c449:
add r8, 2
and r8, 0xFFFF
o44d:
cmp byte [tape + r8], 0
jz c44d
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o44d
c44d:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o44e:
cmp byte [tape + r8], 0
jz c44e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o44e
c44e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o44f:
cmp byte [tape + r8], 0
jz c44f
add r8, 198
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 207
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o44f
c44f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o446
c446:
sub r8, 1
and r8, 0xFFFF
o450:
cmp byte [tape + r8], 0
jz c450
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o450
c450:
add r8, 1
and r8, 0xFFFF
o451:
cmp byte [tape + r8], 0
jz c451
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o452:
cmp byte [tape + r8], 0
jz c452
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o452
c452:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 30
and r8, 0xFFFF
call z
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
call z
add byte [tape + r8], 12
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o451
c451:
add r8, 206
and r8, 0xFFFF
push 1
push 207
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 206
call ms
sub r8, 206
and r8, 0xFFFF
o453:
cmp byte [tape + r8], 0
jz c453
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o453
c453:
add r8, 1
and r8, 0xFFFF
o454:
cmp byte [tape + r8], 0
jz c454
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o455:
cmp byte [tape + r8], 0
jz c455
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o455
c455:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o456:
cmp byte [tape + r8], 0
jz c456
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o456
c456:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o457:
cmp byte [tape + r8], 0
jz c457
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o457
c457:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o458:
cmp byte [tape + r8], 0
jz c458
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o458
c458:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o459:
cmp byte [tape + r8], 0
jz c459
add r8, 199
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 208
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o459
c459:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o454
c454:
sub r8, 1
and r8, 0xFFFF
o45a:
cmp byte [tape + r8], 0
jz c45a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o45a
c45a:
add r8, 1
and r8, 0xFFFF
o45b:
cmp byte [tape + r8], 0
jz c45b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o45c:
cmp byte [tape + r8], 0
jz c45c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o45c
c45c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o45d:
cmp byte [tape + r8], 0
jz c45d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o45d
c45d:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o45e:
cmp byte [tape + r8], 0
jz c45e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o45e
c45e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o45f:
cmp byte [tape + r8], 0
jz c45f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o45f
c45f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 12
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 14
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o45b
c45b:
add r8, 207
and r8, 0xFFFF
push 1
push 208
call ms
sub r8, 208
and r8, 0xFFFF
o460:
cmp byte [tape + r8], 0
jz c460
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o460
c460:
add r8, 1
and r8, 0xFFFF
o461:
cmp byte [tape + r8], 0
jz c461
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o462:
cmp byte [tape + r8], 0
jz c462
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o462
c462:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o463:
cmp byte [tape + r8], 0
jz c463
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o463
c463:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o464:
cmp byte [tape + r8], 0
jz c464
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o464
c464:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o465:
cmp byte [tape + r8], 0
jz c465
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o465
c465:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o466:
cmp byte [tape + r8], 0
jz c466
add r8, 200
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 209
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o466
c466:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o461
c461:
sub r8, 1
and r8, 0xFFFF
o467:
cmp byte [tape + r8], 0
jz c467
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o467
c467:
add r8, 1
and r8, 0xFFFF
o468:
cmp byte [tape + r8], 0
jz c468
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o469:
cmp byte [tape + r8], 0
jz c469
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o469
c469:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o46a:
cmp byte [tape + r8], 0
jz c46a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o46a
c46a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o46b:
cmp byte [tape + r8], 0
jz c46b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o46b
c46b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o46c:
cmp byte [tape + r8], 0
jz c46c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o46c
c46c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 24
and r8, 0xFFFF
o46d:
cmp byte [tape + r8], 0
jz c46d
sub r8, 24
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 31
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o46d
c46d:
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o46e:
cmp byte [tape + r8], 0
jz c46e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o46e
c46e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o46f:
cmp byte [tape + r8], 0
jz c46f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o46f
c46f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o470:
cmp byte [tape + r8], 0
jz c470
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o470
c470:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o471:
cmp byte [tape + r8], 0
jz c471
add r8, 201
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 210
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o471
c471:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o468
c468:
sub r8, 1
and r8, 0xFFFF
o472:
cmp byte [tape + r8], 0
jz c472
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o472
c472:
add r8, 1
and r8, 0xFFFF
o473:
cmp byte [tape + r8], 0
jz c473
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o474:
cmp byte [tape + r8], 0
jz c474
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o474
c474:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 208
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 211
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o473
c473:
add r8, 209
and r8, 0xFFFF
push 1
push 210
call ms
sub r8, 210
and r8, 0xFFFF
o475:
cmp byte [tape + r8], 0
jz c475
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o475
c475:
add r8, 1
and r8, 0xFFFF
o476:
cmp byte [tape + r8], 0
jz c476
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o477:
cmp byte [tape + r8], 0
jz c477
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o477
c477:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o476
c476:
add r8, 210
and r8, 0xFFFF
push 1
push 211
call ms
sub r8, 211
and r8, 0xFFFF
o478:
cmp byte [tape + r8], 0
jz c478
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o478
c478:
add r8, 1
and r8, 0xFFFF
o479:
cmp byte [tape + r8], 0
jz c479
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o47a:
cmp byte [tape + r8], 0
jz c47a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o47a
c47a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 9
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o47b:
cmp byte [tape + r8], 0
jz c47b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o47b
c47b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o47c:
cmp byte [tape + r8], 0
jz c47c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o47c
c47c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 13
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o479
c479:
add r8, 208
and r8, 0xFFFF
push 1
push 209
call ms
sub r8, 209
and r8, 0xFFFF
o47d:
cmp byte [tape + r8], 0
jz c47d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o47d
c47d:
add r8, 1
and r8, 0xFFFF
o47e:
cmp byte [tape + r8], 0
jz c47e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o47f:
cmp byte [tape + r8], 0
jz c47f
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o47f
c47f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 15
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o480:
cmp byte [tape + r8], 0
jz c480
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o480
c480:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o481:
cmp byte [tape + r8], 0
jz c481
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o481
c481:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o482:
cmp byte [tape + r8], 0
jz c482
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o482
c482:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o483:
cmp byte [tape + r8], 0
jz c483
add r8, 203
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 212
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o483
c483:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o47e
c47e:
sub r8, 1
and r8, 0xFFFF
o484:
cmp byte [tape + r8], 0
jz c484
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o484
c484:
add r8, 1
and r8, 0xFFFF
o485:
cmp byte [tape + r8], 0
jz c485
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o486:
cmp byte [tape + r8], 0
jz c486
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o486
c486:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o487:
cmp byte [tape + r8], 0
jz c487
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o487
c487:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o488:
cmp byte [tape + r8], 0
jz c488
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o488
c488:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o485
c485:
add r8, 211
and r8, 0xFFFF
push 1
push 212
call ms
sub r8, 212
and r8, 0xFFFF
o489:
cmp byte [tape + r8], 0
jz c489
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o489
c489:
add r8, 1
and r8, 0xFFFF
o48a:
cmp byte [tape + r8], 0
jz c48a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o48b:
cmp byte [tape + r8], 0
jz c48b
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o48b
c48b:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o48c:
cmp byte [tape + r8], 0
jz c48c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o48c
c48c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o48d:
cmp byte [tape + r8], 0
jz c48d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o48d
c48d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o48e:
cmp byte [tape + r8], 0
jz c48e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o48e
c48e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o48f:
cmp byte [tape + r8], 0
jz c48f
add r8, 204
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 213
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o48f
c48f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o48a
c48a:
sub r8, 1
and r8, 0xFFFF
o490:
cmp byte [tape + r8], 0
jz c490
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o490
c490:
add r8, 1
and r8, 0xFFFF
o491:
cmp byte [tape + r8], 0
jz c491
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o492:
cmp byte [tape + r8], 0
jz c492
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o492
c492:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o493:
cmp byte [tape + r8], 0
jz c493
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o493
c493:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o494:
cmp byte [tape + r8], 0
jz c494
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o494
c494:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o491
c491:
add r8, 212
and r8, 0xFFFF
push 1
push 213
call ms
sub r8, 213
and r8, 0xFFFF
o495:
cmp byte [tape + r8], 0
jz c495
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o495
c495:
add r8, 1
and r8, 0xFFFF
o496:
cmp byte [tape + r8], 0
jz c496
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o497:
cmp byte [tape + r8], 0
jz c497
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o497
c497:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o498:
cmp byte [tape + r8], 0
jz c498
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o498
c498:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o499:
cmp byte [tape + r8], 0
jz c499
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o499
c499:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o49a:
cmp byte [tape + r8], 0
jz c49a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o49a
c49a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o49b:
cmp byte [tape + r8], 0
jz c49b
add r8, 205
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 214
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o49b
c49b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o496
c496:
sub r8, 1
and r8, 0xFFFF
o49c:
cmp byte [tape + r8], 0
jz c49c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o49c
c49c:
add r8, 1
and r8, 0xFFFF
o49d:
cmp byte [tape + r8], 0
jz c49d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o49e:
cmp byte [tape + r8], 0
jz c49e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o49e
c49e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o49f:
cmp byte [tape + r8], 0
jz c49f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o49f
c49f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o4a0:
cmp byte [tape + r8], 0
jz c4a0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4a0
c4a0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o49d
c49d:
add r8, 213
and r8, 0xFFFF
push 1
push 214
call ms
sub r8, 214
and r8, 0xFFFF
o4a1:
cmp byte [tape + r8], 0
jz c4a1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4a1
c4a1:
add r8, 1
and r8, 0xFFFF
o4a2:
cmp byte [tape + r8], 0
jz c4a2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o4a3:
cmp byte [tape + r8], 0
jz c4a3
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4a3
c4a3:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o4a4:
cmp byte [tape + r8], 0
jz c4a4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4a4
c4a4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o4a5:
cmp byte [tape + r8], 0
jz c4a5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o4a5
c4a5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o4a6:
cmp byte [tape + r8], 0
jz c4a6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4a6
c4a6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o4a7:
cmp byte [tape + r8], 0
jz c4a7
add r8, 206
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 215
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o4a7
c4a7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4a2
c4a2:
sub r8, 1
and r8, 0xFFFF
o4a8:
cmp byte [tape + r8], 0
jz c4a8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4a8
c4a8:
add r8, 1
and r8, 0xFFFF
o4a9:
cmp byte [tape + r8], 0
jz c4a9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o4aa:
cmp byte [tape + r8], 0
jz c4aa
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4aa
c4aa:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o4ab:
cmp byte [tape + r8], 0
jz c4ab
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ab
c4ab:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o4ac:
cmp byte [tape + r8], 0
jz c4ac
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ac
c4ac:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4a9
c4a9:
add r8, 214
and r8, 0xFFFF
push 1
push 215
call ms
sub r8, 215
and r8, 0xFFFF
o4ad:
cmp byte [tape + r8], 0
jz c4ad
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ad
c4ad:
add r8, 1
and r8, 0xFFFF
o4ae:
cmp byte [tape + r8], 0
jz c4ae
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o4af:
cmp byte [tape + r8], 0
jz c4af
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4af
c4af:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o4b0:
cmp byte [tape + r8], 0
jz c4b0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4b0
c4b0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o4b1:
cmp byte [tape + r8], 0
jz c4b1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o4b1
c4b1:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o4b2:
cmp byte [tape + r8], 0
jz c4b2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4b2
c4b2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o4b3:
cmp byte [tape + r8], 0
jz c4b3
add r8, 207
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 216
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o4b3
c4b3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ae
c4ae:
sub r8, 1
and r8, 0xFFFF
o4b4:
cmp byte [tape + r8], 0
jz c4b4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4b4
c4b4:
add r8, 1
and r8, 0xFFFF
o4b5:
cmp byte [tape + r8], 0
jz c4b5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o4b6:
cmp byte [tape + r8], 0
jz c4b6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4b6
c4b6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o4b7:
cmp byte [tape + r8], 0
jz c4b7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4b7
c4b7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o4b8:
cmp byte [tape + r8], 0
jz c4b8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4b8
c4b8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4b5
c4b5:
add r8, 215
and r8, 0xFFFF
push 1
push 216
call ms
sub r8, 216
and r8, 0xFFFF
o4b9:
cmp byte [tape + r8], 0
jz c4b9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4b9
c4b9:
add r8, 1
and r8, 0xFFFF
o4ba:
cmp byte [tape + r8], 0
jz c4ba
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o4bb:
cmp byte [tape + r8], 0
jz c4bb
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4bb
c4bb:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o4bc:
cmp byte [tape + r8], 0
jz c4bc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4bc
c4bc:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o4bd:
cmp byte [tape + r8], 0
jz c4bd
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o4bd
c4bd:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o4be:
cmp byte [tape + r8], 0
jz c4be
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4be
c4be:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o4bf:
cmp byte [tape + r8], 0
jz c4bf
add r8, 208
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 217
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o4bf
c4bf:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ba
c4ba:
sub r8, 1
and r8, 0xFFFF
o4c0:
cmp byte [tape + r8], 0
jz c4c0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c0
c4c0:
add r8, 1
and r8, 0xFFFF
o4c1:
cmp byte [tape + r8], 0
jz c4c1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o4c2:
cmp byte [tape + r8], 0
jz c4c2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c2
c4c2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o4c3:
cmp byte [tape + r8], 0
jz c4c3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c3
c4c3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o4c4:
cmp byte [tape + r8], 0
jz c4c4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c4
c4c4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 5
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c1
c4c1:
add r8, 216
and r8, 0xFFFF
push 1
push 217
call ms
sub r8, 217
and r8, 0xFFFF
o4c5:
cmp byte [tape + r8], 0
jz c4c5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c5
c4c5:
add r8, 1
and r8, 0xFFFF
o4c6:
cmp byte [tape + r8], 0
jz c4c6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o4c7:
cmp byte [tape + r8], 0
jz c4c7
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c7
c4c7:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o4c8:
cmp byte [tape + r8], 0
jz c4c8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c8
c4c8:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o4c9:
cmp byte [tape + r8], 0
jz c4c9
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o4c9
c4c9:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o4ca:
cmp byte [tape + r8], 0
jz c4ca
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ca
c4ca:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o4cb:
cmp byte [tape + r8], 0
jz c4cb
add r8, 209
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 218
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o4cb
c4cb:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4c6
c4c6:
sub r8, 1
and r8, 0xFFFF
o4cc:
cmp byte [tape + r8], 0
jz c4cc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4cc
c4cc:
add r8, 1
and r8, 0xFFFF
o4cd:
cmp byte [tape + r8], 0
jz c4cd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o4ce:
cmp byte [tape + r8], 0
jz c4ce
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ce
c4ce:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o4cf:
cmp byte [tape + r8], 0
jz c4cf
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4cf
c4cf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o4d0:
cmp byte [tape + r8], 0
jz c4d0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4d0
c4d0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4cd
c4cd:
add r8, 217
and r8, 0xFFFF
push 1
push 218
call ms
sub r8, 218
and r8, 0xFFFF
o4d1:
cmp byte [tape + r8], 0
jz c4d1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4d1
c4d1:
add r8, 1
and r8, 0xFFFF
o4d2:
cmp byte [tape + r8], 0
jz c4d2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o4d3:
cmp byte [tape + r8], 0
jz c4d3
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4d3
c4d3:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o4d4:
cmp byte [tape + r8], 0
jz c4d4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4d4
c4d4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o4d5:
cmp byte [tape + r8], 0
jz c4d5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o4d5
c4d5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o4d6:
cmp byte [tape + r8], 0
jz c4d6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4d6
c4d6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o4d7:
cmp byte [tape + r8], 0
jz c4d7
add r8, 210
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 219
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o4d7
c4d7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4d2
c4d2:
sub r8, 1
and r8, 0xFFFF
o4d8:
cmp byte [tape + r8], 0
jz c4d8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4d8
c4d8:
add r8, 1
and r8, 0xFFFF
o4d9:
cmp byte [tape + r8], 0
jz c4d9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o4da:
cmp byte [tape + r8], 0
jz c4da
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4da
c4da:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o4db:
cmp byte [tape + r8], 0
jz c4db
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4db
c4db:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o4dc:
cmp byte [tape + r8], 0
jz c4dc
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4dc
c4dc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 4
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o4dd:
cmp byte [tape + r8], 0
jz c4dd
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4dd
c4dd:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o4de:
cmp byte [tape + r8], 0
jz c4de
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4de
c4de:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o4df:
cmp byte [tape + r8], 0
jz c4df
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o4df
c4df:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o4e0:
cmp byte [tape + r8], 0
jz c4e0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e0
c4e0:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o4e1:
cmp byte [tape + r8], 0
jz c4e1
add r8, 211
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 220
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o4e1
c4e1:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4d9
c4d9:
sub r8, 1
and r8, 0xFFFF
o4e2:
cmp byte [tape + r8], 0
jz c4e2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e2
c4e2:
add r8, 1
and r8, 0xFFFF
o4e3:
cmp byte [tape + r8], 0
jz c4e3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o4e4:
cmp byte [tape + r8], 0
jz c4e4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e4
c4e4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o4e5:
cmp byte [tape + r8], 0
jz c4e5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e5
c4e5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 219
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 221
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e3
c4e3:
add r8, 219
and r8, 0xFFFF
push 1
push 220
call ms
sub r8, 220
and r8, 0xFFFF
o4e6:
cmp byte [tape + r8], 0
jz c4e6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e6
c4e6:
add r8, 1
and r8, 0xFFFF
o4e7:
cmp byte [tape + r8], 0
jz c4e7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e7
c4e7:
add r8, 220
and r8, 0xFFFF
push 1
push 221
call ms
sub r8, 221
and r8, 0xFFFF
o4e8:
cmp byte [tape + r8], 0
jz c4e8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e8
c4e8:
add r8, 1
and r8, 0xFFFF
o4e9:
cmp byte [tape + r8], 0
jz c4e9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 5
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 7
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4e9
c4e9:
add r8, 218
and r8, 0xFFFF
push 1
push 219
call ms
sub r8, 219
and r8, 0xFFFF
o4ea:
cmp byte [tape + r8], 0
jz c4ea
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ea
c4ea:
add r8, 1
and r8, 0xFFFF
o4eb:
cmp byte [tape + r8], 0
jz c4eb
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o4ec:
cmp byte [tape + r8], 0
jz c4ec
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ec
c4ec:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o4ed:
cmp byte [tape + r8], 0
jz c4ed
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ed
c4ed:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o4ee:
cmp byte [tape + r8], 0
jz c4ee
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o4ee
c4ee:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o4ef:
cmp byte [tape + r8], 0
jz c4ef
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ef
c4ef:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o4f0:
cmp byte [tape + r8], 0
jz c4f0
add r8, 213
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 222
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o4f0
c4f0:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4eb
c4eb:
sub r8, 1
and r8, 0xFFFF
o4f1:
cmp byte [tape + r8], 0
jz c4f1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4f1
c4f1:
add r8, 1
and r8, 0xFFFF
o4f2:
cmp byte [tape + r8], 0
jz c4f2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o4f3:
cmp byte [tape + r8], 0
jz c4f3
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4f3
c4f3:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o4f4:
cmp byte [tape + r8], 0
jz c4f4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4f4
c4f4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o4f5:
cmp byte [tape + r8], 0
jz c4f5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o4f5
c4f5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o4f6:
cmp byte [tape + r8], 0
jz c4f6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4f6
c4f6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o4f7:
cmp byte [tape + r8], 0
jz c4f7
add r8, 214
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 223
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o4f7
c4f7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4f2
c4f2:
sub r8, 1
and r8, 0xFFFF
o4f8:
cmp byte [tape + r8], 0
jz c4f8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4f8
c4f8:
add r8, 1
and r8, 0xFFFF
o4f9:
cmp byte [tape + r8], 0
jz c4f9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o4fa:
cmp byte [tape + r8], 0
jz c4fa
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4fa
c4fa:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 222
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 224
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4f9
c4f9:
add r8, 222
and r8, 0xFFFF
push 1
push 223
call ms
sub r8, 223
and r8, 0xFFFF
o4fb:
cmp byte [tape + r8], 0
jz c4fb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4fb
c4fb:
add r8, 1
and r8, 0xFFFF
o4fc:
cmp byte [tape + r8], 0
jz c4fc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o4fd:
cmp byte [tape + r8], 0
jz c4fd
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4fd
c4fd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4fc
c4fc:
add r8, 223
and r8, 0xFFFF
push 1
push 224
call ms
sub r8, 224
and r8, 0xFFFF
o4fe:
cmp byte [tape + r8], 0
jz c4fe
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4fe
c4fe:
add r8, 1
and r8, 0xFFFF
o4ff:
cmp byte [tape + r8], 0
jz c4ff
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o500:
cmp byte [tape + r8], 0
jz c500
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o500
c500:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o501:
cmp byte [tape + r8], 0
jz c501
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o501
c501:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o502:
cmp byte [tape + r8], 0
jz c502
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o502
c502:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o503:
cmp byte [tape + r8], 0
jz c503
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o503
c503:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o504:
cmp byte [tape + r8], 0
jz c504
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o504
c504:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o505:
cmp byte [tape + r8], 0
jz c505
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o505
c505:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o506:
cmp byte [tape + r8], 0
jz c506
add r8, 216
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 225
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o506
c506:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o4ff
c4ff:
sub r8, 1
and r8, 0xFFFF
o507:
cmp byte [tape + r8], 0
jz c507
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o507
c507:
add r8, 1
and r8, 0xFFFF
o508:
cmp byte [tape + r8], 0
jz c508
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o509:
cmp byte [tape + r8], 0
jz c509
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o509
c509:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o50a:
cmp byte [tape + r8], 0
jz c50a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o50a
c50a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 224
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 226
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o508
c508:
add r8, 224
and r8, 0xFFFF
push 1
push 225
call ms
sub r8, 225
and r8, 0xFFFF
o50b:
cmp byte [tape + r8], 0
jz c50b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o50b
c50b:
add r8, 1
and r8, 0xFFFF
o50c:
cmp byte [tape + r8], 0
jz c50c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o50d:
cmp byte [tape + r8], 0
jz c50d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o50d
c50d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o50c
c50c:
add r8, 225
and r8, 0xFFFF
push 1
push 226
call ms
sub r8, 226
and r8, 0xFFFF
o50e:
cmp byte [tape + r8], 0
jz c50e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o50e
c50e:
add r8, 1
and r8, 0xFFFF
o50f:
cmp byte [tape + r8], 0
jz c50f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o510:
cmp byte [tape + r8], 0
jz c510
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o510
c510:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o511:
cmp byte [tape + r8], 0
jz c511
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o511
c511:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o512:
cmp byte [tape + r8], 0
jz c512
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o512
c512:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o513:
cmp byte [tape + r8], 0
jz c513
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o513
c513:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o514:
cmp byte [tape + r8], 0
jz c514
add r8, 218
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 227
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o514
c514:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o50f
c50f:
sub r8, 1
and r8, 0xFFFF
o515:
cmp byte [tape + r8], 0
jz c515
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o515
c515:
add r8, 1
and r8, 0xFFFF
o516:
cmp byte [tape + r8], 0
jz c516
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
add r8, 219
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 228
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o516
c516:
add r8, 226
and r8, 0xFFFF
push 1
push 227
call ms
sub r8, 227
and r8, 0xFFFF
o517:
cmp byte [tape + r8], 0
jz c517
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o517
c517:
add r8, 1
and r8, 0xFFFF
o518:
cmp byte [tape + r8], 0
jz c518
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o518
c518:
add r8, 227
and r8, 0xFFFF
push 1
push 228
call ms
sub r8, 228
and r8, 0xFFFF
o519:
cmp byte [tape + r8], 0
jz c519
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o519
c519:
add r8, 1
and r8, 0xFFFF
o51a:
cmp byte [tape + r8], 0
jz c51a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 6
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o51a
c51a:
add r8, 221
and r8, 0xFFFF
push 1
push 222
call ms
sub r8, 222
and r8, 0xFFFF
o51b:
cmp byte [tape + r8], 0
jz c51b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o51b
c51b:
add r8, 1
and r8, 0xFFFF
o51c:
cmp byte [tape + r8], 0
jz c51c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o51d:
cmp byte [tape + r8], 0
jz c51d
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o51d
c51d:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o51e:
cmp byte [tape + r8], 0
jz c51e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o51e
c51e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o51f:
cmp byte [tape + r8], 0
jz c51f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o51f
c51f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o520:
cmp byte [tape + r8], 0
jz c520
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o520
c520:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o521:
cmp byte [tape + r8], 0
jz c521
add r8, 220
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 229
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o521
c521:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o51c
c51c:
sub r8, 1
and r8, 0xFFFF
o522:
cmp byte [tape + r8], 0
jz c522
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o522
c522:
add r8, 1
and r8, 0xFFFF
o523:
cmp byte [tape + r8], 0
jz c523
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
o524:
cmp byte [tape + r8], 0
jz c524
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o524
c524:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o525:
cmp byte [tape + r8], 0
jz c525
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o525
c525:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 17
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
o526:
cmp byte [tape + r8], 0
jz c526
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o526
c526:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o527:
cmp byte [tape + r8], 0
jz c527
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o527
c527:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 14
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add byte [tape + r8], 3
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add byte [tape + r8], 9
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 14
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o523
c523:
add r8, 228
and r8, 0xFFFF
push 1
push 229
call ms
sub r8, 229
and r8, 0xFFFF
o528:
cmp byte [tape + r8], 0
jz c528
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o528
c528:
add r8, 1
and r8, 0xFFFF
o529:
cmp byte [tape + r8], 0
jz c529
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o52a:
cmp byte [tape + r8], 0
jz c52a
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o52a
c52a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o52b:
cmp byte [tape + r8], 0
jz c52b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o52b
c52b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o52c:
cmp byte [tape + r8], 0
jz c52c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o52c
c52c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o52d:
cmp byte [tape + r8], 0
jz c52d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o52d
c52d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o52e:
cmp byte [tape + r8], 0
jz c52e
add r8, 221
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 230
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o52e
c52e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o529
c529:
sub r8, 1
and r8, 0xFFFF
o52f:
cmp byte [tape + r8], 0
jz c52f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o52f
c52f:
add r8, 1
and r8, 0xFFFF
o530:
cmp byte [tape + r8], 0
jz c530
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o531:
cmp byte [tape + r8], 0
jz c531
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o531
c531:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o532:
cmp byte [tape + r8], 0
jz c532
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o532
c532:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 21
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o533:
cmp byte [tape + r8], 0
jz c533
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o533
c533:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o534:
cmp byte [tape + r8], 0
jz c534
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o534
c534:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add byte [tape + r8], 8
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o530
c530:
add r8, 229
and r8, 0xFFFF
push 1
push 230
call ms
sub r8, 230
and r8, 0xFFFF
o535:
cmp byte [tape + r8], 0
jz c535
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o535
c535:
add r8, 1
and r8, 0xFFFF
o536:
cmp byte [tape + r8], 0
jz c536
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o537:
cmp byte [tape + r8], 0
jz c537
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o537
c537:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o538:
cmp byte [tape + r8], 0
jz c538
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o538
c538:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o539:
cmp byte [tape + r8], 0
jz c539
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o539
c539:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o53a:
cmp byte [tape + r8], 0
jz c53a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o53a
c53a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o53b:
cmp byte [tape + r8], 0
jz c53b
add r8, 222
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 231
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o53b
c53b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o536
c536:
sub r8, 1
and r8, 0xFFFF
o53c:
cmp byte [tape + r8], 0
jz c53c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o53c
c53c:
add r8, 1
and r8, 0xFFFF
o53d:
cmp byte [tape + r8], 0
jz c53d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 19
o53e:
cmp byte [tape + r8], 0
jz c53e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o53e
c53e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o53f:
cmp byte [tape + r8], 0
jz c53f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o53f
c53f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
o540:
cmp byte [tape + r8], 0
jz c540
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o540
c540:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o541:
cmp byte [tape + r8], 0
jz c541
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o541
c541:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o542:
cmp byte [tape + r8], 0
jz c542
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o542
c542:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 11
call o
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 20
and r8, 0xFFFF
o543:
cmp byte [tape + r8], 0
jz c543
sub r8, 20
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o543
c543:
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o544:
cmp byte [tape + r8], 0
jz c544
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o544
c544:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o545:
cmp byte [tape + r8], 0
jz c545
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o545
c545:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o546:
cmp byte [tape + r8], 0
jz c546
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o546
c546:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o547:
cmp byte [tape + r8], 0
jz c547
add r8, 223
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o547
c547:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o53d
c53d:
sub r8, 1
and r8, 0xFFFF
o548:
cmp byte [tape + r8], 0
jz c548
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o548
c548:
add r8, 1
and r8, 0xFFFF
o549:
cmp byte [tape + r8], 0
jz c549
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o54a:
cmp byte [tape + r8], 0
jz c54a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o54a
c54a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o549
c549:
add r8, 231
and r8, 0xFFFF
push 1
push 232
call ms
sub r8, 232
and r8, 0xFFFF
o54b:
cmp byte [tape + r8], 0
jz c54b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o54b
c54b:
add r8, 1
and r8, 0xFFFF
o54c:
cmp byte [tape + r8], 0
jz c54c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o54c
c54c:
add r8, 230
and r8, 0xFFFF
push 1
push 231
call ms
sub r8, 231
and r8, 0xFFFF
o54d:
cmp byte [tape + r8], 0
jz c54d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o54d
c54d:
add r8, 1
and r8, 0xFFFF
o54e:
cmp byte [tape + r8], 0
jz c54e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o54f:
cmp byte [tape + r8], 0
jz c54f
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o54f
c54f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o550:
cmp byte [tape + r8], 0
jz c550
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o550
c550:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o551:
cmp byte [tape + r8], 0
jz c551
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o551
c551:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o552:
cmp byte [tape + r8], 0
jz c552
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o552
c552:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o553:
cmp byte [tape + r8], 0
jz c553
add r8, 224
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 233
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o553
c553:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o54e
c54e:
sub r8, 1
and r8, 0xFFFF
o554:
cmp byte [tape + r8], 0
jz c554
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o554
c554:
add r8, 1
and r8, 0xFFFF
o555:
cmp byte [tape + r8], 0
jz c555
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o556:
cmp byte [tape + r8], 0
jz c556
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o556
c556:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o557:
cmp byte [tape + r8], 0
jz c557
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o557
c557:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o555
c555:
add r8, 232
and r8, 0xFFFF
push 1
push 233
call ms
sub r8, 44
and r8, 0xFFFF
push 1
push 189
call ms
sub r8, 189
and r8, 0xFFFF
o558:
cmp byte [tape + r8], 0
jz c558
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o558
c558:
add r8, 1
and r8, 0xFFFF
o559:
cmp byte [tape + r8], 0
jz c559
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o559
c559:
add r8, 234
and r8, 0xFFFF
push 1
push 235
call ms
sub r8, 235
and r8, 0xFFFF
o55a:
cmp byte [tape + r8], 0
jz c55a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o55a
c55a:
add r8, 1
and r8, 0xFFFF
o55b:
cmp byte [tape + r8], 0
jz c55b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o55c:
cmp byte [tape + r8], 0
jz c55c
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o55c
c55c:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o55d:
cmp byte [tape + r8], 0
jz c55d
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o55d
c55d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o55e:
cmp byte [tape + r8], 0
jz c55e
add r8, 2
and r8, 0xFFFF
o55f:
cmp byte [tape + r8], 0
jz c55f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o55f
c55f:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o560:
cmp byte [tape + r8], 0
jz c560
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o560
c560:
sub r8, 3
and r8, 0xFFFF
o561:
cmp byte [tape + r8], 0
jz c561
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o561
c561:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o55e
c55e:
add r8, 2
and r8, 0xFFFF
o562:
cmp byte [tape + r8], 0
jz c562
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o562
c562:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
o563:
cmp byte [tape + r8], 0
jz c563
add r8, 227
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 236
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o563
c563:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o55b
c55b:
sub r8, 1
and r8, 0xFFFF
o564:
cmp byte [tape + r8], 0
jz c564
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o564
c564:
add r8, 1
and r8, 0xFFFF
o565:
cmp byte [tape + r8], 0
jz c565
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o566:
cmp byte [tape + r8], 0
jz c566
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o566
c566:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o567:
cmp byte [tape + r8], 0
jz c567
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o567
c567:
add r8, 1
and r8, 0xFFFF
o568:
cmp byte [tape + r8], 0
jz c568
sub r8, 3
and r8, 0xFFFF
o569:
cmp byte [tape + r8], 0
jz c569
sub r8, 2
and r8, 0xFFFF
jmp o569
c569:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o56a:
cmp byte [tape + r8], 0
jz c56a
add r8, 2
and r8, 0xFFFF
jmp o56a
c56a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o568
c568:
sub r8, 3
and r8, 0xFFFF
o56b:
cmp byte [tape + r8], 0
jz c56b
sub r8, 2
and r8, 0xFFFF
jmp o56b
c56b:
add r8, 1
and r8, 0xFFFF
o56c:
cmp byte [tape + r8], 0
jz c56c
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o56c
c56c:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o56d:
cmp byte [tape + r8], 0
jz c56d
add r8, 2
and r8, 0xFFFF
jmp o56d
c56d:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o56e:
cmp byte [tape + r8], 0
jz c56e
sub r8, 2
and r8, 0xFFFF
jmp o56e
c56e:
add r8, 1
and r8, 0xFFFF
o56f:
cmp byte [tape + r8], 0
jz c56f
add r8, 1
and r8, 0xFFFF
o570:
cmp byte [tape + r8], 0
jz c570
add r8, 2
and r8, 0xFFFF
jmp o570
c570:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o571:
cmp byte [tape + r8], 0
jz c571
sub r8, 2
and r8, 0xFFFF
jmp o571
c571:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o56f
c56f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o572:
cmp byte [tape + r8], 0
jz c572
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o572
c572:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o573:
cmp byte [tape + r8], 0
jz c573
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o573
c573:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o574:
cmp byte [tape + r8], 0
jz c574
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o574
c574:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o575:
cmp byte [tape + r8], 0
jz c575
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o575
c575:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o576:
cmp byte [tape + r8], 0
jz c576
add r8, 228
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 237
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o576
c576:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o565
c565:
sub r8, 1
and r8, 0xFFFF
o577:
cmp byte [tape + r8], 0
jz c577
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o577
c577:
add r8, 1
and r8, 0xFFFF
o578:
cmp byte [tape + r8], 0
jz c578
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o579:
cmp byte [tape + r8], 0
jz c579
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o579
c579:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o57a:
cmp byte [tape + r8], 0
jz c57a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o57a
c57a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 112
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o578
c578:
add r8, 236
and r8, 0xFFFF
push 1
push 237
call ms
sub r8, 237
and r8, 0xFFFF
o57b:
cmp byte [tape + r8], 0
jz c57b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o57b
c57b:
add r8, 1
and r8, 0xFFFF
o57c:
cmp byte [tape + r8], 0
jz c57c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o57d:
cmp byte [tape + r8], 0
jz c57d
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o57d
c57d:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o57e:
cmp byte [tape + r8], 0
jz c57e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o57e
c57e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 232
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
add r8, 226
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 235
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o57c
c57c:
add r8, 235
and r8, 0xFFFF
push 1
push 236
call ms
sub r8, 236
and r8, 0xFFFF
o57f:
cmp byte [tape + r8], 0
jz c57f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o57f
c57f:
add r8, 1
and r8, 0xFFFF
o580:
cmp byte [tape + r8], 0
jz c580
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o581:
cmp byte [tape + r8], 0
jz c581
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o581
c581:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o582:
cmp byte [tape + r8], 0
jz c582
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o582
c582:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o583:
cmp byte [tape + r8], 0
jz c583
add r8, 2
and r8, 0xFFFF
o584:
cmp byte [tape + r8], 0
jz c584
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o584
c584:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o585:
cmp byte [tape + r8], 0
jz c585
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o585
c585:
sub r8, 3
and r8, 0xFFFF
o586:
cmp byte [tape + r8], 0
jz c586
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o586
c586:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o583
c583:
add r8, 2
and r8, 0xFFFF
o587:
cmp byte [tape + r8], 0
jz c587
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o587
c587:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o588:
cmp byte [tape + r8], 0
jz c588
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o588
c588:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o589:
cmp byte [tape + r8], 0
jz c589
add r8, 229
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 238
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o589
c589:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o580
c580:
sub r8, 1
and r8, 0xFFFF
o58a:
cmp byte [tape + r8], 0
jz c58a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o58a
c58a:
add r8, 1
and r8, 0xFFFF
o58b:
cmp byte [tape + r8], 0
jz c58b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o58c:
cmp byte [tape + r8], 0
jz c58c
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o58c
c58c:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o58d:
cmp byte [tape + r8], 0
jz c58d
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o58d
c58d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o58e:
cmp byte [tape + r8], 0
jz c58e
add r8, 2
and r8, 0xFFFF
o58f:
cmp byte [tape + r8], 0
jz c58f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o58f
c58f:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o590:
cmp byte [tape + r8], 0
jz c590
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o590
c590:
sub r8, 3
and r8, 0xFFFF
o591:
cmp byte [tape + r8], 0
jz c591
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o591
c591:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o58e
c58e:
add r8, 2
and r8, 0xFFFF
o592:
cmp byte [tape + r8], 0
jz c592
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o592
c592:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o593:
cmp byte [tape + r8], 0
jz c593
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o593
c593:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o594:
cmp byte [tape + r8], 0
jz c594
add r8, 230
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 239
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o594
c594:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o58b
c58b:
sub r8, 1
and r8, 0xFFFF
o595:
cmp byte [tape + r8], 0
jz c595
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o595
c595:
add r8, 1
and r8, 0xFFFF
o596:
cmp byte [tape + r8], 0
jz c596
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o597:
cmp byte [tape + r8], 0
jz c597
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o597
c597:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o596
c596:
add r8, 238
and r8, 0xFFFF
push 1
push 239
call ms
sub r8, 239
and r8, 0xFFFF
o598:
cmp byte [tape + r8], 0
jz c598
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o598
c598:
add r8, 1
and r8, 0xFFFF
o599:
cmp byte [tape + r8], 0
jz c599
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 240
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 240
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o599
c599:
add r8, 237
and r8, 0xFFFF
push 1
push 238
call ms
sub r8, 238
and r8, 0xFFFF
o59a:
cmp byte [tape + r8], 0
jz c59a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o59a
c59a:
add r8, 1
and r8, 0xFFFF
o59b:
cmp byte [tape + r8], 0
jz c59b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o59c:
cmp byte [tape + r8], 0
jz c59c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o59c
c59c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o59b
c59b:
add r8, 239
and r8, 0xFFFF
push 1
push 240
call ms
sub r8, 240
and r8, 0xFFFF
o59d:
cmp byte [tape + r8], 0
jz c59d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o59d
c59d:
add r8, 1
and r8, 0xFFFF
o59e:
cmp byte [tape + r8], 0
jz c59e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o59f:
cmp byte [tape + r8], 0
jz c59f
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o59f
c59f:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5a0:
cmp byte [tape + r8], 0
jz c5a0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5a0
c5a0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o5a1:
cmp byte [tape + r8], 0
jz c5a1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o5a1
c5a1:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o5a2:
cmp byte [tape + r8], 0
jz c5a2
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5a2
c5a2:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5a3:
cmp byte [tape + r8], 0
jz c5a3
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5a3
c5a3:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o5a4:
cmp byte [tape + r8], 0
jz c5a4
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o5a4
c5a4:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o5a5:
cmp byte [tape + r8], 0
jz c5a5
call z
add r8, 8
and r8, 0xFFFF
o5a6:
cmp byte [tape + r8], 0
jz c5a6
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5a6
c5a6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o5a7:
cmp byte [tape + r8], 0
jz c5a7
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o5a7
c5a7:
jmp o5a5
c5a5:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o5a8:
cmp byte [tape + r8], 0
jz c5a8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5a8
c5a8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o5a9:
cmp byte [tape + r8], 0
jz c5a9
add r8, 232
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 241
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o5a9
c5a9:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o59e
c59e:
sub r8, 1
and r8, 0xFFFF
o5aa:
cmp byte [tape + r8], 0
jz c5aa
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5aa
c5aa:
add r8, 1
and r8, 0xFFFF
o5ab:
cmp byte [tape + r8], 0
jz c5ab
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o5ac:
cmp byte [tape + r8], 0
jz c5ac
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5ac
c5ac:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5ab
c5ab:
add r8, 240
and r8, 0xFFFF
push 1
push 241
call ms
sub r8, 241
and r8, 0xFFFF
o5ad:
cmp byte [tape + r8], 0
jz c5ad
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5ad
c5ad:
add r8, 1
and r8, 0xFFFF
o5ae:
cmp byte [tape + r8], 0
jz c5ae
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
o5af:
cmp byte [tape + r8], 0
jz c5af
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5af
c5af:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5b0:
cmp byte [tape + r8], 0
jz c5b0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5b0
c5b0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o5b1:
cmp byte [tape + r8], 0
jz c5b1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o5b1
c5b1:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o5b2:
cmp byte [tape + r8], 0
jz c5b2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5b2
c5b2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o5b3:
cmp byte [tape + r8], 0
jz c5b3
add r8, 233
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 242
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o5b3
c5b3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5ae
c5ae:
sub r8, 1
and r8, 0xFFFF
o5b4:
cmp byte [tape + r8], 0
jz c5b4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5b4
c5b4:
add r8, 1
and r8, 0xFFFF
o5b5:
cmp byte [tape + r8], 0
jz c5b5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o5b6:
cmp byte [tape + r8], 0
jz c5b6
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5b6
c5b6:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o5b7:
cmp byte [tape + r8], 0
jz c5b7
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5b7
c5b7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o5b8:
cmp byte [tape + r8], 0
jz c5b8
add r8, 2
and r8, 0xFFFF
o5b9:
cmp byte [tape + r8], 0
jz c5b9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5b9
c5b9:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o5ba:
cmp byte [tape + r8], 0
jz c5ba
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o5ba
c5ba:
sub r8, 3
and r8, 0xFFFF
o5bb:
cmp byte [tape + r8], 0
jz c5bb
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5bb
c5bb:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5b8
c5b8:
add r8, 2
and r8, 0xFFFF
o5bc:
cmp byte [tape + r8], 0
jz c5bc
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o5bc
c5bc:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o5bd:
cmp byte [tape + r8], 0
jz c5bd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5bd
c5bd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o5be:
cmp byte [tape + r8], 0
jz c5be
add r8, 234
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 243
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o5be
c5be:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5b5
c5b5:
sub r8, 1
and r8, 0xFFFF
o5bf:
cmp byte [tape + r8], 0
jz c5bf
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5bf
c5bf:
add r8, 1
and r8, 0xFFFF
o5c0:
cmp byte [tape + r8], 0
jz c5c0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5c0
c5c0:
add r8, 243
and r8, 0xFFFF
push 1
push 244
call ms
sub r8, 244
and r8, 0xFFFF
o5c1:
cmp byte [tape + r8], 0
jz c5c1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5c1
c5c1:
add r8, 1
and r8, 0xFFFF
o5c2:
cmp byte [tape + r8], 0
jz c5c2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o5c3:
cmp byte [tape + r8], 0
jz c5c3
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5c3
c5c3:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o5c4:
cmp byte [tape + r8], 0
jz c5c4
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5c4
c5c4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o5c5:
cmp byte [tape + r8], 0
jz c5c5
add r8, 2
and r8, 0xFFFF
o5c6:
cmp byte [tape + r8], 0
jz c5c6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5c6
c5c6:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o5c7:
cmp byte [tape + r8], 0
jz c5c7
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o5c7
c5c7:
sub r8, 3
and r8, 0xFFFF
o5c8:
cmp byte [tape + r8], 0
jz c5c8
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5c8
c5c8:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5c5
c5c5:
add r8, 2
and r8, 0xFFFF
o5c9:
cmp byte [tape + r8], 0
jz c5c9
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o5c9
c5c9:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
o5ca:
cmp byte [tape + r8], 0
jz c5ca
add r8, 236
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 245
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o5ca
c5ca:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5c2
c5c2:
sub r8, 1
and r8, 0xFFFF
o5cb:
cmp byte [tape + r8], 0
jz c5cb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5cb
c5cb:
add r8, 1
and r8, 0xFFFF
o5cc:
cmp byte [tape + r8], 0
jz c5cc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o5cd:
cmp byte [tape + r8], 0
jz c5cd
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5cd
c5cd:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o5ce:
cmp byte [tape + r8], 0
jz c5ce
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o5ce
c5ce:
add r8, 1
and r8, 0xFFFF
o5cf:
cmp byte [tape + r8], 0
jz c5cf
sub r8, 3
and r8, 0xFFFF
o5d0:
cmp byte [tape + r8], 0
jz c5d0
sub r8, 2
and r8, 0xFFFF
jmp o5d0
c5d0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5d1:
cmp byte [tape + r8], 0
jz c5d1
add r8, 2
and r8, 0xFFFF
jmp o5d1
c5d1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5cf
c5cf:
sub r8, 3
and r8, 0xFFFF
o5d2:
cmp byte [tape + r8], 0
jz c5d2
sub r8, 2
and r8, 0xFFFF
jmp o5d2
c5d2:
add r8, 1
and r8, 0xFFFF
o5d3:
cmp byte [tape + r8], 0
jz c5d3
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5d3
c5d3:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o5d4:
cmp byte [tape + r8], 0
jz c5d4
add r8, 2
and r8, 0xFFFF
jmp o5d4
c5d4:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o5d5:
cmp byte [tape + r8], 0
jz c5d5
sub r8, 2
and r8, 0xFFFF
jmp o5d5
c5d5:
add r8, 1
and r8, 0xFFFF
o5d6:
cmp byte [tape + r8], 0
jz c5d6
add r8, 1
and r8, 0xFFFF
o5d7:
cmp byte [tape + r8], 0
jz c5d7
add r8, 2
and r8, 0xFFFF
jmp o5d7
c5d7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o5d8:
cmp byte [tape + r8], 0
jz c5d8
sub r8, 2
and r8, 0xFFFF
jmp o5d8
c5d8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5d6
c5d6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o5d9:
cmp byte [tape + r8], 0
jz c5d9
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5d9
c5d9:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5da:
cmp byte [tape + r8], 0
jz c5da
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5da
c5da:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o5db:
cmp byte [tape + r8], 0
jz c5db
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o5db
c5db:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o5dc:
cmp byte [tape + r8], 0
jz c5dc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5dc
c5dc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o5dd:
cmp byte [tape + r8], 0
jz c5dd
add r8, 237
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 246
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o5dd
c5dd:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5cc
c5cc:
sub r8, 1
and r8, 0xFFFF
o5de:
cmp byte [tape + r8], 0
jz c5de
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5de
c5de:
add r8, 1
and r8, 0xFFFF
o5df:
cmp byte [tape + r8], 0
jz c5df
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
call o
call o
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o5e0:
cmp byte [tape + r8], 0
jz c5e0
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5e0
c5e0:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5e1:
cmp byte [tape + r8], 0
jz c5e1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5e1
c5e1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o5e2:
cmp byte [tape + r8], 0
jz c5e2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o5e2
c5e2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o5e3:
cmp byte [tape + r8], 0
jz c5e3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5e3
c5e3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o5e4:
cmp byte [tape + r8], 0
jz c5e4
add r8, 238
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 247
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o5e4
c5e4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5df
c5df:
sub r8, 1
and r8, 0xFFFF
o5e5:
cmp byte [tape + r8], 0
jz c5e5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5e5
c5e5:
add r8, 1
and r8, 0xFFFF
o5e6:
cmp byte [tape + r8], 0
jz c5e6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o5e7:
cmp byte [tape + r8], 0
jz c5e7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5e7
c5e7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o5e8:
cmp byte [tape + r8], 0
jz c5e8
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5e8
c5e8:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5e9:
cmp byte [tape + r8], 0
jz c5e9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5e9
c5e9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o5ea:
cmp byte [tape + r8], 0
jz c5ea
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o5ea
c5ea:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o5eb:
cmp byte [tape + r8], 0
jz c5eb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5eb
c5eb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o5ec:
cmp byte [tape + r8], 0
jz c5ec
add r8, 239
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 248
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o5ec
c5ec:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5e6
c5e6:
sub r8, 1
and r8, 0xFFFF
o5ed:
cmp byte [tape + r8], 0
jz c5ed
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5ed
c5ed:
add r8, 1
and r8, 0xFFFF
o5ee:
cmp byte [tape + r8], 0
jz c5ee
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o5ef:
cmp byte [tape + r8], 0
jz c5ef
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5ef
c5ef:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5ee
c5ee:
add r8, 247
and r8, 0xFFFF
push 1
push 248
call ms
sub r8, 248
and r8, 0xFFFF
o5f0:
cmp byte [tape + r8], 0
jz c5f0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5f0
c5f0:
add r8, 1
and r8, 0xFFFF
o5f1:
cmp byte [tape + r8], 0
jz c5f1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o5f2:
cmp byte [tape + r8], 0
jz c5f2
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5f2
c5f2:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5f3:
cmp byte [tape + r8], 0
jz c5f3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5f3
c5f3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o5f4:
cmp byte [tape + r8], 0
jz c5f4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o5f4
c5f4:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o5f5:
cmp byte [tape + r8], 0
jz c5f5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5f5
c5f5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o5f6:
cmp byte [tape + r8], 0
jz c5f6
add r8, 240
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 249
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o5f6
c5f6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5f1
c5f1:
sub r8, 1
and r8, 0xFFFF
o5f7:
cmp byte [tape + r8], 0
jz c5f7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5f7
c5f7:
add r8, 1
and r8, 0xFFFF
o5f8:
cmp byte [tape + r8], 0
jz c5f8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o5f9:
cmp byte [tape + r8], 0
jz c5f9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5f9
c5f9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5f8
c5f8:
add r8, 248
and r8, 0xFFFF
push 1
push 249
call ms
sub r8, 249
and r8, 0xFFFF
o5fa:
cmp byte [tape + r8], 0
jz c5fa
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5fa
c5fa:
add r8, 1
and r8, 0xFFFF
o5fb:
cmp byte [tape + r8], 0
jz c5fb
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o5fc:
cmp byte [tape + r8], 0
jz c5fc
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5fc
c5fc:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o5fd:
cmp byte [tape + r8], 0
jz c5fd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5fd
c5fd:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o5fe:
cmp byte [tape + r8], 0
jz c5fe
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o5fe
c5fe:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o5ff:
cmp byte [tape + r8], 0
jz c5ff
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5ff
c5ff:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o600:
cmp byte [tape + r8], 0
jz c600
add r8, 241
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 250
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o600
c600:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o5fb
c5fb:
sub r8, 1
and r8, 0xFFFF
o601:
cmp byte [tape + r8], 0
jz c601
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o601
c601:
add r8, 1
and r8, 0xFFFF
o602:
cmp byte [tape + r8], 0
jz c602
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o603:
cmp byte [tape + r8], 0
jz c603
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o603
c603:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o602
c602:
add r8, 249
and r8, 0xFFFF
push 1
push 250
call ms
sub r8, 3
and r8, 0xFFFF
push 1
push 247
call ms
sub r8, 247
and r8, 0xFFFF
o604:
cmp byte [tape + r8], 0
jz c604
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o604
c604:
add r8, 1
and r8, 0xFFFF
o605:
cmp byte [tape + r8], 0
jz c605
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o606:
cmp byte [tape + r8], 0
jz c606
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o606
c606:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o607:
cmp byte [tape + r8], 0
jz c607
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o607
c607:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o608:
cmp byte [tape + r8], 0
jz c608
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o608
c608:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o609:
cmp byte [tape + r8], 0
jz c609
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o609
c609:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o60a:
cmp byte [tape + r8], 0
jz c60a
add r8, 242
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 251
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o60a
c60a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o605
c605:
sub r8, 1
and r8, 0xFFFF
o60b:
cmp byte [tape + r8], 0
jz c60b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o60b
c60b:
add r8, 1
and r8, 0xFFFF
o60c:
cmp byte [tape + r8], 0
jz c60c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o60d:
cmp byte [tape + r8], 0
jz c60d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o60d
c60d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o60c
c60c:
add r8, 250
and r8, 0xFFFF
push 1
push 251
call ms
sub r8, 251
and r8, 0xFFFF
o60e:
cmp byte [tape + r8], 0
jz c60e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o60e
c60e:
add r8, 1
and r8, 0xFFFF
o60f:
cmp byte [tape + r8], 0
jz c60f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o610:
cmp byte [tape + r8], 0
jz c610
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o610
c610:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o611:
cmp byte [tape + r8], 0
jz c611
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o611
c611:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o612:
cmp byte [tape + r8], 0
jz c612
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o612
c612:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o613:
cmp byte [tape + r8], 0
jz c613
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o613
c613:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o614:
cmp byte [tape + r8], 0
jz c614
add r8, 243
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 252
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o614
c614:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o60f
c60f:
sub r8, 1
and r8, 0xFFFF
o615:
cmp byte [tape + r8], 0
jz c615
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o615
c615:
add r8, 1
and r8, 0xFFFF
o616:
cmp byte [tape + r8], 0
jz c616
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o617:
cmp byte [tape + r8], 0
jz c617
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o617
c617:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o616
c616:
add r8, 251
and r8, 0xFFFF
push 1
push 252
call ms
sub r8, 252
and r8, 0xFFFF
o618:
cmp byte [tape + r8], 0
jz c618
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o618
c618:
add r8, 1
and r8, 0xFFFF
o619:
cmp byte [tape + r8], 0
jz c619
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o61a:
cmp byte [tape + r8], 0
jz c61a
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o61a
c61a:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o61b:
cmp byte [tape + r8], 0
jz c61b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o61b
c61b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o61c:
cmp byte [tape + r8], 0
jz c61c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o61c
c61c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o61d:
cmp byte [tape + r8], 0
jz c61d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o61d
c61d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o61e:
cmp byte [tape + r8], 0
jz c61e
add r8, 244
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 253
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o61e
c61e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o619
c619:
sub r8, 1
and r8, 0xFFFF
o61f:
cmp byte [tape + r8], 0
jz c61f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o61f
c61f:
add r8, 1
and r8, 0xFFFF
o620:
cmp byte [tape + r8], 0
jz c620
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o621:
cmp byte [tape + r8], 0
jz c621
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o621
c621:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o620
c620:
add r8, 252
and r8, 0xFFFF
push 1
push 253
call ms
sub r8, 253
and r8, 0xFFFF
o622:
cmp byte [tape + r8], 0
jz c622
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o622
c622:
add r8, 1
and r8, 0xFFFF
o623:
cmp byte [tape + r8], 0
jz c623
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o624:
cmp byte [tape + r8], 0
jz c624
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o624
c624:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o625:
cmp byte [tape + r8], 0
jz c625
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o625
c625:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o626:
cmp byte [tape + r8], 0
jz c626
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o626
c626:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o627:
cmp byte [tape + r8], 0
jz c627
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o627
c627:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o628:
cmp byte [tape + r8], 0
jz c628
add r8, 245
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 254
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o628
c628:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o623
c623:
sub r8, 1
and r8, 0xFFFF
o629:
cmp byte [tape + r8], 0
jz c629
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o629
c629:
add r8, 1
and r8, 0xFFFF
o62a:
cmp byte [tape + r8], 0
jz c62a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o62b:
cmp byte [tape + r8], 0
jz c62b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o62b
c62b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o62a
c62a:
add r8, 253
and r8, 0xFFFF
push 1
push 254
call ms
sub r8, 254
and r8, 0xFFFF
o62c:
cmp byte [tape + r8], 0
jz c62c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o62c
c62c:
add r8, 1
and r8, 0xFFFF
o62d:
cmp byte [tape + r8], 0
jz c62d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o62e:
cmp byte [tape + r8], 0
jz c62e
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o62e
c62e:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o62f:
cmp byte [tape + r8], 0
jz c62f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o62f
c62f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o630:
cmp byte [tape + r8], 0
jz c630
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o630
c630:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o631:
cmp byte [tape + r8], 0
jz c631
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o631
c631:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o632:
cmp byte [tape + r8], 0
jz c632
add r8, 246
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 255
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o632
c632:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o62d
c62d:
sub r8, 1
and r8, 0xFFFF
o633:
cmp byte [tape + r8], 0
jz c633
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o633
c633:
add r8, 1
and r8, 0xFFFF
o634:
cmp byte [tape + r8], 0
jz c634
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o635:
cmp byte [tape + r8], 0
jz c635
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o635
c635:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o634
c634:
add r8, 254
and r8, 0xFFFF
push 1
push 255
call ms
sub r8, 255
and r8, 0xFFFF
o636:
cmp byte [tape + r8], 0
jz c636
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o636
c636:
add r8, 1
and r8, 0xFFFF
o637:
cmp byte [tape + r8], 0
jz c637
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o638:
cmp byte [tape + r8], 0
jz c638
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o638
c638:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o639:
cmp byte [tape + r8], 0
jz c639
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o639
c639:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o63a:
cmp byte [tape + r8], 0
jz c63a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o63a
c63a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o63b:
cmp byte [tape + r8], 0
jz c63b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o63b
c63b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o63c:
cmp byte [tape + r8], 0
jz c63c
add r8, 247
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 256
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o63c
c63c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o637
c637:
sub r8, 1
and r8, 0xFFFF
o63d:
cmp byte [tape + r8], 0
jz c63d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o63d
c63d:
add r8, 1
and r8, 0xFFFF
o63e:
cmp byte [tape + r8], 0
jz c63e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o63f:
cmp byte [tape + r8], 0
jz c63f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o63f
c63f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o63e
c63e:
add r8, 255
and r8, 0xFFFF
push 1
push 256
call ms
sub r8, 256
and r8, 0xFFFF
o640:
cmp byte [tape + r8], 0
jz c640
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o640
c640:
add r8, 1
and r8, 0xFFFF
o641:
cmp byte [tape + r8], 0
jz c641
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o642:
cmp byte [tape + r8], 0
jz c642
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o642
c642:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o643:
cmp byte [tape + r8], 0
jz c643
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o643
c643:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o644:
cmp byte [tape + r8], 0
jz c644
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o644
c644:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o645:
cmp byte [tape + r8], 0
jz c645
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o645
c645:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o646:
cmp byte [tape + r8], 0
jz c646
add r8, 248
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 257
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o646
c646:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o641
c641:
sub r8, 1
and r8, 0xFFFF
o647:
cmp byte [tape + r8], 0
jz c647
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o647
c647:
add r8, 1
and r8, 0xFFFF
o648:
cmp byte [tape + r8], 0
jz c648
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o649:
cmp byte [tape + r8], 0
jz c649
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o649
c649:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o648
c648:
add r8, 256
and r8, 0xFFFF
push 1
push 257
call ms
sub r8, 257
and r8, 0xFFFF
o64a:
cmp byte [tape + r8], 0
jz c64a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o64a
c64a:
add r8, 1
and r8, 0xFFFF
o64b:
cmp byte [tape + r8], 0
jz c64b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o64c:
cmp byte [tape + r8], 0
jz c64c
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o64c
c64c:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o64d:
cmp byte [tape + r8], 0
jz c64d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o64d
c64d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o64e:
cmp byte [tape + r8], 0
jz c64e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o64e
c64e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o64f:
cmp byte [tape + r8], 0
jz c64f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o64f
c64f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o650:
cmp byte [tape + r8], 0
jz c650
add r8, 249
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 258
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o650
c650:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o64b
c64b:
sub r8, 1
and r8, 0xFFFF
o651:
cmp byte [tape + r8], 0
jz c651
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o651
c651:
add r8, 1
and r8, 0xFFFF
o652:
cmp byte [tape + r8], 0
jz c652
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o653:
cmp byte [tape + r8], 0
jz c653
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o653
c653:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o652
c652:
add r8, 257
and r8, 0xFFFF
push 1
push 258
call ms
sub r8, 258
and r8, 0xFFFF
o654:
cmp byte [tape + r8], 0
jz c654
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o654
c654:
add r8, 1
and r8, 0xFFFF
o655:
cmp byte [tape + r8], 0
jz c655
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o656:
cmp byte [tape + r8], 0
jz c656
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o656
c656:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o657:
cmp byte [tape + r8], 0
jz c657
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o657
c657:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o658:
cmp byte [tape + r8], 0
jz c658
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o658
c658:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o659:
cmp byte [tape + r8], 0
jz c659
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o659
c659:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o65a:
cmp byte [tape + r8], 0
jz c65a
add r8, 250
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 259
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o65a
c65a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o655
c655:
sub r8, 1
and r8, 0xFFFF
o65b:
cmp byte [tape + r8], 0
jz c65b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o65b
c65b:
add r8, 1
and r8, 0xFFFF
o65c:
cmp byte [tape + r8], 0
jz c65c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o65d:
cmp byte [tape + r8], 0
jz c65d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o65d
c65d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
o65e:
cmp byte [tape + r8], 0
jz c65e
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o65e
c65e:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o65f:
cmp byte [tape + r8], 0
jz c65f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o65f
c65f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o660:
cmp byte [tape + r8], 0
jz c660
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o660
c660:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o661:
cmp byte [tape + r8], 0
jz c661
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o661
c661:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o662:
cmp byte [tape + r8], 0
jz c662
add r8, 251
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 260
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o662
c662:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o65c
c65c:
sub r8, 1
and r8, 0xFFFF
o663:
cmp byte [tape + r8], 0
jz c663
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o663
c663:
add r8, 1
and r8, 0xFFFF
o664:
cmp byte [tape + r8], 0
jz c664
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o665:
cmp byte [tape + r8], 0
jz c665
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o665
c665:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 258
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 261
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o664
c664:
add r8, 259
and r8, 0xFFFF
push 1
push 260
call ms
sub r8, 260
and r8, 0xFFFF
o666:
cmp byte [tape + r8], 0
jz c666
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o666
c666:
add r8, 1
and r8, 0xFFFF
o667:
cmp byte [tape + r8], 0
jz c667
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o668:
cmp byte [tape + r8], 0
jz c668
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o668
c668:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o667
c667:
add r8, 260
and r8, 0xFFFF
push 1
push 261
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 259
call ms
sub r8, 259
and r8, 0xFFFF
o669:
cmp byte [tape + r8], 0
jz c669
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o669
c669:
add r8, 1
and r8, 0xFFFF
o66a:
cmp byte [tape + r8], 0
jz c66a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o66b:
cmp byte [tape + r8], 0
jz c66b
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o66b
c66b:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
o66c:
cmp byte [tape + r8], 0
jz c66c
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
o66d:
cmp byte [tape + r8], 0
jz c66d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o66d
c66d:
sub r8, 3
and r8, 0xFFFF
push 1
push 3
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o66e:
cmp byte [tape + r8], 0
jz c66e
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o66e
c66e:
sub r8, 4
and r8, 0xFFFF
o66f:
cmp byte [tape + r8], 0
jz c66f
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o66f
c66f:
add r8, 2
and r8, 0xFFFF
o670:
cmp byte [tape + r8], 0
jz c670
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o670
c670:
sub r8, 2
and r8, 0xFFFF
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o671:
cmp byte [tape + r8], 0
jz c671
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o671
c671:
sub r8, 4
and r8, 0xFFFF
o672:
cmp byte [tape + r8], 0
jz c672
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o672
c672:
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o66c
c66c:
sub r8, 6
and r8, 0xFFFF
o673:
cmp byte [tape + r8], 0
jz c673
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
o674:
cmp byte [tape + r8], 0
jz c674
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o674
c674:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
jmp o673
c673:
add r8, 1
and r8, 0xFFFF
o675:
cmp byte [tape + r8], 0
jz c675
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 2
call m
add r8, 2
and r8, 0xFFFF
call o
call z
jmp o675
c675:
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 3
call m
add r8, 3
and r8, 0xFFFF
call o
call z
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o66a
c66a:
add r8, 245
and r8, 0xFFFF
push 1
push 246
call ms
sub r8, 246
and r8, 0xFFFF
o676:
cmp byte [tape + r8], 0
jz c676
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o676
c676:
add r8, 1
and r8, 0xFFFF
o677:
cmp byte [tape + r8], 0
jz c677
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o678:
cmp byte [tape + r8], 0
jz c678
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o678
c678:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o679:
cmp byte [tape + r8], 0
jz c679
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o679
c679:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 232
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
add r8, 235
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 244
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o677
c677:
add r8, 244
and r8, 0xFFFF
push 1
push 245
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 243
call ms
sub r8, 243
and r8, 0xFFFF
o67a:
cmp byte [tape + r8], 0
jz c67a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o67a
c67a:
add r8, 1
and r8, 0xFFFF
o67b:
cmp byte [tape + r8], 0
jz c67b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 262
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 262
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o67b
c67b:
add r8, 241
and r8, 0xFFFF
push 1
push 242
call ms
sub r8, 242
and r8, 0xFFFF
o67c:
cmp byte [tape + r8], 0
jz c67c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o67c
c67c:
add r8, 1
and r8, 0xFFFF
o67d:
cmp byte [tape + r8], 0
jz c67d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o67e:
cmp byte [tape + r8], 0
jz c67e
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o67e
c67e:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o67f:
cmp byte [tape + r8], 0
jz c67f
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o67f
c67f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o680:
cmp byte [tape + r8], 0
jz c680
add r8, 2
and r8, 0xFFFF
o681:
cmp byte [tape + r8], 0
jz c681
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o681
c681:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o682:
cmp byte [tape + r8], 0
jz c682
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o682
c682:
sub r8, 3
and r8, 0xFFFF
o683:
cmp byte [tape + r8], 0
jz c683
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o683
c683:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o680
c680:
add r8, 2
and r8, 0xFFFF
o684:
cmp byte [tape + r8], 0
jz c684
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o684
c684:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o685:
cmp byte [tape + r8], 0
jz c685
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o685
c685:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o686:
cmp byte [tape + r8], 0
jz c686
add r8, 254
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 263
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o686
c686:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o67d
c67d:
sub r8, 1
and r8, 0xFFFF
o687:
cmp byte [tape + r8], 0
jz c687
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o687
c687:
add r8, 1
and r8, 0xFFFF
o688:
cmp byte [tape + r8], 0
jz c688
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o688
c688:
add r8, 263
and r8, 0xFFFF
push 1
push 264
call ms
sub r8, 264
and r8, 0xFFFF
o689:
cmp byte [tape + r8], 0
jz c689
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o689
c689:
add r8, 1
and r8, 0xFFFF
o68a:
cmp byte [tape + r8], 0
jz c68a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o68b:
cmp byte [tape + r8], 0
jz c68b
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o68b
c68b:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o68c:
cmp byte [tape + r8], 0
jz c68c
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o68c
c68c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o68d:
cmp byte [tape + r8], 0
jz c68d
add r8, 2
and r8, 0xFFFF
o68e:
cmp byte [tape + r8], 0
jz c68e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o68e
c68e:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o68f:
cmp byte [tape + r8], 0
jz c68f
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o68f
c68f:
sub r8, 3
and r8, 0xFFFF
o690:
cmp byte [tape + r8], 0
jz c690
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o690
c690:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o68d
c68d:
add r8, 2
and r8, 0xFFFF
o691:
cmp byte [tape + r8], 0
jz c691
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o691
c691:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
o692:
cmp byte [tape + r8], 0
jz c692
add r8, 256
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 265
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o692
c692:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o68a
c68a:
sub r8, 1
and r8, 0xFFFF
o693:
cmp byte [tape + r8], 0
jz c693
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o693
c693:
add r8, 1
and r8, 0xFFFF
o694:
cmp byte [tape + r8], 0
jz c694
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o695:
cmp byte [tape + r8], 0
jz c695
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o695
c695:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o696:
cmp byte [tape + r8], 0
jz c696
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o696
c696:
add r8, 1
and r8, 0xFFFF
o697:
cmp byte [tape + r8], 0
jz c697
sub r8, 3
and r8, 0xFFFF
o698:
cmp byte [tape + r8], 0
jz c698
sub r8, 2
and r8, 0xFFFF
jmp o698
c698:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o699:
cmp byte [tape + r8], 0
jz c699
add r8, 2
and r8, 0xFFFF
jmp o699
c699:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o697
c697:
sub r8, 3
and r8, 0xFFFF
o69a:
cmp byte [tape + r8], 0
jz c69a
sub r8, 2
and r8, 0xFFFF
jmp o69a
c69a:
add r8, 1
and r8, 0xFFFF
o69b:
cmp byte [tape + r8], 0
jz c69b
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o69b
c69b:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o69c:
cmp byte [tape + r8], 0
jz c69c
add r8, 2
and r8, 0xFFFF
jmp o69c
c69c:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o69d:
cmp byte [tape + r8], 0
jz c69d
sub r8, 2
and r8, 0xFFFF
jmp o69d
c69d:
add r8, 1
and r8, 0xFFFF
o69e:
cmp byte [tape + r8], 0
jz c69e
add r8, 1
and r8, 0xFFFF
o69f:
cmp byte [tape + r8], 0
jz c69f
add r8, 2
and r8, 0xFFFF
jmp o69f
c69f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o6a0:
cmp byte [tape + r8], 0
jz c6a0
sub r8, 2
and r8, 0xFFFF
jmp o6a0
c6a0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o69e
c69e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o6a1:
cmp byte [tape + r8], 0
jz c6a1
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6a1
c6a1:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6a2:
cmp byte [tape + r8], 0
jz c6a2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6a2
c6a2:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o6a3:
cmp byte [tape + r8], 0
jz c6a3
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o6a3
c6a3:
add r8, 7
and r8, 0xFFFF
call z
add r8, 224
and r8, 0xFFFF
o6a4:
cmp byte [tape + r8], 0
jz c6a4
sub r8, 224
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6a4
c6a4:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 90
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 82
and r8, 0xFFFF
o6a5:
cmp byte [tape + r8], 0
jz c6a5
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o6a5
c6a5:
add r8, 1
and r8, 0xFFFF
o6a6:
cmp byte [tape + r8], 0
jz c6a6
sub r8, 3
and r8, 0xFFFF
o6a7:
cmp byte [tape + r8], 0
jz c6a7
sub r8, 2
and r8, 0xFFFF
jmp o6a7
c6a7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6a8:
cmp byte [tape + r8], 0
jz c6a8
add r8, 2
and r8, 0xFFFF
jmp o6a8
c6a8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6a6
c6a6:
sub r8, 3
and r8, 0xFFFF
o6a9:
cmp byte [tape + r8], 0
jz c6a9
sub r8, 2
and r8, 0xFFFF
jmp o6a9
c6a9:
add r8, 1
and r8, 0xFFFF
o6aa:
cmp byte [tape + r8], 0
jz c6aa
sub r8, 81
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6aa
c6aa:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o6ab:
cmp byte [tape + r8], 0
jz c6ab
add r8, 2
and r8, 0xFFFF
jmp o6ab
c6ab:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o6ac:
cmp byte [tape + r8], 0
jz c6ac
sub r8, 2
and r8, 0xFFFF
jmp o6ac
c6ac:
add r8, 1
and r8, 0xFFFF
o6ad:
cmp byte [tape + r8], 0
jz c6ad
add r8, 1
and r8, 0xFFFF
o6ae:
cmp byte [tape + r8], 0
jz c6ae
add r8, 2
and r8, 0xFFFF
jmp o6ae
c6ae:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o6af:
cmp byte [tape + r8], 0
jz c6af
sub r8, 2
and r8, 0xFFFF
jmp o6af
c6af:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6ad
c6ad:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6b0:
cmp byte [tape + r8], 0
jz c6b0
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6b0
c6b0:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o6b1:
cmp byte [tape + r8], 0
jz c6b1
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o6b1
c6b1:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o6b2:
cmp byte [tape + r8], 0
jz c6b2
call z
add r8, 8
and r8, 0xFFFF
o6b3:
cmp byte [tape + r8], 0
jz c6b3
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6b3
c6b3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o6b4:
cmp byte [tape + r8], 0
jz c6b4
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o6b4
c6b4:
jmp o6b2
c6b2:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o6b5:
cmp byte [tape + r8], 0
jz c6b5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6b5
c6b5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o6b6:
cmp byte [tape + r8], 0
jz c6b6
add r8, 257
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 266
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o6b6
c6b6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o694
c694:
sub r8, 1
and r8, 0xFFFF
o6b7:
cmp byte [tape + r8], 0
jz c6b7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6b7
c6b7:
add r8, 1
and r8, 0xFFFF
o6b8:
cmp byte [tape + r8], 0
jz c6b8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
call o
call o
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o6b9:
cmp byte [tape + r8], 0
jz c6b9
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6b9
c6b9:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6ba:
cmp byte [tape + r8], 0
jz c6ba
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6ba
c6ba:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o6bb:
cmp byte [tape + r8], 0
jz c6bb
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o6bb
c6bb:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o6bc:
cmp byte [tape + r8], 0
jz c6bc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6bc
c6bc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o6bd:
cmp byte [tape + r8], 0
jz c6bd
add r8, 258
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 267
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o6bd
c6bd:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6b8
c6b8:
sub r8, 1
and r8, 0xFFFF
o6be:
cmp byte [tape + r8], 0
jz c6be
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6be
c6be:
add r8, 1
and r8, 0xFFFF
o6bf:
cmp byte [tape + r8], 0
jz c6bf
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o6c0:
cmp byte [tape + r8], 0
jz c6c0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c0
c6c0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 13
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6bf
c6bf:
add r8, 266
and r8, 0xFFFF
push 1
push 267
call ms
sub r8, 267
and r8, 0xFFFF
o6c1:
cmp byte [tape + r8], 0
jz c6c1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c1
c6c1:
add r8, 1
and r8, 0xFFFF
o6c2:
cmp byte [tape + r8], 0
jz c6c2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o6c3:
cmp byte [tape + r8], 0
jz c6c3
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c3
c6c3:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6c4:
cmp byte [tape + r8], 0
jz c6c4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c4
c6c4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o6c5:
cmp byte [tape + r8], 0
jz c6c5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o6c5
c6c5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o6c6:
cmp byte [tape + r8], 0
jz c6c6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c6
c6c6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o6c7:
cmp byte [tape + r8], 0
jz c6c7
add r8, 259
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 268
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o6c7
c6c7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c2
c6c2:
sub r8, 1
and r8, 0xFFFF
o6c8:
cmp byte [tape + r8], 0
jz c6c8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c8
c6c8:
add r8, 1
and r8, 0xFFFF
o6c9:
cmp byte [tape + r8], 0
jz c6c9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o6ca:
cmp byte [tape + r8], 0
jz c6ca
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6ca
c6ca:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 8
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6c9
c6c9:
add r8, 267
and r8, 0xFFFF
push 1
push 268
call ms
sub r8, 268
and r8, 0xFFFF
o6cb:
cmp byte [tape + r8], 0
jz c6cb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6cb
c6cb:
add r8, 1
and r8, 0xFFFF
o6cc:
cmp byte [tape + r8], 0
jz c6cc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o6cd:
cmp byte [tape + r8], 0
jz c6cd
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6cd
c6cd:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6ce:
cmp byte [tape + r8], 0
jz c6ce
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6ce
c6ce:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o6cf:
cmp byte [tape + r8], 0
jz c6cf
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o6cf
c6cf:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o6d0:
cmp byte [tape + r8], 0
jz c6d0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6d0
c6d0:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o6d1:
cmp byte [tape + r8], 0
jz c6d1
add r8, 260
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 269
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o6d1
c6d1:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6cc
c6cc:
sub r8, 1
and r8, 0xFFFF
o6d2:
cmp byte [tape + r8], 0
jz c6d2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6d2
c6d2:
add r8, 1
and r8, 0xFFFF
o6d3:
cmp byte [tape + r8], 0
jz c6d3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o6d4:
cmp byte [tape + r8], 0
jz c6d4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6d4
c6d4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 13
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6d3
c6d3:
add r8, 268
and r8, 0xFFFF
push 1
push 269
call ms
sub r8, 269
and r8, 0xFFFF
o6d5:
cmp byte [tape + r8], 0
jz c6d5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6d5
c6d5:
add r8, 1
and r8, 0xFFFF
o6d6:
cmp byte [tape + r8], 0
jz c6d6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o6d7:
cmp byte [tape + r8], 0
jz c6d7
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6d7
c6d7:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6d8:
cmp byte [tape + r8], 0
jz c6d8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6d8
c6d8:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o6d9:
cmp byte [tape + r8], 0
jz c6d9
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o6d9
c6d9:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o6da:
cmp byte [tape + r8], 0
jz c6da
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6da
c6da:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o6db:
cmp byte [tape + r8], 0
jz c6db
add r8, 261
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 270
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o6db
c6db:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6d6
c6d6:
sub r8, 1
and r8, 0xFFFF
o6dc:
cmp byte [tape + r8], 0
jz c6dc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6dc
c6dc:
add r8, 1
and r8, 0xFFFF
o6dd:
cmp byte [tape + r8], 0
jz c6dd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o6de:
cmp byte [tape + r8], 0
jz c6de
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6de
c6de:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6dd
c6dd:
add r8, 269
and r8, 0xFFFF
push 1
push 270
call ms
sub r8, 270
and r8, 0xFFFF
o6df:
cmp byte [tape + r8], 0
jz c6df
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6df
c6df:
add r8, 1
and r8, 0xFFFF
o6e0:
cmp byte [tape + r8], 0
jz c6e0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o6e1:
cmp byte [tape + r8], 0
jz c6e1
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6e1
c6e1:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6e2:
cmp byte [tape + r8], 0
jz c6e2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6e2
c6e2:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o6e3:
cmp byte [tape + r8], 0
jz c6e3
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o6e3
c6e3:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o6e4:
cmp byte [tape + r8], 0
jz c6e4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6e4
c6e4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o6e5:
cmp byte [tape + r8], 0
jz c6e5
add r8, 262
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 271
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o6e5
c6e5:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6e0
c6e0:
sub r8, 1
and r8, 0xFFFF
o6e6:
cmp byte [tape + r8], 0
jz c6e6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6e6
c6e6:
add r8, 1
and r8, 0xFFFF
o6e7:
cmp byte [tape + r8], 0
jz c6e7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o6e8:
cmp byte [tape + r8], 0
jz c6e8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6e8
c6e8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6e7
c6e7:
add r8, 270
and r8, 0xFFFF
push 1
push 271
call ms
sub r8, 271
and r8, 0xFFFF
o6e9:
cmp byte [tape + r8], 0
jz c6e9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6e9
c6e9:
add r8, 1
and r8, 0xFFFF
o6ea:
cmp byte [tape + r8], 0
jz c6ea
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o6eb:
cmp byte [tape + r8], 0
jz c6eb
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6eb
c6eb:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6ec:
cmp byte [tape + r8], 0
jz c6ec
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6ec
c6ec:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o6ed:
cmp byte [tape + r8], 0
jz c6ed
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o6ed
c6ed:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o6ee:
cmp byte [tape + r8], 0
jz c6ee
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6ee
c6ee:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o6ef:
cmp byte [tape + r8], 0
jz c6ef
add r8, 263
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 272
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o6ef
c6ef:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6ea
c6ea:
sub r8, 1
and r8, 0xFFFF
o6f0:
cmp byte [tape + r8], 0
jz c6f0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6f0
c6f0:
add r8, 1
and r8, 0xFFFF
o6f1:
cmp byte [tape + r8], 0
jz c6f1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o6f2:
cmp byte [tape + r8], 0
jz c6f2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6f2
c6f2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6f1
c6f1:
add r8, 271
and r8, 0xFFFF
push 1
push 272
call ms
sub r8, 272
and r8, 0xFFFF
o6f3:
cmp byte [tape + r8], 0
jz c6f3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6f3
c6f3:
add r8, 1
and r8, 0xFFFF
o6f4:
cmp byte [tape + r8], 0
jz c6f4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o6f5:
cmp byte [tape + r8], 0
jz c6f5
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6f5
c6f5:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o6f6:
cmp byte [tape + r8], 0
jz c6f6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6f6
c6f6:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o6f7:
cmp byte [tape + r8], 0
jz c6f7
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o6f7
c6f7:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o6f8:
cmp byte [tape + r8], 0
jz c6f8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6f8
c6f8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o6f9:
cmp byte [tape + r8], 0
jz c6f9
add r8, 264
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 273
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o6f9
c6f9:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6f4
c6f4:
sub r8, 1
and r8, 0xFFFF
o6fa:
cmp byte [tape + r8], 0
jz c6fa
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6fa
c6fa:
add r8, 1
and r8, 0xFFFF
o6fb:
cmp byte [tape + r8], 0
jz c6fb
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o6fc:
cmp byte [tape + r8], 0
jz c6fc
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6fc
c6fc:
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6fb
c6fb:
add r8, 272
and r8, 0xFFFF
push 1
push 273
call ms
sub r8, 273
and r8, 0xFFFF
o6fd:
cmp byte [tape + r8], 0
jz c6fd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6fd
c6fd:
add r8, 1
and r8, 0xFFFF
o6fe:
cmp byte [tape + r8], 0
jz c6fe
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o6ff:
cmp byte [tape + r8], 0
jz c6ff
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6ff
c6ff:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o700:
cmp byte [tape + r8], 0
jz c700
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o700
c700:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o701:
cmp byte [tape + r8], 0
jz c701
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o701
c701:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o702:
cmp byte [tape + r8], 0
jz c702
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o702
c702:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o703:
cmp byte [tape + r8], 0
jz c703
add r8, 265
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 274
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o703
c703:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o6fe
c6fe:
sub r8, 1
and r8, 0xFFFF
o704:
cmp byte [tape + r8], 0
jz c704
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o704
c704:
add r8, 1
and r8, 0xFFFF
o705:
cmp byte [tape + r8], 0
jz c705
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o706:
cmp byte [tape + r8], 0
jz c706
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o706
c706:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o705
c705:
add r8, 273
and r8, 0xFFFF
push 1
push 274
call ms
sub r8, 274
and r8, 0xFFFF
o707:
cmp byte [tape + r8], 0
jz c707
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o707
c707:
add r8, 1
and r8, 0xFFFF
o708:
cmp byte [tape + r8], 0
jz c708
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o709:
cmp byte [tape + r8], 0
jz c709
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o709
c709:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o70a:
cmp byte [tape + r8], 0
jz c70a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o70a
c70a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o70b:
cmp byte [tape + r8], 0
jz c70b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o70b
c70b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o70c:
cmp byte [tape + r8], 0
jz c70c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o70c
c70c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o70d:
cmp byte [tape + r8], 0
jz c70d
add r8, 266
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 275
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o70d
c70d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o708
c708:
sub r8, 1
and r8, 0xFFFF
o70e:
cmp byte [tape + r8], 0
jz c70e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o70e
c70e:
add r8, 1
and r8, 0xFFFF
o70f:
cmp byte [tape + r8], 0
jz c70f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o710:
cmp byte [tape + r8], 0
jz c710
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o710
c710:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o70f
c70f:
add r8, 274
and r8, 0xFFFF
push 1
push 275
call ms
sub r8, 275
and r8, 0xFFFF
o711:
cmp byte [tape + r8], 0
jz c711
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o711
c711:
add r8, 1
and r8, 0xFFFF
o712:
cmp byte [tape + r8], 0
jz c712
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o713:
cmp byte [tape + r8], 0
jz c713
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o713
c713:
add r8, 1
and r8, 0xFFFF
o714:
cmp byte [tape + r8], 0
jz c714
sub r8, 3
and r8, 0xFFFF
o715:
cmp byte [tape + r8], 0
jz c715
sub r8, 2
and r8, 0xFFFF
jmp o715
c715:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o716:
cmp byte [tape + r8], 0
jz c716
add r8, 2
and r8, 0xFFFF
jmp o716
c716:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o714
c714:
sub r8, 3
and r8, 0xFFFF
o717:
cmp byte [tape + r8], 0
jz c717
sub r8, 2
and r8, 0xFFFF
jmp o717
c717:
add r8, 1
and r8, 0xFFFF
o718:
cmp byte [tape + r8], 0
jz c718
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o718
c718:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o719:
cmp byte [tape + r8], 0
jz c719
add r8, 2
and r8, 0xFFFF
jmp o719
c719:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o71a:
cmp byte [tape + r8], 0
jz c71a
sub r8, 2
and r8, 0xFFFF
jmp o71a
c71a:
add r8, 1
and r8, 0xFFFF
o71b:
cmp byte [tape + r8], 0
jz c71b
add r8, 1
and r8, 0xFFFF
o71c:
cmp byte [tape + r8], 0
jz c71c
add r8, 2
and r8, 0xFFFF
jmp o71c
c71c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o71d:
cmp byte [tape + r8], 0
jz c71d
sub r8, 2
and r8, 0xFFFF
jmp o71d
c71d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o71b
c71b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o71e:
cmp byte [tape + r8], 0
jz c71e
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o71e
c71e:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o71f:
cmp byte [tape + r8], 0
jz c71f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o71f
c71f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o720:
cmp byte [tape + r8], 0
jz c720
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o720
c720:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 82
and r8, 0xFFFF
o721:
cmp byte [tape + r8], 0
jz c721
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o721
c721:
add r8, 1
and r8, 0xFFFF
o722:
cmp byte [tape + r8], 0
jz c722
sub r8, 3
and r8, 0xFFFF
o723:
cmp byte [tape + r8], 0
jz c723
sub r8, 2
and r8, 0xFFFF
jmp o723
c723:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o724:
cmp byte [tape + r8], 0
jz c724
add r8, 2
and r8, 0xFFFF
jmp o724
c724:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o722
c722:
sub r8, 3
and r8, 0xFFFF
o725:
cmp byte [tape + r8], 0
jz c725
sub r8, 2
and r8, 0xFFFF
jmp o725
c725:
add r8, 1
and r8, 0xFFFF
o726:
cmp byte [tape + r8], 0
jz c726
sub r8, 81
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o726
c726:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o727:
cmp byte [tape + r8], 0
jz c727
add r8, 2
and r8, 0xFFFF
jmp o727
c727:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o728:
cmp byte [tape + r8], 0
jz c728
sub r8, 2
and r8, 0xFFFF
jmp o728
c728:
add r8, 1
and r8, 0xFFFF
o729:
cmp byte [tape + r8], 0
jz c729
add r8, 1
and r8, 0xFFFF
o72a:
cmp byte [tape + r8], 0
jz c72a
add r8, 2
and r8, 0xFFFF
jmp o72a
c72a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o72b:
cmp byte [tape + r8], 0
jz c72b
sub r8, 2
and r8, 0xFFFF
jmp o72b
c72b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o729
c729:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o72c:
cmp byte [tape + r8], 0
jz c72c
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o72c
c72c:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o72d:
cmp byte [tape + r8], 0
jz c72d
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o72d
c72d:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o72e:
cmp byte [tape + r8], 0
jz c72e
call z
add r8, 8
and r8, 0xFFFF
o72f:
cmp byte [tape + r8], 0
jz c72f
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o72f
c72f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o730:
cmp byte [tape + r8], 0
jz c730
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o730
c730:
jmp o72e
c72e:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o731:
cmp byte [tape + r8], 0
jz c731
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o731
c731:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o732:
cmp byte [tape + r8], 0
jz c732
add r8, 267
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 276
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o732
c732:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o712
c712:
sub r8, 1
and r8, 0xFFFF
o733:
cmp byte [tape + r8], 0
jz c733
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o733
c733:
add r8, 1
and r8, 0xFFFF
o734:
cmp byte [tape + r8], 0
jz c734
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o735:
cmp byte [tape + r8], 0
jz c735
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o735
c735:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o734
c734:
add r8, 275
and r8, 0xFFFF
push 1
push 276
call ms
sub r8, 276
and r8, 0xFFFF
o736:
cmp byte [tape + r8], 0
jz c736
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o736
c736:
add r8, 1
and r8, 0xFFFF
o737:
cmp byte [tape + r8], 0
jz c737
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o738:
cmp byte [tape + r8], 0
jz c738
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o738
c738:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
o739:
cmp byte [tape + r8], 0
jz c739
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
o73a:
cmp byte [tape + r8], 0
jz c73a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o73a
c73a:
sub r8, 3
and r8, 0xFFFF
push 1
push 3
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o73b:
cmp byte [tape + r8], 0
jz c73b
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o73b
c73b:
sub r8, 4
and r8, 0xFFFF
o73c:
cmp byte [tape + r8], 0
jz c73c
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o73c
c73c:
add r8, 2
and r8, 0xFFFF
o73d:
cmp byte [tape + r8], 0
jz c73d
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o73d
c73d:
sub r8, 2
and r8, 0xFFFF
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o73e:
cmp byte [tape + r8], 0
jz c73e
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o73e
c73e:
sub r8, 4
and r8, 0xFFFF
o73f:
cmp byte [tape + r8], 0
jz c73f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o73f
c73f:
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o739
c739:
sub r8, 6
and r8, 0xFFFF
o740:
cmp byte [tape + r8], 0
jz c740
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
o741:
cmp byte [tape + r8], 0
jz c741
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o741
c741:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
jmp o740
c740:
add r8, 1
and r8, 0xFFFF
o742:
cmp byte [tape + r8], 0
jz c742
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 2
call m
add r8, 2
and r8, 0xFFFF
call o
call z
jmp o742
c742:
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 3
call m
add r8, 3
and r8, 0xFFFF
call o
call z
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o737
c737:
add r8, 265
and r8, 0xFFFF
push 1
push 266
call ms
sub r8, 266
and r8, 0xFFFF
o743:
cmp byte [tape + r8], 0
jz c743
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o743
c743:
add r8, 1
and r8, 0xFFFF
o744:
cmp byte [tape + r8], 0
jz c744
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o745:
cmp byte [tape + r8], 0
jz c745
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o745
c745:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o746:
cmp byte [tape + r8], 0
jz c746
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o746
c746:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 232
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
add r8, 255
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 264
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o744
c744:
add r8, 264
and r8, 0xFFFF
push 1
push 265
call ms
sub r8, 265
and r8, 0xFFFF
o747:
cmp byte [tape + r8], 0
jz c747
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o747
c747:
add r8, 1
and r8, 0xFFFF
o748:
cmp byte [tape + r8], 0
jz c748
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o748
c748:
add r8, 276
and r8, 0xFFFF
push 1
push 277
call ms
sub r8, 277
and r8, 0xFFFF
o749:
cmp byte [tape + r8], 0
jz c749
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o749
c749:
add r8, 1
and r8, 0xFFFF
o74a:
cmp byte [tape + r8], 0
jz c74a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o74b:
cmp byte [tape + r8], 0
jz c74b
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o74b
c74b:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o74c:
cmp byte [tape + r8], 0
jz c74c
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o74c
c74c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o74d:
cmp byte [tape + r8], 0
jz c74d
add r8, 2
and r8, 0xFFFF
o74e:
cmp byte [tape + r8], 0
jz c74e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o74e
c74e:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o74f:
cmp byte [tape + r8], 0
jz c74f
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o74f
c74f:
sub r8, 3
and r8, 0xFFFF
o750:
cmp byte [tape + r8], 0
jz c750
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o750
c750:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o74d
c74d:
add r8, 2
and r8, 0xFFFF
o751:
cmp byte [tape + r8], 0
jz c751
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o751
c751:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
o752:
cmp byte [tape + r8], 0
jz c752
add r8, 269
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 278
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o752
c752:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o74a
c74a:
sub r8, 1
and r8, 0xFFFF
o753:
cmp byte [tape + r8], 0
jz c753
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o753
c753:
add r8, 1
and r8, 0xFFFF
o754:
cmp byte [tape + r8], 0
jz c754
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o755:
cmp byte [tape + r8], 0
jz c755
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o755
c755:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o756:
cmp byte [tape + r8], 0
jz c756
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o756
c756:
add r8, 1
and r8, 0xFFFF
o757:
cmp byte [tape + r8], 0
jz c757
sub r8, 3
and r8, 0xFFFF
o758:
cmp byte [tape + r8], 0
jz c758
sub r8, 2
and r8, 0xFFFF
jmp o758
c758:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o759:
cmp byte [tape + r8], 0
jz c759
add r8, 2
and r8, 0xFFFF
jmp o759
c759:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o757
c757:
sub r8, 3
and r8, 0xFFFF
o75a:
cmp byte [tape + r8], 0
jz c75a
sub r8, 2
and r8, 0xFFFF
jmp o75a
c75a:
add r8, 1
and r8, 0xFFFF
o75b:
cmp byte [tape + r8], 0
jz c75b
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o75b
c75b:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o75c:
cmp byte [tape + r8], 0
jz c75c
add r8, 2
and r8, 0xFFFF
jmp o75c
c75c:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o75d:
cmp byte [tape + r8], 0
jz c75d
sub r8, 2
and r8, 0xFFFF
jmp o75d
c75d:
add r8, 1
and r8, 0xFFFF
o75e:
cmp byte [tape + r8], 0
jz c75e
add r8, 1
and r8, 0xFFFF
o75f:
cmp byte [tape + r8], 0
jz c75f
add r8, 2
and r8, 0xFFFF
jmp o75f
c75f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o760:
cmp byte [tape + r8], 0
jz c760
sub r8, 2
and r8, 0xFFFF
jmp o760
c760:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o75e
c75e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o761:
cmp byte [tape + r8], 0
jz c761
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o761
c761:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o762:
cmp byte [tape + r8], 0
jz c762
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o762
c762:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o763:
cmp byte [tape + r8], 0
jz c763
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o763
c763:
add r8, 7
and r8, 0xFFFF
call z
add r8, 224
and r8, 0xFFFF
o764:
cmp byte [tape + r8], 0
jz c764
sub r8, 224
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o764
c764:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 90
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 82
and r8, 0xFFFF
o765:
cmp byte [tape + r8], 0
jz c765
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o765
c765:
add r8, 1
and r8, 0xFFFF
o766:
cmp byte [tape + r8], 0
jz c766
sub r8, 3
and r8, 0xFFFF
o767:
cmp byte [tape + r8], 0
jz c767
sub r8, 2
and r8, 0xFFFF
jmp o767
c767:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o768:
cmp byte [tape + r8], 0
jz c768
add r8, 2
and r8, 0xFFFF
jmp o768
c768:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o766
c766:
sub r8, 3
and r8, 0xFFFF
o769:
cmp byte [tape + r8], 0
jz c769
sub r8, 2
and r8, 0xFFFF
jmp o769
c769:
add r8, 1
and r8, 0xFFFF
o76a:
cmp byte [tape + r8], 0
jz c76a
sub r8, 81
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o76a
c76a:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o76b:
cmp byte [tape + r8], 0
jz c76b
add r8, 2
and r8, 0xFFFF
jmp o76b
c76b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o76c:
cmp byte [tape + r8], 0
jz c76c
sub r8, 2
and r8, 0xFFFF
jmp o76c
c76c:
add r8, 1
and r8, 0xFFFF
o76d:
cmp byte [tape + r8], 0
jz c76d
add r8, 1
and r8, 0xFFFF
o76e:
cmp byte [tape + r8], 0
jz c76e
add r8, 2
and r8, 0xFFFF
jmp o76e
c76e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o76f:
cmp byte [tape + r8], 0
jz c76f
sub r8, 2
and r8, 0xFFFF
jmp o76f
c76f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o76d
c76d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o770:
cmp byte [tape + r8], 0
jz c770
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o770
c770:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o771:
cmp byte [tape + r8], 0
jz c771
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o771
c771:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o772:
cmp byte [tape + r8], 0
jz c772
call z
add r8, 8
and r8, 0xFFFF
o773:
cmp byte [tape + r8], 0
jz c773
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o773
c773:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o774:
cmp byte [tape + r8], 0
jz c774
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o774
c774:
jmp o772
c772:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o775:
cmp byte [tape + r8], 0
jz c775
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o775
c775:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o776:
cmp byte [tape + r8], 0
jz c776
add r8, 270
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 279
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o776
c776:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o754
c754:
sub r8, 1
and r8, 0xFFFF
o777:
cmp byte [tape + r8], 0
jz c777
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o777
c777:
add r8, 1
and r8, 0xFFFF
o778:
cmp byte [tape + r8], 0
jz c778
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
call o
call o
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o779:
cmp byte [tape + r8], 0
jz c779
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o779
c779:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o77a:
cmp byte [tape + r8], 0
jz c77a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o77a
c77a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o77b:
cmp byte [tape + r8], 0
jz c77b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o77b
c77b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o77c:
cmp byte [tape + r8], 0
jz c77c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o77c
c77c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o77d:
cmp byte [tape + r8], 0
jz c77d
add r8, 271
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 280
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o77d
c77d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o778
c778:
sub r8, 1
and r8, 0xFFFF
o77e:
cmp byte [tape + r8], 0
jz c77e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o77e
c77e:
add r8, 1
and r8, 0xFFFF
o77f:
cmp byte [tape + r8], 0
jz c77f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o780:
cmp byte [tape + r8], 0
jz c780
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o780
c780:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
o781:
cmp byte [tape + r8], 0
jz c781
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o781
c781:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o782:
cmp byte [tape + r8], 0
jz c782
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o782
c782:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o783:
cmp byte [tape + r8], 0
jz c783
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o783
c783:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o784:
cmp byte [tape + r8], 0
jz c784
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o784
c784:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o785:
cmp byte [tape + r8], 0
jz c785
add r8, 272
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 281
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o785
c785:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o77f
c77f:
sub r8, 1
and r8, 0xFFFF
o786:
cmp byte [tape + r8], 0
jz c786
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o786
c786:
add r8, 1
and r8, 0xFFFF
o787:
cmp byte [tape + r8], 0
jz c787
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o788:
cmp byte [tape + r8], 0
jz c788
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o788
c788:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 279
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 282
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o787
c787:
add r8, 280
and r8, 0xFFFF
push 1
push 281
call ms
sub r8, 281
and r8, 0xFFFF
o789:
cmp byte [tape + r8], 0
jz c789
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o789
c789:
add r8, 1
and r8, 0xFFFF
o78a:
cmp byte [tape + r8], 0
jz c78a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o78b:
cmp byte [tape + r8], 0
jz c78b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o78b
c78b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o78a
c78a:
add r8, 281
and r8, 0xFFFF
push 1
push 282
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 280
call ms
sub r8, 280
and r8, 0xFFFF
o78c:
cmp byte [tape + r8], 0
jz c78c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o78c
c78c:
add r8, 1
and r8, 0xFFFF
o78d:
cmp byte [tape + r8], 0
jz c78d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o78e:
cmp byte [tape + r8], 0
jz c78e
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o78e
c78e:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o78f:
cmp byte [tape + r8], 0
jz c78f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o78f
c78f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o790:
cmp byte [tape + r8], 0
jz c790
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o790
c790:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o791:
cmp byte [tape + r8], 0
jz c791
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o791
c791:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o792:
cmp byte [tape + r8], 0
jz c792
add r8, 274
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 283
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o792
c792:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o78d
c78d:
sub r8, 1
and r8, 0xFFFF
o793:
cmp byte [tape + r8], 0
jz c793
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o793
c793:
add r8, 1
and r8, 0xFFFF
o794:
cmp byte [tape + r8], 0
jz c794
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o795:
cmp byte [tape + r8], 0
jz c795
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o795
c795:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o796:
cmp byte [tape + r8], 0
jz c796
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o796
c796:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o797:
cmp byte [tape + r8], 0
jz c797
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o797
c797:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o798:
cmp byte [tape + r8], 0
jz c798
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o798
c798:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o799:
cmp byte [tape + r8], 0
jz c799
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o799
c799:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o79a:
cmp byte [tape + r8], 0
jz c79a
add r8, 275
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 284
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o79a
c79a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o794
c794:
sub r8, 1
and r8, 0xFFFF
o79b:
cmp byte [tape + r8], 0
jz c79b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o79b
c79b:
add r8, 1
and r8, 0xFFFF
o79c:
cmp byte [tape + r8], 0
jz c79c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o79d:
cmp byte [tape + r8], 0
jz c79d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o79d
c79d:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o79c
c79c:
add r8, 283
and r8, 0xFFFF
push 1
push 284
call ms
sub r8, 284
and r8, 0xFFFF
o79e:
cmp byte [tape + r8], 0
jz c79e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o79e
c79e:
add r8, 1
and r8, 0xFFFF
o79f:
cmp byte [tape + r8], 0
jz c79f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o7a0:
cmp byte [tape + r8], 0
jz c7a0
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7a0
c7a0:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7a1:
cmp byte [tape + r8], 0
jz c7a1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7a1
c7a1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7a2:
cmp byte [tape + r8], 0
jz c7a2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7a2
c7a2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7a3:
cmp byte [tape + r8], 0
jz c7a3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7a3
c7a3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7a4:
cmp byte [tape + r8], 0
jz c7a4
add r8, 276
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 285
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7a4
c7a4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o79f
c79f:
sub r8, 1
and r8, 0xFFFF
o7a5:
cmp byte [tape + r8], 0
jz c7a5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7a5
c7a5:
add r8, 1
and r8, 0xFFFF
o7a6:
cmp byte [tape + r8], 0
jz c7a6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o7a7:
cmp byte [tape + r8], 0
jz c7a7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7a7
c7a7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7a6
c7a6:
add r8, 284
and r8, 0xFFFF
push 1
push 285
call ms
sub r8, 285
and r8, 0xFFFF
o7a8:
cmp byte [tape + r8], 0
jz c7a8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7a8
c7a8:
add r8, 1
and r8, 0xFFFF
o7a9:
cmp byte [tape + r8], 0
jz c7a9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o7aa:
cmp byte [tape + r8], 0
jz c7aa
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7aa
c7aa:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7ab:
cmp byte [tape + r8], 0
jz c7ab
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ab
c7ab:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7ac:
cmp byte [tape + r8], 0
jz c7ac
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7ac
c7ac:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7ad:
cmp byte [tape + r8], 0
jz c7ad
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ad
c7ad:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7ae:
cmp byte [tape + r8], 0
jz c7ae
add r8, 277
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 286
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7ae
c7ae:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7a9
c7a9:
sub r8, 1
and r8, 0xFFFF
o7af:
cmp byte [tape + r8], 0
jz c7af
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7af
c7af:
add r8, 1
and r8, 0xFFFF
o7b0:
cmp byte [tape + r8], 0
jz c7b0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o7b1:
cmp byte [tape + r8], 0
jz c7b1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b1
c7b1:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b0
c7b0:
add r8, 285
and r8, 0xFFFF
push 1
push 286
call ms
sub r8, 3
and r8, 0xFFFF
push 1
push 283
call ms
sub r8, 283
and r8, 0xFFFF
o7b2:
cmp byte [tape + r8], 0
jz c7b2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b2
c7b2:
add r8, 1
and r8, 0xFFFF
o7b3:
cmp byte [tape + r8], 0
jz c7b3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o7b4:
cmp byte [tape + r8], 0
jz c7b4
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b4
c7b4:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7b5:
cmp byte [tape + r8], 0
jz c7b5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b5
c7b5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7b6:
cmp byte [tape + r8], 0
jz c7b6
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7b6
c7b6:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7b7:
cmp byte [tape + r8], 0
jz c7b7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b7
c7b7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7b8:
cmp byte [tape + r8], 0
jz c7b8
add r8, 278
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 287
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7b8
c7b8:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b3
c7b3:
sub r8, 1
and r8, 0xFFFF
o7b9:
cmp byte [tape + r8], 0
jz c7b9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7b9
c7b9:
add r8, 1
and r8, 0xFFFF
o7ba:
cmp byte [tape + r8], 0
jz c7ba
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o7bb:
cmp byte [tape + r8], 0
jz c7bb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7bb
c7bb:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 8
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ba
c7ba:
add r8, 286
and r8, 0xFFFF
push 1
push 287
call ms
sub r8, 287
and r8, 0xFFFF
o7bc:
cmp byte [tape + r8], 0
jz c7bc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7bc
c7bc:
add r8, 1
and r8, 0xFFFF
o7bd:
cmp byte [tape + r8], 0
jz c7bd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o7be:
cmp byte [tape + r8], 0
jz c7be
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7be
c7be:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7bf:
cmp byte [tape + r8], 0
jz c7bf
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7bf
c7bf:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7c0:
cmp byte [tape + r8], 0
jz c7c0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7c0
c7c0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7c1:
cmp byte [tape + r8], 0
jz c7c1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7c1
c7c1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7c2:
cmp byte [tape + r8], 0
jz c7c2
add r8, 279
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 288
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7c2
c7c2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7bd
c7bd:
sub r8, 1
and r8, 0xFFFF
o7c3:
cmp byte [tape + r8], 0
jz c7c3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7c3
c7c3:
add r8, 1
and r8, 0xFFFF
o7c4:
cmp byte [tape + r8], 0
jz c7c4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o7c5:
cmp byte [tape + r8], 0
jz c7c5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7c5
c7c5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 13
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7c4
c7c4:
add r8, 287
and r8, 0xFFFF
push 1
push 288
call ms
sub r8, 288
and r8, 0xFFFF
o7c6:
cmp byte [tape + r8], 0
jz c7c6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7c6
c7c6:
add r8, 1
and r8, 0xFFFF
o7c7:
cmp byte [tape + r8], 0
jz c7c7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o7c8:
cmp byte [tape + r8], 0
jz c7c8
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7c8
c7c8:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7c9:
cmp byte [tape + r8], 0
jz c7c9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7c9
c7c9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7ca:
cmp byte [tape + r8], 0
jz c7ca
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7ca
c7ca:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7cb:
cmp byte [tape + r8], 0
jz c7cb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7cb
c7cb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7cc:
cmp byte [tape + r8], 0
jz c7cc
add r8, 280
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 289
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7cc
c7cc:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7c7
c7c7:
sub r8, 1
and r8, 0xFFFF
o7cd:
cmp byte [tape + r8], 0
jz c7cd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7cd
c7cd:
add r8, 1
and r8, 0xFFFF
o7ce:
cmp byte [tape + r8], 0
jz c7ce
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o7cf:
cmp byte [tape + r8], 0
jz c7cf
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7cf
c7cf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ce
c7ce:
add r8, 288
and r8, 0xFFFF
push 1
push 289
call ms
sub r8, 289
and r8, 0xFFFF
o7d0:
cmp byte [tape + r8], 0
jz c7d0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7d0
c7d0:
add r8, 1
and r8, 0xFFFF
o7d1:
cmp byte [tape + r8], 0
jz c7d1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o7d2:
cmp byte [tape + r8], 0
jz c7d2
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7d2
c7d2:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7d3:
cmp byte [tape + r8], 0
jz c7d3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7d3
c7d3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7d4:
cmp byte [tape + r8], 0
jz c7d4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7d4
c7d4:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7d5:
cmp byte [tape + r8], 0
jz c7d5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7d5
c7d5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7d6:
cmp byte [tape + r8], 0
jz c7d6
add r8, 281
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 290
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7d6
c7d6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7d1
c7d1:
sub r8, 1
and r8, 0xFFFF
o7d7:
cmp byte [tape + r8], 0
jz c7d7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7d7
c7d7:
add r8, 1
and r8, 0xFFFF
o7d8:
cmp byte [tape + r8], 0
jz c7d8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o7d9:
cmp byte [tape + r8], 0
jz c7d9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7d9
c7d9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7d8
c7d8:
add r8, 289
and r8, 0xFFFF
push 1
push 290
call ms
sub r8, 290
and r8, 0xFFFF
o7da:
cmp byte [tape + r8], 0
jz c7da
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7da
c7da:
add r8, 1
and r8, 0xFFFF
o7db:
cmp byte [tape + r8], 0
jz c7db
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o7dc:
cmp byte [tape + r8], 0
jz c7dc
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7dc
c7dc:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7dd:
cmp byte [tape + r8], 0
jz c7dd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7dd
c7dd:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7de:
cmp byte [tape + r8], 0
jz c7de
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7de
c7de:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7df:
cmp byte [tape + r8], 0
jz c7df
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7df
c7df:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7e0:
cmp byte [tape + r8], 0
jz c7e0
add r8, 282
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 291
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7e0
c7e0:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7db
c7db:
sub r8, 1
and r8, 0xFFFF
o7e1:
cmp byte [tape + r8], 0
jz c7e1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7e1
c7e1:
add r8, 1
and r8, 0xFFFF
o7e2:
cmp byte [tape + r8], 0
jz c7e2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o7e3:
cmp byte [tape + r8], 0
jz c7e3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7e3
c7e3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7e2
c7e2:
add r8, 290
and r8, 0xFFFF
push 1
push 291
call ms
sub r8, 291
and r8, 0xFFFF
o7e4:
cmp byte [tape + r8], 0
jz c7e4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7e4
c7e4:
add r8, 1
and r8, 0xFFFF
o7e5:
cmp byte [tape + r8], 0
jz c7e5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o7e6:
cmp byte [tape + r8], 0
jz c7e6
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7e6
c7e6:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7e7:
cmp byte [tape + r8], 0
jz c7e7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7e7
c7e7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7e8:
cmp byte [tape + r8], 0
jz c7e8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7e8
c7e8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7e9:
cmp byte [tape + r8], 0
jz c7e9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7e9
c7e9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7ea:
cmp byte [tape + r8], 0
jz c7ea
add r8, 283
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 292
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7ea
c7ea:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7e5
c7e5:
sub r8, 1
and r8, 0xFFFF
o7eb:
cmp byte [tape + r8], 0
jz c7eb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7eb
c7eb:
add r8, 1
and r8, 0xFFFF
o7ec:
cmp byte [tape + r8], 0
jz c7ec
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o7ed:
cmp byte [tape + r8], 0
jz c7ed
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ed
c7ed:
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ec
c7ec:
add r8, 291
and r8, 0xFFFF
push 1
push 292
call ms
sub r8, 292
and r8, 0xFFFF
o7ee:
cmp byte [tape + r8], 0
jz c7ee
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ee
c7ee:
add r8, 1
and r8, 0xFFFF
o7ef:
cmp byte [tape + r8], 0
jz c7ef
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o7f0:
cmp byte [tape + r8], 0
jz c7f0
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7f0
c7f0:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7f1:
cmp byte [tape + r8], 0
jz c7f1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7f1
c7f1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7f2:
cmp byte [tape + r8], 0
jz c7f2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7f2
c7f2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7f3:
cmp byte [tape + r8], 0
jz c7f3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7f3
c7f3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7f4:
cmp byte [tape + r8], 0
jz c7f4
add r8, 284
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 293
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7f4
c7f4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ef
c7ef:
sub r8, 1
and r8, 0xFFFF
o7f5:
cmp byte [tape + r8], 0
jz c7f5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7f5
c7f5:
add r8, 1
and r8, 0xFFFF
o7f6:
cmp byte [tape + r8], 0
jz c7f6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o7f7:
cmp byte [tape + r8], 0
jz c7f7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7f7
c7f7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7f6
c7f6:
add r8, 292
and r8, 0xFFFF
push 1
push 293
call ms
sub r8, 293
and r8, 0xFFFF
o7f8:
cmp byte [tape + r8], 0
jz c7f8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7f8
c7f8:
add r8, 1
and r8, 0xFFFF
o7f9:
cmp byte [tape + r8], 0
jz c7f9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o7fa:
cmp byte [tape + r8], 0
jz c7fa
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7fa
c7fa:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o7fb:
cmp byte [tape + r8], 0
jz c7fb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7fb
c7fb:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o7fc:
cmp byte [tape + r8], 0
jz c7fc
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o7fc
c7fc:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o7fd:
cmp byte [tape + r8], 0
jz c7fd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7fd
c7fd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o7fe:
cmp byte [tape + r8], 0
jz c7fe
add r8, 285
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 294
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o7fe
c7fe:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7f9
c7f9:
sub r8, 1
and r8, 0xFFFF
o7ff:
cmp byte [tape + r8], 0
jz c7ff
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o7ff
c7ff:
add r8, 1
and r8, 0xFFFF
o800:
cmp byte [tape + r8], 0
jz c800
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o801:
cmp byte [tape + r8], 0
jz c801
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o801
c801:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o800
c800:
add r8, 293
and r8, 0xFFFF
push 1
push 294
call ms
sub r8, 294
and r8, 0xFFFF
o802:
cmp byte [tape + r8], 0
jz c802
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o802
c802:
add r8, 1
and r8, 0xFFFF
o803:
cmp byte [tape + r8], 0
jz c803
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o804:
cmp byte [tape + r8], 0
jz c804
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o804
c804:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
o805:
cmp byte [tape + r8], 0
jz c805
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
o806:
cmp byte [tape + r8], 0
jz c806
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o806
c806:
sub r8, 3
and r8, 0xFFFF
push 1
push 3
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o807:
cmp byte [tape + r8], 0
jz c807
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o807
c807:
sub r8, 4
and r8, 0xFFFF
o808:
cmp byte [tape + r8], 0
jz c808
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o808
c808:
add r8, 2
and r8, 0xFFFF
o809:
cmp byte [tape + r8], 0
jz c809
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o809
c809:
sub r8, 2
and r8, 0xFFFF
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o80a:
cmp byte [tape + r8], 0
jz c80a
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o80a
c80a:
sub r8, 4
and r8, 0xFFFF
o80b:
cmp byte [tape + r8], 0
jz c80b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o80b
c80b:
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o805
c805:
sub r8, 6
and r8, 0xFFFF
o80c:
cmp byte [tape + r8], 0
jz c80c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
o80d:
cmp byte [tape + r8], 0
jz c80d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o80d
c80d:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
jmp o80c
c80c:
add r8, 1
and r8, 0xFFFF
o80e:
cmp byte [tape + r8], 0
jz c80e
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 2
call m
add r8, 2
and r8, 0xFFFF
call o
call z
jmp o80e
c80e:
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 3
call m
add r8, 3
and r8, 0xFFFF
call o
call z
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o803
c803:
add r8, 278
and r8, 0xFFFF
push 1
push 279
call ms
sub r8, 279
and r8, 0xFFFF
o80f:
cmp byte [tape + r8], 0
jz c80f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o80f
c80f:
add r8, 1
and r8, 0xFFFF
o810:
cmp byte [tape + r8], 0
jz c810
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 225
and r8, 0xFFFF
o811:
cmp byte [tape + r8], 0
jz c811
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o811
c811:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o812:
cmp byte [tape + r8], 0
jz c812
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o812
c812:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 232
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
add r8, 268
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 277
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o810
c810:
add r8, 277
and r8, 0xFFFF
push 1
push 278
call ms
sub r8, 15
and r8, 0xFFFF
push 1
push 263
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 262
call ms
sub r8, 262
and r8, 0xFFFF
o813:
cmp byte [tape + r8], 0
jz c813
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o813
c813:
add r8, 1
and r8, 0xFFFF
o814:
cmp byte [tape + r8], 0
jz c814
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o815:
cmp byte [tape + r8], 0
jz c815
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o815
c815:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o816:
cmp byte [tape + r8], 0
jz c816
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o816
c816:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o817:
cmp byte [tape + r8], 0
jz c817
add r8, 2
and r8, 0xFFFF
o818:
cmp byte [tape + r8], 0
jz c818
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o818
c818:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o819:
cmp byte [tape + r8], 0
jz c819
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o819
c819:
sub r8, 3
and r8, 0xFFFF
o81a:
cmp byte [tape + r8], 0
jz c81a
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o81a
c81a:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o817
c817:
add r8, 2
and r8, 0xFFFF
o81b:
cmp byte [tape + r8], 0
jz c81b
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o81b
c81b:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o81c:
cmp byte [tape + r8], 0
jz c81c
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o81c
c81c:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o81d:
cmp byte [tape + r8], 0
jz c81d
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o81d
c81d:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o81e:
cmp byte [tape + r8], 0
jz c81e
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o81e
c81e:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o81f:
cmp byte [tape + r8], 0
jz c81f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o81f
c81f:
add r8, 8
and r8, 0xFFFF
o820:
cmp byte [tape + r8], 0
jz c820
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o820
c820:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o821:
cmp byte [tape + r8], 0
jz c821
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o821
c821:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o822:
cmp byte [tape + r8], 0
jz c822
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o822
c822:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o823:
cmp byte [tape + r8], 0
jz c823
add r8, 286
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 295
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o823
c823:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o814
c814:
sub r8, 1
and r8, 0xFFFF
o824:
cmp byte [tape + r8], 0
jz c824
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o824
c824:
add r8, 1
and r8, 0xFFFF
o825:
cmp byte [tape + r8], 0
jz c825
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o825
c825:
add r8, 294
and r8, 0xFFFF
push 1
push 295
call ms
sub r8, 295
and r8, 0xFFFF
o826:
cmp byte [tape + r8], 0
jz c826
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o826
c826:
add r8, 1
and r8, 0xFFFF
o827:
cmp byte [tape + r8], 0
jz c827
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o828:
cmp byte [tape + r8], 0
jz c828
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o828
c828:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o829:
cmp byte [tape + r8], 0
jz c829
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o829
c829:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o82a:
cmp byte [tape + r8], 0
jz c82a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o82a
c82a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o82b:
cmp byte [tape + r8], 0
jz c82b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o82b
c82b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o82c:
cmp byte [tape + r8], 0
jz c82c
add r8, 287
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 296
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o82c
c82c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o827
c827:
sub r8, 1
and r8, 0xFFFF
o82d:
cmp byte [tape + r8], 0
jz c82d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o82d
c82d:
add r8, 1
and r8, 0xFFFF
o82e:
cmp byte [tape + r8], 0
jz c82e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 288
and r8, 0xFFFF
o82f:
cmp byte [tape + r8], 0
jz c82f
sub r8, 288
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 295
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o82f
c82f:
sub r8, 295
and r8, 0xFFFF
push 1
push 295
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 288
and r8, 0xFFFF
call z
sub r8, 288
and r8, 0xFFFF
push 1
push 288
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o82e
c82e:
add r8, 295
and r8, 0xFFFF
push 1
push 296
call ms
sub r8, 296
and r8, 0xFFFF
o830:
cmp byte [tape + r8], 0
jz c830
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o830
c830:
add r8, 1
and r8, 0xFFFF
o831:
cmp byte [tape + r8], 0
jz c831
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o832:
cmp byte [tape + r8], 0
jz c832
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o832
c832:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o833:
cmp byte [tape + r8], 0
jz c833
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o833
c833:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o834:
cmp byte [tape + r8], 0
jz c834
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o834
c834:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o835:
cmp byte [tape + r8], 0
jz c835
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o835
c835:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o836:
cmp byte [tape + r8], 0
jz c836
add r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 298
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o836
c836:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o831
c831:
sub r8, 1
and r8, 0xFFFF
o837:
cmp byte [tape + r8], 0
jz c837
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o837
c837:
add r8, 1
and r8, 0xFFFF
o838:
cmp byte [tape + r8], 0
jz c838
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 23
and r8, 0xFFFF
o839:
cmp byte [tape + r8], 0
jz c839
sub r8, 23
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 30
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o839
c839:
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o838
c838:
add r8, 297
and r8, 0xFFFF
push 1
push 298
call ms
sub r8, 176
and r8, 0xFFFF
push 1
push 122
call ms
sub r8, 122
and r8, 0xFFFF
o83a:
cmp byte [tape + r8], 0
jz c83a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o83a
c83a:
add r8, 1
and r8, 0xFFFF
o83b:
cmp byte [tape + r8], 0
jz c83b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 13
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o83c:
cmp byte [tape + r8], 0
jz c83c
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o83c
c83c:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o83d:
cmp byte [tape + r8], 0
jz c83d
sub r8, 2
and r8, 0xFFFF
jmp o83d
c83d:
add r8, 1
and r8, 0xFFFF
o83e:
cmp byte [tape + r8], 0
jz c83e
add r8, 1
and r8, 0xFFFF
o83f:
cmp byte [tape + r8], 0
jz c83f
add r8, 2
and r8, 0xFFFF
jmp o83f
c83f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o840:
cmp byte [tape + r8], 0
jz c840
sub r8, 2
and r8, 0xFFFF
jmp o840
c840:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o83e
c83e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 13
add r8, 290
and r8, 0xFFFF
call z
sub r8, 290
and r8, 0xFFFF
push 1
push 290
call m
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 7
push 9
push 1
call m
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call z
add r8, 6
and r8, 0xFFFF
call i
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
call z
add r8, 10
and r8, 0xFFFF
o841:
cmp byte [tape + r8], 0
jz c841
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o841
c841:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o842:
cmp byte [tape + r8], 0
jz c842
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o842
c842:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o843:
cmp byte [tape + r8], 0
jz c843
add r8, 2
and r8, 0xFFFF
o844:
cmp byte [tape + r8], 0
jz c844
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o844
c844:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o845:
cmp byte [tape + r8], 0
jz c845
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o845
c845:
sub r8, 3
and r8, 0xFFFF
o846:
cmp byte [tape + r8], 0
jz c846
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o846
c846:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o843
c843:
add r8, 2
and r8, 0xFFFF
o847:
cmp byte [tape + r8], 0
jz c847
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o847
c847:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o848:
cmp byte [tape + r8], 0
jz c848
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o848
c848:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o849:
cmp byte [tape + r8], 0
jz c849
add r8, 291
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 300
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o849
c849:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o83b
c83b:
sub r8, 1
and r8, 0xFFFF
o84a:
cmp byte [tape + r8], 0
jz c84a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o84a
c84a:
add r8, 1
and r8, 0xFFFF
o84b:
cmp byte [tape + r8], 0
jz c84b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o84c:
cmp byte [tape + r8], 0
jz c84c
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o84c
c84c:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 8
call m
add r8, 8
and r8, 0xFFFF
o84d:
cmp byte [tape + r8], 0
jz c84d
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o84d
c84d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 17
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o84b
c84b:
add r8, 299
and r8, 0xFFFF
push 1
push 300
call ms
sub r8, 300
and r8, 0xFFFF
o84e:
cmp byte [tape + r8], 0
jz c84e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o84e
c84e:
add r8, 1
and r8, 0xFFFF
o84f:
cmp byte [tape + r8], 0
jz c84f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o850:
cmp byte [tape + r8], 0
jz c850
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o850
c850:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 1
and r8, 0xFFFF
o851:
cmp byte [tape + r8], 0
jz c851
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o851
c851:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o852:
cmp byte [tape + r8], 0
jz c852
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o852
c852:
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o853:
cmp byte [tape + r8], 0
jz c853
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o853
c853:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
add r8, 1
and r8, 0xFFFF
o854:
cmp byte [tape + r8], 0
jz c854
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o854
c854:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o855:
cmp byte [tape + r8], 0
jz c855
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o855
c855:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o856:
cmp byte [tape + r8], 0
jz c856
call z
add r8, 8
and r8, 0xFFFF
o857:
cmp byte [tape + r8], 0
jz c857
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o857
c857:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o858:
cmp byte [tape + r8], 0
jz c858
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o858
c858:
jmp o856
c856:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o859:
cmp byte [tape + r8], 0
jz c859
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o859
c859:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o85a:
cmp byte [tape + r8], 0
jz c85a
add r8, 292
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 301
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o85a
c85a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o84f
c84f:
add r8, 301
and r8, 0xFFFF
push 1
push 302
call ms
sub r8, 302
and r8, 0xFFFF
o85b:
cmp byte [tape + r8], 0
jz c85b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o85b
c85b:
add r8, 1
and r8, 0xFFFF
o85c:
cmp byte [tape + r8], 0
jz c85c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call i
add r8, 110
and r8, 0xFFFF
call z
sub r8, 110
and r8, 0xFFFF
push 1
push 110
call m
call z
add r8, 110
and r8, 0xFFFF
o85d:
cmp byte [tape + r8], 0
jz c85d
sub r8, 110
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o85d
c85d:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
push 16
push 8
call m
add r8, 8
and r8, 0xFFFF
o85e:
cmp byte [tape + r8], 0
jz c85e
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o85e
c85e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 112
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
call z
add r8, 105
and r8, 0xFFFF
o85f:
cmp byte [tape + r8], 0
jz c85f
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o85f
c85f:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o860:
cmp byte [tape + r8], 0
jz c860
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o860
c860:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o861:
cmp byte [tape + r8], 0
jz c861
add r8, 2
and r8, 0xFFFF
o862:
cmp byte [tape + r8], 0
jz c862
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o862
c862:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o863:
cmp byte [tape + r8], 0
jz c863
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o863
c863:
sub r8, 3
and r8, 0xFFFF
o864:
cmp byte [tape + r8], 0
jz c864
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o864
c864:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o861
c861:
sub r8, 1
and r8, 0xFFFF
o865:
cmp byte [tape + r8], 0
jz c865
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o865
c865:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o866:
cmp byte [tape + r8], 0
jz c866
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o866
c866:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o867:
cmp byte [tape + r8], 0
jz c867
add r8, 294
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 303
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o867
c867:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o85c
c85c:
sub r8, 1
and r8, 0xFFFF
o868:
cmp byte [tape + r8], 0
jz c868
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o868
c868:
add r8, 1
and r8, 0xFFFF
o869:
cmp byte [tape + r8], 0
jz c869
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o86a:
cmp byte [tape + r8], 0
jz c86a
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o86a
c86a:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 297
and r8, 0xFFFF
call z
sub r8, 290
and r8, 0xFFFF
push 1
push 290
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o869
c869:
add r8, 302
and r8, 0xFFFF
push 1
push 303
call ms
sub r8, 303
and r8, 0xFFFF
o86b:
cmp byte [tape + r8], 0
jz c86b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o86b
c86b:
add r8, 1
and r8, 0xFFFF
o86c:
cmp byte [tape + r8], 0
jz c86c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 110
and r8, 0xFFFF
o86d:
cmp byte [tape + r8], 0
jz c86d
sub r8, 110
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o86d
c86d:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o86e:
cmp byte [tape + r8], 0
jz c86e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o86e
c86e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o86f:
cmp byte [tape + r8], 0
jz c86f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o86f
c86f:
add r8, 7
and r8, 0xFFFF
call z
add r8, 109
and r8, 0xFFFF
o870:
cmp byte [tape + r8], 0
jz c870
sub r8, 109
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o870
c870:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o871:
cmp byte [tape + r8], 0
jz c871
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o871
c871:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o872:
cmp byte [tape + r8], 0
jz c872
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o872
c872:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o873:
cmp byte [tape + r8], 0
jz c873
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o873
c873:
add r8, 8
and r8, 0xFFFF
o874:
cmp byte [tape + r8], 0
jz c874
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o874
c874:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o875:
cmp byte [tape + r8], 0
jz c875
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o875
c875:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o876:
cmp byte [tape + r8], 0
jz c876
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o876
c876:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o877:
cmp byte [tape + r8], 0
jz c877
add r8, 293
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 302
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o877
c877:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o86c
c86c:
add r8, 300
and r8, 0xFFFF
push 1
push 301
call ms
sub r8, 301
and r8, 0xFFFF
o878:
cmp byte [tape + r8], 0
jz c878
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o878
c878:
add r8, 1
and r8, 0xFFFF
o879:
cmp byte [tape + r8], 0
jz c879
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o87a:
cmp byte [tape + r8], 0
jz c87a
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o87a
c87a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o87b:
cmp byte [tape + r8], 0
jz c87b
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o87b
c87b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o87c:
cmp byte [tape + r8], 0
jz c87c
add r8, 2
and r8, 0xFFFF
o87d:
cmp byte [tape + r8], 0
jz c87d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o87d
c87d:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o87e:
cmp byte [tape + r8], 0
jz c87e
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o87e
c87e:
sub r8, 3
and r8, 0xFFFF
o87f:
cmp byte [tape + r8], 0
jz c87f
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o87f
c87f:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o87c
c87c:
add r8, 2
and r8, 0xFFFF
o880:
cmp byte [tape + r8], 0
jz c880
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o880
c880:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 23
and r8, 0xFFFF
o881:
cmp byte [tape + r8], 0
jz c881
sub r8, 23
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 31
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o881
c881:
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o882:
cmp byte [tape + r8], 0
jz c882
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o882
c882:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o883:
cmp byte [tape + r8], 0
jz c883
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o883
c883:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o884:
cmp byte [tape + r8], 0
jz c884
call z
add r8, 8
and r8, 0xFFFF
o885:
cmp byte [tape + r8], 0
jz c885
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o885
c885:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o886:
cmp byte [tape + r8], 0
jz c886
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o886
c886:
jmp o884
c884:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o887:
cmp byte [tape + r8], 0
jz c887
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o887
c887:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o888:
cmp byte [tape + r8], 0
jz c888
add r8, 295
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 304
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o888
c888:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o879
c879:
sub r8, 1
and r8, 0xFFFF
o889:
cmp byte [tape + r8], 0
jz c889
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o889
c889:
add r8, 1
and r8, 0xFFFF
o88a:
cmp byte [tape + r8], 0
jz c88a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o88b:
cmp byte [tape + r8], 0
jz c88b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o88b
c88b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o88a
c88a:
add r8, 303
and r8, 0xFFFF
push 1
push 304
call ms
sub r8, 304
and r8, 0xFFFF
o88c:
cmp byte [tape + r8], 0
jz c88c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o88c
c88c:
add r8, 1
and r8, 0xFFFF
o88d:
cmp byte [tape + r8], 0
jz c88d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o88e:
cmp byte [tape + r8], 0
jz c88e
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o88e
c88e:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o88f:
cmp byte [tape + r8], 0
jz c88f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o88f
c88f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o890:
cmp byte [tape + r8], 0
jz c890
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o890
c890:
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
o891:
cmp byte [tape + r8], 0
jz c891
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o891
c891:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o892:
cmp byte [tape + r8], 0
jz c892
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o892
c892:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o893:
cmp byte [tape + r8], 0
jz c893
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o893
c893:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o894:
cmp byte [tape + r8], 0
jz c894
call z
add r8, 8
and r8, 0xFFFF
o895:
cmp byte [tape + r8], 0
jz c895
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o895
c895:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o896:
cmp byte [tape + r8], 0
jz c896
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o896
c896:
jmp o894
c894:
add r8, 8
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o897:
cmp byte [tape + r8], 0
jz c897
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o897
c897:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o898:
cmp byte [tape + r8], 0
jz c898
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o898
c898:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o899:
cmp byte [tape + r8], 0
jz c899
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o899
c899:
add r8, 8
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
o89a:
cmp byte [tape + r8], 0
jz c89a
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o89a
c89a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 11
sub r8, 1
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o89b:
cmp byte [tape + r8], 0
jz c89b
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o89b
c89b:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o89c:
cmp byte [tape + r8], 0
jz c89c
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o89c
c89c:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o89d:
cmp byte [tape + r8], 0
jz c89d
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o89d
c89d:
add r8, 9
and r8, 0xFFFF
o89e:
cmp byte [tape + r8], 0
jz c89e
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o89e
c89e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o89f:
cmp byte [tape + r8], 0
jz c89f
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o89f
c89f:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8a0:
cmp byte [tape + r8], 0
jz c8a0
call z
add r8, 8
and r8, 0xFFFF
o8a1:
cmp byte [tape + r8], 0
jz c8a1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8a1
c8a1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8a2:
cmp byte [tape + r8], 0
jz c8a2
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8a2
c8a2:
jmp o8a0
c8a0:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o8a3:
cmp byte [tape + r8], 0
jz c8a3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8a3
c8a3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o8a4:
cmp byte [tape + r8], 0
jz c8a4
add r8, 296
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 305
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o8a4
c8a4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o88d
c88d:
sub r8, 1
and r8, 0xFFFF
o8a5:
cmp byte [tape + r8], 0
jz c8a5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8a5
c8a5:
add r8, 1
and r8, 0xFFFF
o8a6:
cmp byte [tape + r8], 0
jz c8a6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o8a7:
cmp byte [tape + r8], 0
jz c8a7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8a7
c8a7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8a6
c8a6:
add r8, 304
and r8, 0xFFFF
push 1
push 305
call ms
sub r8, 305
and r8, 0xFFFF
o8a8:
cmp byte [tape + r8], 0
jz c8a8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8a8
c8a8:
add r8, 1
and r8, 0xFFFF
o8a9:
cmp byte [tape + r8], 0
jz c8a9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o8aa:
cmp byte [tape + r8], 0
jz c8aa
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8aa
c8aa:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8ab:
cmp byte [tape + r8], 0
jz c8ab
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8ab
c8ab:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o8ac:
cmp byte [tape + r8], 0
jz c8ac
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o8ac
c8ac:
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
o8ad:
cmp byte [tape + r8], 0
jz c8ad
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8ad
c8ad:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8ae:
cmp byte [tape + r8], 0
jz c8ae
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8ae
c8ae:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8af:
cmp byte [tape + r8], 0
jz c8af
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8af
c8af:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8b0:
cmp byte [tape + r8], 0
jz c8b0
call z
add r8, 8
and r8, 0xFFFF
o8b1:
cmp byte [tape + r8], 0
jz c8b1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8b1
c8b1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8b2:
cmp byte [tape + r8], 0
jz c8b2
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8b2
c8b2:
jmp o8b0
c8b0:
add r8, 8
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o8b3:
cmp byte [tape + r8], 0
jz c8b3
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8b3
c8b3:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8b4:
cmp byte [tape + r8], 0
jz c8b4
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8b4
c8b4:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8b5:
cmp byte [tape + r8], 0
jz c8b5
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8b5
c8b5:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8b6:
cmp byte [tape + r8], 0
jz c8b6
call z
add r8, 8
and r8, 0xFFFF
o8b7:
cmp byte [tape + r8], 0
jz c8b7
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8b7
c8b7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8b8:
cmp byte [tape + r8], 0
jz c8b8
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8b8
c8b8:
jmp o8b6
c8b6:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o8b9:
cmp byte [tape + r8], 0
jz c8b9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8b9
c8b9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o8ba:
cmp byte [tape + r8], 0
jz c8ba
add r8, 297
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 306
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o8ba
c8ba:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8a9
c8a9:
sub r8, 1
and r8, 0xFFFF
o8bb:
cmp byte [tape + r8], 0
jz c8bb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8bb
c8bb:
add r8, 1
and r8, 0xFFFF
o8bc:
cmp byte [tape + r8], 0
jz c8bc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o8bd:
cmp byte [tape + r8], 0
jz c8bd
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8bd
c8bd:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8bc
c8bc:
add r8, 305
and r8, 0xFFFF
push 1
push 306
call ms
sub r8, 306
and r8, 0xFFFF
o8be:
cmp byte [tape + r8], 0
jz c8be
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8be
c8be:
add r8, 1
and r8, 0xFFFF
o8bf:
cmp byte [tape + r8], 0
jz c8bf
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o8c0:
cmp byte [tape + r8], 0
jz c8c0
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8c0
c8c0:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8c1:
cmp byte [tape + r8], 0
jz c8c1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8c1
c8c1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o8c2:
cmp byte [tape + r8], 0
jz c8c2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o8c2
c8c2:
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
o8c3:
cmp byte [tape + r8], 0
jz c8c3
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8c3
c8c3:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8c4:
cmp byte [tape + r8], 0
jz c8c4
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8c4
c8c4:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8c5:
cmp byte [tape + r8], 0
jz c8c5
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8c5
c8c5:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8c6:
cmp byte [tape + r8], 0
jz c8c6
call z
add r8, 8
and r8, 0xFFFF
o8c7:
cmp byte [tape + r8], 0
jz c8c7
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8c7
c8c7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8c8:
cmp byte [tape + r8], 0
jz c8c8
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8c8
c8c8:
jmp o8c6
c8c6:
add r8, 8
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o8c9:
cmp byte [tape + r8], 0
jz c8c9
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 41
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8c9
c8c9:
sub r8, 41
and r8, 0xFFFF
push 1
push 41
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8ca:
cmp byte [tape + r8], 0
jz c8ca
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8ca
c8ca:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8cb:
cmp byte [tape + r8], 0
jz c8cb
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8cb
c8cb:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8cc:
cmp byte [tape + r8], 0
jz c8cc
call z
add r8, 8
and r8, 0xFFFF
o8cd:
cmp byte [tape + r8], 0
jz c8cd
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8cd
c8cd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8ce:
cmp byte [tape + r8], 0
jz c8ce
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8ce
c8ce:
jmp o8cc
c8cc:
add r8, 8
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o8cf:
cmp byte [tape + r8], 0
jz c8cf
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8cf
c8cf:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8d0:
cmp byte [tape + r8], 0
jz c8d0
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8d0
c8d0:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8d1:
cmp byte [tape + r8], 0
jz c8d1
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8d1
c8d1:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8d2:
cmp byte [tape + r8], 0
jz c8d2
call z
add r8, 8
and r8, 0xFFFF
o8d3:
cmp byte [tape + r8], 0
jz c8d3
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8d3
c8d3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8d4:
cmp byte [tape + r8], 0
jz c8d4
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8d4
c8d4:
jmp o8d2
c8d2:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o8d5:
cmp byte [tape + r8], 0
jz c8d5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8d5
c8d5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o8d6:
cmp byte [tape + r8], 0
jz c8d6
add r8, 298
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 307
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o8d6
c8d6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8bf
c8bf:
sub r8, 1
and r8, 0xFFFF
o8d7:
cmp byte [tape + r8], 0
jz c8d7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8d7
c8d7:
add r8, 1
and r8, 0xFFFF
o8d8:
cmp byte [tape + r8], 0
jz c8d8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o8d9:
cmp byte [tape + r8], 0
jz c8d9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8d9
c8d9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8d8
c8d8:
add r8, 306
and r8, 0xFFFF
push 1
push 307
call ms
sub r8, 307
and r8, 0xFFFF
o8da:
cmp byte [tape + r8], 0
jz c8da
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8da
c8da:
add r8, 1
and r8, 0xFFFF
o8db:
cmp byte [tape + r8], 0
jz c8db
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o8dc:
cmp byte [tape + r8], 0
jz c8dc
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8dc
c8dc:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8dd:
cmp byte [tape + r8], 0
jz c8dd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8dd
c8dd:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o8de:
cmp byte [tape + r8], 0
jz c8de
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o8de
c8de:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o8df:
cmp byte [tape + r8], 0
jz c8df
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8df
c8df:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8e0:
cmp byte [tape + r8], 0
jz c8e0
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8e0
c8e0:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8e1:
cmp byte [tape + r8], 0
jz c8e1
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8e1
c8e1:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8e2:
cmp byte [tape + r8], 0
jz c8e2
call z
add r8, 8
and r8, 0xFFFF
o8e3:
cmp byte [tape + r8], 0
jz c8e3
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8e3
c8e3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8e4:
cmp byte [tape + r8], 0
jz c8e4
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8e4
c8e4:
jmp o8e2
c8e2:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o8e5:
cmp byte [tape + r8], 0
jz c8e5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8e5
c8e5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o8e6:
cmp byte [tape + r8], 0
jz c8e6
add r8, 299
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 308
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o8e6
c8e6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8db
c8db:
sub r8, 1
and r8, 0xFFFF
o8e7:
cmp byte [tape + r8], 0
jz c8e7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8e7
c8e7:
add r8, 1
and r8, 0xFFFF
o8e8:
cmp byte [tape + r8], 0
jz c8e8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o8e9:
cmp byte [tape + r8], 0
jz c8e9
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8e9
c8e9:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8ea:
cmp byte [tape + r8], 0
jz c8ea
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8ea
c8ea:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o8eb:
cmp byte [tape + r8], 0
jz c8eb
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o8eb
c8eb:
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o8ec:
cmp byte [tape + r8], 0
jz c8ec
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8ec
c8ec:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8ed:
cmp byte [tape + r8], 0
jz c8ed
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8ed
c8ed:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8ee:
cmp byte [tape + r8], 0
jz c8ee
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8ee
c8ee:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8ef:
cmp byte [tape + r8], 0
jz c8ef
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8ef
c8ef:
add r8, 8
and r8, 0xFFFF
o8f0:
cmp byte [tape + r8], 0
jz c8f0
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8f0
c8f0:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8f1:
cmp byte [tape + r8], 0
jz c8f1
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8f1
c8f1:
add r8, 8
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o8f2:
cmp byte [tape + r8], 0
jz c8f2
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8f2
c8f2:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8f3:
cmp byte [tape + r8], 0
jz c8f3
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8f3
c8f3:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8f4:
cmp byte [tape + r8], 0
jz c8f4
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8f4
c8f4:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8f5:
cmp byte [tape + r8], 0
jz c8f5
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8f5
c8f5:
add r8, 8
and r8, 0xFFFF
o8f6:
cmp byte [tape + r8], 0
jz c8f6
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8f6
c8f6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8f7:
cmp byte [tape + r8], 0
jz c8f7
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8f7
c8f7:
add r8, 8
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o8f8:
cmp byte [tape + r8], 0
jz c8f8
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8f8
c8f8:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o8f9:
cmp byte [tape + r8], 0
jz c8f9
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8f9
c8f9:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o8fa:
cmp byte [tape + r8], 0
jz c8fa
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8fa
c8fa:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o8fb:
cmp byte [tape + r8], 0
jz c8fb
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8fb
c8fb:
add r8, 8
and r8, 0xFFFF
o8fc:
cmp byte [tape + r8], 0
jz c8fc
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8fc
c8fc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o8fd:
cmp byte [tape + r8], 0
jz c8fd
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o8fd
c8fd:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o8fe:
cmp byte [tape + r8], 0
jz c8fe
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8fe
c8fe:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o8ff:
cmp byte [tape + r8], 0
jz c8ff
add r8, 300
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 309
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o8ff
c8ff:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o8e8
c8e8:
sub r8, 1
and r8, 0xFFFF
o900:
cmp byte [tape + r8], 0
jz c900
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o900
c900:
add r8, 1
and r8, 0xFFFF
o901:
cmp byte [tape + r8], 0
jz c901
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o902:
cmp byte [tape + r8], 0
jz c902
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o902
c902:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o903:
cmp byte [tape + r8], 0
jz c903
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o903
c903:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o904:
cmp byte [tape + r8], 0
jz c904
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o904
c904:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o905:
cmp byte [tape + r8], 0
jz c905
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o905
c905:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o906:
cmp byte [tape + r8], 0
jz c906
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o906
c906:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o907:
cmp byte [tape + r8], 0
jz c907
add r8, 301
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 310
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o907
c907:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o901
c901:
sub r8, 1
and r8, 0xFFFF
o908:
cmp byte [tape + r8], 0
jz c908
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o908
c908:
add r8, 1
and r8, 0xFFFF
o909:
cmp byte [tape + r8], 0
jz c909
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
o90a:
cmp byte [tape + r8], 0
jz c90a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o90a
c90a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 308
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 311
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o909
c909:
add r8, 309
and r8, 0xFFFF
push 1
push 310
call ms
sub r8, 310
and r8, 0xFFFF
o90b:
cmp byte [tape + r8], 0
jz c90b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o90b
c90b:
add r8, 1
and r8, 0xFFFF
o90c:
cmp byte [tape + r8], 0
jz c90c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o90d:
cmp byte [tape + r8], 0
jz c90d
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o90d
c90d:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o90e:
cmp byte [tape + r8], 0
jz c90e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o90e
c90e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o90f:
cmp byte [tape + r8], 0
jz c90f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o90f
c90f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o910:
cmp byte [tape + r8], 0
jz c910
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o910
c910:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o911:
cmp byte [tape + r8], 0
jz c911
add r8, 303
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 312
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o911
c911:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o90c
c90c:
sub r8, 1
and r8, 0xFFFF
o912:
cmp byte [tape + r8], 0
jz c912
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o912
c912:
add r8, 1
and r8, 0xFFFF
o913:
cmp byte [tape + r8], 0
jz c913
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o914:
cmp byte [tape + r8], 0
jz c914
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o914
c914:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 310
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 313
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o913
c913:
add r8, 311
and r8, 0xFFFF
push 1
push 312
call ms
sub r8, 312
and r8, 0xFFFF
o915:
cmp byte [tape + r8], 0
jz c915
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o915
c915:
add r8, 1
and r8, 0xFFFF
o916:
cmp byte [tape + r8], 0
jz c916
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o917:
cmp byte [tape + r8], 0
jz c917
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o917
c917:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o918:
cmp byte [tape + r8], 0
jz c918
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o918
c918:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o919:
cmp byte [tape + r8], 0
jz c919
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o919
c919:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o91a:
cmp byte [tape + r8], 0
jz c91a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o91a
c91a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o91b:
cmp byte [tape + r8], 0
jz c91b
add r8, 305
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 314
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o91b
c91b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o916
c916:
sub r8, 1
and r8, 0xFFFF
o91c:
cmp byte [tape + r8], 0
jz c91c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o91c
c91c:
add r8, 1
and r8, 0xFFFF
o91d:
cmp byte [tape + r8], 0
jz c91d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
o91e:
cmp byte [tape + r8], 0
jz c91e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o91e
c91e:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 312
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 315
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o91d
c91d:
add r8, 313
and r8, 0xFFFF
push 1
push 314
call ms
sub r8, 314
and r8, 0xFFFF
o91f:
cmp byte [tape + r8], 0
jz c91f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o91f
c91f:
add r8, 1
and r8, 0xFFFF
o920:
cmp byte [tape + r8], 0
jz c920
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o921:
cmp byte [tape + r8], 0
jz c921
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o921
c921:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o922:
cmp byte [tape + r8], 0
jz c922
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o922
c922:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o923:
cmp byte [tape + r8], 0
jz c923
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o923
c923:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o924:
cmp byte [tape + r8], 0
jz c924
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o924
c924:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o925:
cmp byte [tape + r8], 0
jz c925
add r8, 307
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 316
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o925
c925:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o920
c920:
sub r8, 1
and r8, 0xFFFF
o926:
cmp byte [tape + r8], 0
jz c926
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o926
c926:
add r8, 1
and r8, 0xFFFF
o927:
cmp byte [tape + r8], 0
jz c927
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
o928:
cmp byte [tape + r8], 0
jz c928
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o928
c928:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o927
c927:
add r8, 315
and r8, 0xFFFF
push 1
push 316
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 315
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 313
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 311
call ms
sub r8, 311
and r8, 0xFFFF
o929:
cmp byte [tape + r8], 0
jz c929
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o929
c929:
add r8, 1
and r8, 0xFFFF
o92a:
cmp byte [tape + r8], 0
jz c92a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o92b:
cmp byte [tape + r8], 0
jz c92b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o92b
c92b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o92a
c92a:
add r8, 308
and r8, 0xFFFF
push 1
push 309
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 308
call ms
sub r8, 308
and r8, 0xFFFF
o92c:
cmp byte [tape + r8], 0
jz c92c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o92c
c92c:
add r8, 1
and r8, 0xFFFF
o92d:
cmp byte [tape + r8], 0
jz c92d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 18
and r8, 0xFFFF
o92e:
cmp byte [tape + r8], 0
jz c92e
sub r8, 18
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 25
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o92e
c92e:
sub r8, 25
and r8, 0xFFFF
push 1
push 25
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o92f:
cmp byte [tape + r8], 0
jz c92f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o92f
c92f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o930:
cmp byte [tape + r8], 0
jz c930
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o930
c930:
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
o931:
cmp byte [tape + r8], 0
jz c931
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o931
c931:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o932:
cmp byte [tape + r8], 0
jz c932
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o932
c932:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o933:
cmp byte [tape + r8], 0
jz c933
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o933
c933:
add r8, 8
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
o934:
cmp byte [tape + r8], 0
jz c934
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o934
c934:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 1
and r8, 0xFFFF
push 1
push 5
call ms
add r8, 1
and r8, 0xFFFF
o935:
cmp byte [tape + r8], 0
jz c935
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o935
c935:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 2
and r8, 0xFFFF
o936:
cmp byte [tape + r8], 0
jz c936
add r8, 2
and r8, 0xFFFF
o937:
cmp byte [tape + r8], 0
jz c937
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o937
c937:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o938:
cmp byte [tape + r8], 0
jz c938
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o938
c938:
sub r8, 3
and r8, 0xFFFF
o939:
cmp byte [tape + r8], 0
jz c939
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o939
c939:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o936
c936:
add r8, 2
and r8, 0xFFFF
o93a:
cmp byte [tape + r8], 0
jz c93a
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 5
and r8, 0xFFFF
call z
jmp o93a
c93a:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o93b:
cmp byte [tape + r8], 0
jz c93b
call z
add r8, 9
and r8, 0xFFFF
o93c:
cmp byte [tape + r8], 0
jz c93c
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o93c
c93c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o93d:
cmp byte [tape + r8], 0
jz c93d
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o93d
c93d:
jmp o93b
c93b:
add r8, 9
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
o93e:
cmp byte [tape + r8], 0
jz c93e
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o93e
c93e:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o93f:
cmp byte [tape + r8], 0
jz c93f
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o93f
c93f:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o940:
cmp byte [tape + r8], 0
jz c940
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o940
c940:
add r8, 9
and r8, 0xFFFF
call z
add r8, 25
and r8, 0xFFFF
o941:
cmp byte [tape + r8], 0
jz c941
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o941
c941:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 315
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 305
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 305
and r8, 0xFFFF
o942:
cmp byte [tape + r8], 0
jz c942
sub r8, 314
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 315
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o942
c942:
sub r8, 315
and r8, 0xFFFF
push 1
push 315
call m
add r8, 2
and r8, 0xFFFF
o943:
cmp byte [tape + r8], 0
jz c943
add r8, 2
and r8, 0xFFFF
o944:
cmp byte [tape + r8], 0
jz c944
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o944
c944:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o945:
cmp byte [tape + r8], 0
jz c945
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o945
c945:
sub r8, 3
and r8, 0xFFFF
o946:
cmp byte [tape + r8], 0
jz c946
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o946
c946:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o943
c943:
add r8, 2
and r8, 0xFFFF
o947:
cmp byte [tape + r8], 0
jz c947
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o947
c947:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
push 1
push 9
call ms
sub r8, 9
and r8, 0xFFFF
o948:
cmp byte [tape + r8], 0
jz c948
call z
add r8, 10
and r8, 0xFFFF
o949:
cmp byte [tape + r8], 0
jz c949
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o949
c949:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
sub r8, 1
and r8, 0xFFFF
o94a:
cmp byte [tape + r8], 0
jz c94a
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
call z
jmp o94a
c94a:
jmp o948
c948:
add r8, 8
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o94b:
cmp byte [tape + r8], 0
jz c94b
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o94b
c94b:
add r8, 9
and r8, 0xFFFF
o94c:
cmp byte [tape + r8], 0
jz c94c
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o94c
c94c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o94d:
cmp byte [tape + r8], 0
jz c94d
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o94d
c94d:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o94e:
cmp byte [tape + r8], 0
jz c94e
call z
add r8, 8
and r8, 0xFFFF
o94f:
cmp byte [tape + r8], 0
jz c94f
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o94f
c94f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o950:
cmp byte [tape + r8], 0
jz c950
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o950
c950:
jmp o94e
c94e:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o951:
cmp byte [tape + r8], 0
jz c951
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o951
c951:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o952:
cmp byte [tape + r8], 0
jz c952
add r8, 309
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 318
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o952
c952:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o92d
c92d:
sub r8, 1
and r8, 0xFFFF
o953:
cmp byte [tape + r8], 0
jz c953
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o953
c953:
add r8, 1
and r8, 0xFFFF
o954:
cmp byte [tape + r8], 0
jz c954
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o955:
cmp byte [tape + r8], 0
jz c955
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o955
c955:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o956:
cmp byte [tape + r8], 0
jz c956
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o956
c956:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o957:
cmp byte [tape + r8], 0
jz c957
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o957
c957:
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o958:
cmp byte [tape + r8], 0
jz c958
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o958
c958:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o959:
cmp byte [tape + r8], 0
jz c959
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o959
c959:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o95a:
cmp byte [tape + r8], 0
jz c95a
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o95a
c95a:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o95b:
cmp byte [tape + r8], 0
jz c95b
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o95b
c95b:
add r8, 8
and r8, 0xFFFF
o95c:
cmp byte [tape + r8], 0
jz c95c
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o95c
c95c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o95d:
cmp byte [tape + r8], 0
jz c95d
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o95d
c95d:
add r8, 8
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o95e:
cmp byte [tape + r8], 0
jz c95e
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o95e
c95e:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o95f:
cmp byte [tape + r8], 0
jz c95f
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o95f
c95f:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o960:
cmp byte [tape + r8], 0
jz c960
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o960
c960:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o961:
cmp byte [tape + r8], 0
jz c961
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o961
c961:
add r8, 8
and r8, 0xFFFF
o962:
cmp byte [tape + r8], 0
jz c962
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o962
c962:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o963:
cmp byte [tape + r8], 0
jz c963
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o963
c963:
add r8, 8
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
o964:
cmp byte [tape + r8], 0
jz c964
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o964
c964:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o965:
cmp byte [tape + r8], 0
jz c965
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o965
c965:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o966:
cmp byte [tape + r8], 0
jz c966
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o966
c966:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o967:
cmp byte [tape + r8], 0
jz c967
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o967
c967:
add r8, 8
and r8, 0xFFFF
o968:
cmp byte [tape + r8], 0
jz c968
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o968
c968:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o969:
cmp byte [tape + r8], 0
jz c969
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o969
c969:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o96a:
cmp byte [tape + r8], 0
jz c96a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o96a
c96a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o96b:
cmp byte [tape + r8], 0
jz c96b
add r8, 310
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 319
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o96b
c96b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o954
c954:
sub r8, 1
and r8, 0xFFFF
o96c:
cmp byte [tape + r8], 0
jz c96c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o96c
c96c:
add r8, 1
and r8, 0xFFFF
o96d:
cmp byte [tape + r8], 0
jz c96d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o96e:
cmp byte [tape + r8], 0
jz c96e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o96e
c96e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o96d
c96d:
add r8, 318
and r8, 0xFFFF
push 1
push 319
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 318
call ms
sub r8, 318
and r8, 0xFFFF
o96f:
cmp byte [tape + r8], 0
jz c96f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o96f
c96f:
add r8, 1
and r8, 0xFFFF
o970:
cmp byte [tape + r8], 0
jz c970
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o971:
cmp byte [tape + r8], 0
jz c971
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o971
c971:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o972:
cmp byte [tape + r8], 0
jz c972
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o972
c972:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o973:
cmp byte [tape + r8], 0
jz c973
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o973
c973:
add r8, 7
and r8, 0xFFFF
call z
add r8, 19
and r8, 0xFFFF
o974:
cmp byte [tape + r8], 0
jz c974
sub r8, 19
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o974
c974:
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o975:
cmp byte [tape + r8], 0
jz c975
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o975
c975:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o976:
cmp byte [tape + r8], 0
jz c976
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o976
c976:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o977:
cmp byte [tape + r8], 0
jz c977
call z
add r8, 8
and r8, 0xFFFF
o978:
cmp byte [tape + r8], 0
jz c978
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o978
c978:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o979:
cmp byte [tape + r8], 0
jz c979
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o979
c979:
jmp o977
c977:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o97a:
cmp byte [tape + r8], 0
jz c97a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o97a
c97a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o97b:
cmp byte [tape + r8], 0
jz c97b
add r8, 311
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 320
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o97b
c97b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o970
c970:
sub r8, 1
and r8, 0xFFFF
o97c:
cmp byte [tape + r8], 0
jz c97c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o97c
c97c:
add r8, 1
and r8, 0xFFFF
o97d:
cmp byte [tape + r8], 0
jz c97d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o97e:
cmp byte [tape + r8], 0
jz c97e
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o97e
c97e:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o97f:
cmp byte [tape + r8], 0
jz c97f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o97f
c97f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o980:
cmp byte [tape + r8], 0
jz c980
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o980
c980:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o981:
cmp byte [tape + r8], 0
jz c981
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o981
c981:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o982:
cmp byte [tape + r8], 0
jz c982
add r8, 312
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 321
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o982
c982:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o97d
c97d:
sub r8, 1
and r8, 0xFFFF
o983:
cmp byte [tape + r8], 0
jz c983
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o983
c983:
add r8, 1
and r8, 0xFFFF
o984:
cmp byte [tape + r8], 0
jz c984
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o985:
cmp byte [tape + r8], 0
jz c985
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o985
c985:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o984
c984:
add r8, 320
and r8, 0xFFFF
push 1
push 321
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 320
call ms
sub r8, 320
and r8, 0xFFFF
o986:
cmp byte [tape + r8], 0
jz c986
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o986
c986:
add r8, 1
and r8, 0xFFFF
o987:
cmp byte [tape + r8], 0
jz c987
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o988:
cmp byte [tape + r8], 0
jz c988
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o988
c988:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 15
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o989:
cmp byte [tape + r8], 0
jz c989
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o989
c989:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o98a:
cmp byte [tape + r8], 0
jz c98a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o98a
c98a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o98b:
cmp byte [tape + r8], 0
jz c98b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o98b
c98b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o98c:
cmp byte [tape + r8], 0
jz c98c
add r8, 313
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 322
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o98c
c98c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o987
c987:
sub r8, 1
and r8, 0xFFFF
o98d:
cmp byte [tape + r8], 0
jz c98d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o98d
c98d:
add r8, 1
and r8, 0xFFFF
o98e:
cmp byte [tape + r8], 0
jz c98e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o98f:
cmp byte [tape + r8], 0
jz c98f
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o98f
c98f:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o990:
cmp byte [tape + r8], 0
jz c990
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o990
c990:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o991:
cmp byte [tape + r8], 0
jz c991
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o991
c991:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o992:
cmp byte [tape + r8], 0
jz c992
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o992
c992:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o993:
cmp byte [tape + r8], 0
jz c993
add r8, 314
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 323
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o993
c993:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o98e
c98e:
sub r8, 1
and r8, 0xFFFF
o994:
cmp byte [tape + r8], 0
jz c994
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o994
c994:
add r8, 1
and r8, 0xFFFF
o995:
cmp byte [tape + r8], 0
jz c995
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o996:
cmp byte [tape + r8], 0
jz c996
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o996
c996:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
o997:
cmp byte [tape + r8], 0
jz c997
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o997
c997:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o998:
cmp byte [tape + r8], 0
jz c998
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o998
c998:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o999:
cmp byte [tape + r8], 0
jz c999
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o999
c999:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o99a:
cmp byte [tape + r8], 0
jz c99a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o99a
c99a:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o99b:
cmp byte [tape + r8], 0
jz c99b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o99b
c99b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 14
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o99c:
cmp byte [tape + r8], 0
jz c99c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o99c
c99c:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o99d:
cmp byte [tape + r8], 0
jz c99d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o99d
c99d:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o99e:
cmp byte [tape + r8], 0
jz c99e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o99e
c99e:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o99f:
cmp byte [tape + r8], 0
jz c99f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o99f
c99f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9a0:
cmp byte [tape + r8], 0
jz c9a0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a0
c9a0:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9a1:
cmp byte [tape + r8], 0
jz c9a1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a1
c9a1:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9a2:
cmp byte [tape + r8], 0
jz c9a2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a2
c9a2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
o9a3:
cmp byte [tape + r8], 0
jz c9a3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a3
c9a3:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o995
c995:
add r8, 322
and r8, 0xFFFF
push 1
push 323
call ms
sub r8, 323
and r8, 0xFFFF
o9a4:
cmp byte [tape + r8], 0
jz c9a4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a4
c9a4:
add r8, 1
and r8, 0xFFFF
o9a5:
cmp byte [tape + r8], 0
jz c9a5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o9a6:
cmp byte [tape + r8], 0
jz c9a6
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a6
c9a6:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o9a7:
cmp byte [tape + r8], 0
jz c9a7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a7
c9a7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o9a8:
cmp byte [tape + r8], 0
jz c9a8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o9a8
c9a8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o9a9:
cmp byte [tape + r8], 0
jz c9a9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a9
c9a9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o9aa:
cmp byte [tape + r8], 0
jz c9aa
add r8, 315
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 324
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o9aa
c9aa:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9a5
c9a5:
sub r8, 1
and r8, 0xFFFF
o9ab:
cmp byte [tape + r8], 0
jz c9ab
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ab
c9ab:
add r8, 1
and r8, 0xFFFF
o9ac:
cmp byte [tape + r8], 0
jz c9ac
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9ad:
cmp byte [tape + r8], 0
jz c9ad
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ad
c9ad:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9ae:
cmp byte [tape + r8], 0
jz c9ae
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ae
c9ae:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9af:
cmp byte [tape + r8], 0
jz c9af
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9af
c9af:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 15
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9b0:
cmp byte [tape + r8], 0
jz c9b0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b0
c9b0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9b1:
cmp byte [tape + r8], 0
jz c9b1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b1
c9b1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 14
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o9b2:
cmp byte [tape + r8], 0
jz c9b2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b2
c9b2:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 10
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 4
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9b3:
cmp byte [tape + r8], 0
jz c9b3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b3
c9b3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9b4:
cmp byte [tape + r8], 0
jz c9b4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b4
c9b4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9b5:
cmp byte [tape + r8], 0
jz c9b5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b5
c9b5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9b6:
cmp byte [tape + r8], 0
jz c9b6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b6
c9b6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9b7:
cmp byte [tape + r8], 0
jz c9b7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b7
c9b7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9b8:
cmp byte [tape + r8], 0
jz c9b8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b8
c9b8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 18
o9b9:
cmp byte [tape + r8], 0
jz c9b9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9b9
c9b9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9ba:
cmp byte [tape + r8], 0
jz c9ba
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ba
c9ba:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9bb:
cmp byte [tape + r8], 0
jz c9bb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9bb
c9bb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ac
c9ac:
add r8, 323
and r8, 0xFFFF
push 1
push 324
call ms
sub r8, 324
and r8, 0xFFFF
o9bc:
cmp byte [tape + r8], 0
jz c9bc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9bc
c9bc:
add r8, 1
and r8, 0xFFFF
o9bd:
cmp byte [tape + r8], 0
jz c9bd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o9be:
cmp byte [tape + r8], 0
jz c9be
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9be
c9be:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o9bf:
cmp byte [tape + r8], 0
jz c9bf
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9bf
c9bf:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o9c0:
cmp byte [tape + r8], 0
jz c9c0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o9c0
c9c0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o9c1:
cmp byte [tape + r8], 0
jz c9c1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c1
c9c1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o9c2:
cmp byte [tape + r8], 0
jz c9c2
add r8, 316
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 325
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o9c2
c9c2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9bd
c9bd:
sub r8, 1
and r8, 0xFFFF
o9c3:
cmp byte [tape + r8], 0
jz c9c3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c3
c9c3:
add r8, 1
and r8, 0xFFFF
o9c4:
cmp byte [tape + r8], 0
jz c9c4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9c5:
cmp byte [tape + r8], 0
jz c9c5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c5
c9c5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o9c6:
cmp byte [tape + r8], 0
jz c9c6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c6
c9c6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9c7:
cmp byte [tape + r8], 0
jz c9c7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c7
c9c7:
add r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9c8:
cmp byte [tape + r8], 0
jz c9c8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c8
c9c8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9c9:
cmp byte [tape + r8], 0
jz c9c9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c9
c9c9:
add r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9ca:
cmp byte [tape + r8], 0
jz c9ca
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ca
c9ca:
add r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9cb:
cmp byte [tape + r8], 0
jz c9cb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9cb
c9cb:
add r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9cc:
cmp byte [tape + r8], 0
jz c9cc
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9cc
c9cc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9cd:
cmp byte [tape + r8], 0
jz c9cd
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9cd
c9cd:
add r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 5
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9ce:
cmp byte [tape + r8], 0
jz c9ce
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ce
c9ce:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9cf:
cmp byte [tape + r8], 0
jz c9cf
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9cf
c9cf:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9d0:
cmp byte [tape + r8], 0
jz c9d0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d0
c9d0:
add r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9d1:
cmp byte [tape + r8], 0
jz c9d1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d1
c9d1:
add r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o9d2:
cmp byte [tape + r8], 0
jz c9d2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d2
c9d2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 16
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o9d3:
cmp byte [tape + r8], 0
jz c9d3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d3
c9d3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
call o
call o
call o
call o
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 4
and r8, 0xFFFF
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 5
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9d4:
cmp byte [tape + r8], 0
jz c9d4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d4
c9d4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9d5:
cmp byte [tape + r8], 0
jz c9d5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d5
c9d5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o9d6:
cmp byte [tape + r8], 0
jz c9d6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d6
c9d6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9d7:
cmp byte [tape + r8], 0
jz c9d7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d7
c9d7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9c4
c9c4:
add r8, 324
and r8, 0xFFFF
push 1
push 325
call ms
sub r8, 325
and r8, 0xFFFF
o9d8:
cmp byte [tape + r8], 0
jz c9d8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d8
c9d8:
add r8, 1
and r8, 0xFFFF
o9d9:
cmp byte [tape + r8], 0
jz c9d9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o9da:
cmp byte [tape + r8], 0
jz c9da
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9da
c9da:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o9db:
cmp byte [tape + r8], 0
jz c9db
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9db
c9db:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o9dc:
cmp byte [tape + r8], 0
jz c9dc
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o9dc
c9dc:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o9dd:
cmp byte [tape + r8], 0
jz c9dd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9dd
c9dd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o9de:
cmp byte [tape + r8], 0
jz c9de
add r8, 317
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 326
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o9de
c9de:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9d9
c9d9:
sub r8, 1
and r8, 0xFFFF
o9df:
cmp byte [tape + r8], 0
jz c9df
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9df
c9df:
add r8, 1
and r8, 0xFFFF
o9e0:
cmp byte [tape + r8], 0
jz c9e0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9e1:
cmp byte [tape + r8], 0
jz c9e1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e1
c9e1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o9e2:
cmp byte [tape + r8], 0
jz c9e2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e2
c9e2:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9e3:
cmp byte [tape + r8], 0
jz c9e3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e3
c9e3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9e4:
cmp byte [tape + r8], 0
jz c9e4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e4
c9e4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9e5:
cmp byte [tape + r8], 0
jz c9e5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e5
c9e5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 11
call o
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
o9e6:
cmp byte [tape + r8], 0
jz c9e6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e6
c9e6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9e7:
cmp byte [tape + r8], 0
jz c9e7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e7
c9e7:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9e8:
cmp byte [tape + r8], 0
jz c9e8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e8
c9e8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9e9:
cmp byte [tape + r8], 0
jz c9e9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e9
c9e9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9ea:
cmp byte [tape + r8], 0
jz c9ea
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ea
c9ea:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 14
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9eb:
cmp byte [tape + r8], 0
jz c9eb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9eb
c9eb:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9ec:
cmp byte [tape + r8], 0
jz c9ec
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ec
c9ec:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9ed:
cmp byte [tape + r8], 0
jz c9ed
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ed
c9ed:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9ee:
cmp byte [tape + r8], 0
jz c9ee
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ee
c9ee:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o9ef:
cmp byte [tape + r8], 0
jz c9ef
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ef
c9ef:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add r8, 4
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9e0
c9e0:
add r8, 325
and r8, 0xFFFF
push 1
push 326
call ms
sub r8, 326
and r8, 0xFFFF
o9f0:
cmp byte [tape + r8], 0
jz c9f0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f0
c9f0:
add r8, 1
and r8, 0xFFFF
o9f1:
cmp byte [tape + r8], 0
jz c9f1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o9f2:
cmp byte [tape + r8], 0
jz c9f2
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f2
c9f2:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o9f3:
cmp byte [tape + r8], 0
jz c9f3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f3
c9f3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o9f4:
cmp byte [tape + r8], 0
jz c9f4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o9f4
c9f4:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o9f5:
cmp byte [tape + r8], 0
jz c9f5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f5
c9f5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o9f6:
cmp byte [tape + r8], 0
jz c9f6
add r8, 318
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 327
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o9f6
c9f6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f1
c9f1:
sub r8, 1
and r8, 0xFFFF
o9f7:
cmp byte [tape + r8], 0
jz c9f7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f7
c9f7:
add r8, 1
and r8, 0xFFFF
o9f8:
cmp byte [tape + r8], 0
jz c9f8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9f9:
cmp byte [tape + r8], 0
jz c9f9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f9
c9f9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9fa:
cmp byte [tape + r8], 0
jz c9fa
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9fa
c9fa:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o9fb:
cmp byte [tape + r8], 0
jz c9fb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9fb
c9fb:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
o9fc:
cmp byte [tape + r8], 0
jz c9fc
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9fc
c9fc:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9fd:
cmp byte [tape + r8], 0
jz c9fd
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9fd
c9fd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o9fe:
cmp byte [tape + r8], 0
jz c9fe
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9fe
c9fe:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o9ff:
cmp byte [tape + r8], 0
jz c9ff
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9ff
c9ff:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 12
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
oa00:
cmp byte [tape + r8], 0
jz ca00
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa00
ca00:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
oa01:
cmp byte [tape + r8], 0
jz ca01
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa01
ca01:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa02:
cmp byte [tape + r8], 0
jz ca02
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa02
ca02:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 14
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa03:
cmp byte [tape + r8], 0
jz ca03
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa03
ca03:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa04:
cmp byte [tape + r8], 0
jz ca04
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa04
ca04:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o9f8
c9f8:
add r8, 326
and r8, 0xFFFF
push 1
push 327
call ms
sub r8, 327
and r8, 0xFFFF
oa05:
cmp byte [tape + r8], 0
jz ca05
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa05
ca05:
add r8, 1
and r8, 0xFFFF
oa06:
cmp byte [tape + r8], 0
jz ca06
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oa07:
cmp byte [tape + r8], 0
jz ca07
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa07
ca07:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa08:
cmp byte [tape + r8], 0
jz ca08
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa08
ca08:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa09:
cmp byte [tape + r8], 0
jz ca09
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa09
ca09:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa0a:
cmp byte [tape + r8], 0
jz ca0a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa0a
ca0a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa0b:
cmp byte [tape + r8], 0
jz ca0b
add r8, 319
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 328
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa0b
ca0b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa06
ca06:
sub r8, 1
and r8, 0xFFFF
oa0c:
cmp byte [tape + r8], 0
jz ca0c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa0c
ca0c:
add r8, 1
and r8, 0xFFFF
oa0d:
cmp byte [tape + r8], 0
jz ca0d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oa0e:
cmp byte [tape + r8], 0
jz ca0e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa0e
ca0e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oa0f:
cmp byte [tape + r8], 0
jz ca0f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa0f
ca0f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa10:
cmp byte [tape + r8], 0
jz ca10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa10
ca10:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa11:
cmp byte [tape + r8], 0
jz ca11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa11
ca11:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 11
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa12:
cmp byte [tape + r8], 0
jz ca12
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa12
ca12:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa13:
cmp byte [tape + r8], 0
jz ca13
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa13
ca13:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa14:
cmp byte [tape + r8], 0
jz ca14
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa14
ca14:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oa15:
cmp byte [tape + r8], 0
jz ca15
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa15
ca15:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 10
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oa16:
cmp byte [tape + r8], 0
jz ca16
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa16
ca16:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 10
call o
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 13
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oa17:
cmp byte [tape + r8], 0
jz ca17
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa17
ca17:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa18:
cmp byte [tape + r8], 0
jz ca18
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa18
ca18:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 10
call o
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa19:
cmp byte [tape + r8], 0
jz ca19
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa19
ca19:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa1a:
cmp byte [tape + r8], 0
jz ca1a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa1a
ca1a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa1b:
cmp byte [tape + r8], 0
jz ca1b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa1b
ca1b:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa1c:
cmp byte [tape + r8], 0
jz ca1c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa1c
ca1c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
oa1d:
cmp byte [tape + r8], 0
jz ca1d
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa1d
ca1d:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa1e:
cmp byte [tape + r8], 0
jz ca1e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa1e
ca1e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa1f:
cmp byte [tape + r8], 0
jz ca1f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa1f
ca1f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa20:
cmp byte [tape + r8], 0
jz ca20
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa20
ca20:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa21:
cmp byte [tape + r8], 0
jz ca21
add r8, 320
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 329
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa21
ca21:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa0d
ca0d:
sub r8, 1
and r8, 0xFFFF
oa22:
cmp byte [tape + r8], 0
jz ca22
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa22
ca22:
add r8, 1
and r8, 0xFFFF
oa23:
cmp byte [tape + r8], 0
jz ca23
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
oa24:
cmp byte [tape + r8], 0
jz ca24
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa24
ca24:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 328
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 330
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa23
ca23:
add r8, 328
and r8, 0xFFFF
push 1
push 329
call ms
sub r8, 329
and r8, 0xFFFF
oa25:
cmp byte [tape + r8], 0
jz ca25
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa25
ca25:
add r8, 1
and r8, 0xFFFF
oa26:
cmp byte [tape + r8], 0
jz ca26
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa26
ca26:
add r8, 329
and r8, 0xFFFF
push 1
push 330
call ms
sub r8, 330
and r8, 0xFFFF
oa27:
cmp byte [tape + r8], 0
jz ca27
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa27
ca27:
add r8, 1
and r8, 0xFFFF
oa28:
cmp byte [tape + r8], 0
jz ca28
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa29:
cmp byte [tape + r8], 0
jz ca29
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa29
ca29:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa2a:
cmp byte [tape + r8], 0
jz ca2a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa2a
ca2a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 10
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa2b:
cmp byte [tape + r8], 0
jz ca2b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa2b
ca2b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa28
ca28:
add r8, 327
and r8, 0xFFFF
push 1
push 328
call ms
sub r8, 328
and r8, 0xFFFF
oa2c:
cmp byte [tape + r8], 0
jz ca2c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa2c
ca2c:
add r8, 1
and r8, 0xFFFF
oa2d:
cmp byte [tape + r8], 0
jz ca2d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oa2e:
cmp byte [tape + r8], 0
jz ca2e
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa2e
ca2e:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa2f:
cmp byte [tape + r8], 0
jz ca2f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa2f
ca2f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa30:
cmp byte [tape + r8], 0
jz ca30
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa30
ca30:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa31:
cmp byte [tape + r8], 0
jz ca31
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa31
ca31:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa32:
cmp byte [tape + r8], 0
jz ca32
add r8, 322
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 331
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa32
ca32:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa2d
ca2d:
sub r8, 1
and r8, 0xFFFF
oa33:
cmp byte [tape + r8], 0
jz ca33
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa33
ca33:
add r8, 1
and r8, 0xFFFF
oa34:
cmp byte [tape + r8], 0
jz ca34
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa35:
cmp byte [tape + r8], 0
jz ca35
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa35
ca35:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 20
oa36:
cmp byte [tape + r8], 0
jz ca36
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa36
ca36:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 13
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oa37:
cmp byte [tape + r8], 0
jz ca37
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa37
ca37:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oa38:
cmp byte [tape + r8], 0
jz ca38
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa38
ca38:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 11
call o
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa39:
cmp byte [tape + r8], 0
jz ca39
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa39
ca39:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa34
ca34:
add r8, 330
and r8, 0xFFFF
push 1
push 331
call ms
sub r8, 331
and r8, 0xFFFF
oa3a:
cmp byte [tape + r8], 0
jz ca3a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa3a
ca3a:
add r8, 1
and r8, 0xFFFF
oa3b:
cmp byte [tape + r8], 0
jz ca3b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oa3c:
cmp byte [tape + r8], 0
jz ca3c
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa3c
ca3c:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa3d:
cmp byte [tape + r8], 0
jz ca3d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa3d
ca3d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa3e:
cmp byte [tape + r8], 0
jz ca3e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa3e
ca3e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa3f:
cmp byte [tape + r8], 0
jz ca3f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa3f
ca3f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa40:
cmp byte [tape + r8], 0
jz ca40
add r8, 323
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 332
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa40
ca40:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa3b
ca3b:
sub r8, 1
and r8, 0xFFFF
oa41:
cmp byte [tape + r8], 0
jz ca41
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa41
ca41:
add r8, 1
and r8, 0xFFFF
oa42:
cmp byte [tape + r8], 0
jz ca42
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oa43:
cmp byte [tape + r8], 0
jz ca43
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa43
ca43:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa44:
cmp byte [tape + r8], 0
jz ca44
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa44
ca44:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa45:
cmp byte [tape + r8], 0
jz ca45
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa45
ca45:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 19
oa46:
cmp byte [tape + r8], 0
jz ca46
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa46
ca46:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
call o
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa47:
cmp byte [tape + r8], 0
jz ca47
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa47
ca47:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa48:
cmp byte [tape + r8], 0
jz ca48
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa48
ca48:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 19
call o
add byte [tape + r8], 11
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
oa49:
cmp byte [tape + r8], 0
jz ca49
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa49
ca49:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa4a:
cmp byte [tape + r8], 0
jz ca4a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa4a
ca4a:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa4b:
cmp byte [tape + r8], 0
jz ca4b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa4b
ca4b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa42
ca42:
add r8, 331
and r8, 0xFFFF
push 1
push 332
call ms
sub r8, 332
and r8, 0xFFFF
oa4c:
cmp byte [tape + r8], 0
jz ca4c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa4c
ca4c:
add r8, 1
and r8, 0xFFFF
oa4d:
cmp byte [tape + r8], 0
jz ca4d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oa4e:
cmp byte [tape + r8], 0
jz ca4e
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa4e
ca4e:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa4f:
cmp byte [tape + r8], 0
jz ca4f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa4f
ca4f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa50:
cmp byte [tape + r8], 0
jz ca50
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa50
ca50:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
oa51:
cmp byte [tape + r8], 0
jz ca51
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa51
ca51:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 4
call ms
add r8, 1
and r8, 0xFFFF
oa52:
cmp byte [tape + r8], 0
jz ca52
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa52
ca52:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 2
and r8, 0xFFFF
oa53:
cmp byte [tape + r8], 0
jz ca53
add r8, 2
and r8, 0xFFFF
oa54:
cmp byte [tape + r8], 0
jz ca54
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa54
ca54:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
oa55:
cmp byte [tape + r8], 0
jz ca55
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp oa55
ca55:
sub r8, 3
and r8, 0xFFFF
oa56:
cmp byte [tape + r8], 0
jz ca56
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa56
ca56:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa53
ca53:
add r8, 2
and r8, 0xFFFF
oa57:
cmp byte [tape + r8], 0
jz ca57
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
call z
jmp oa57
ca57:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add r8, 288
and r8, 0xFFFF
oa58:
cmp byte [tape + r8], 0
jz ca58
sub r8, 288
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa58
ca58:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 5
call ms
add r8, 1
and r8, 0xFFFF
oa59:
cmp byte [tape + r8], 0
jz ca59
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa59
ca59:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 2
and r8, 0xFFFF
oa5a:
cmp byte [tape + r8], 0
jz ca5a
add r8, 2
and r8, 0xFFFF
oa5b:
cmp byte [tape + r8], 0
jz ca5b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa5b
ca5b:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
oa5c:
cmp byte [tape + r8], 0
jz ca5c
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp oa5c
ca5c:
sub r8, 3
and r8, 0xFFFF
oa5d:
cmp byte [tape + r8], 0
jz ca5d
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa5d
ca5d:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa5a
ca5a:
sub r8, 1
and r8, 0xFFFF
oa5e:
cmp byte [tape + r8], 0
jz ca5e
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oa5e
ca5e:
add r8, 3
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
oa5f:
cmp byte [tape + r8], 0
jz ca5f
call z
add r8, 9
and r8, 0xFFFF
oa60:
cmp byte [tape + r8], 0
jz ca60
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa60
ca60:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
oa61:
cmp byte [tape + r8], 0
jz ca61
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oa61
ca61:
jmp oa5f
ca5f:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oa62:
cmp byte [tape + r8], 0
jz ca62
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oa62
ca62:
add r8, 8
and r8, 0xFFFF
oa63:
cmp byte [tape + r8], 0
jz ca63
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa63
ca63:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oa64:
cmp byte [tape + r8], 0
jz ca64
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oa64
ca64:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa65:
cmp byte [tape + r8], 0
jz ca65
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa65
ca65:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa66:
cmp byte [tape + r8], 0
jz ca66
add r8, 324
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 333
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa66
ca66:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa4d
ca4d:
sub r8, 1
and r8, 0xFFFF
oa67:
cmp byte [tape + r8], 0
jz ca67
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa67
ca67:
add r8, 1
and r8, 0xFFFF
oa68:
cmp byte [tape + r8], 0
jz ca68
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oa69:
cmp byte [tape + r8], 0
jz ca69
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa69
ca69:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa68
ca68:
add r8, 332
and r8, 0xFFFF
push 1
push 333
call ms
sub r8, 333
and r8, 0xFFFF
oa6a:
cmp byte [tape + r8], 0
jz ca6a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa6a
ca6a:
add r8, 1
and r8, 0xFFFF
oa6b:
cmp byte [tape + r8], 0
jz ca6b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa6b
ca6b:
add r8, 321
and r8, 0xFFFF
push 1
push 322
call ms
sub r8, 322
and r8, 0xFFFF
oa6c:
cmp byte [tape + r8], 0
jz ca6c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa6c
ca6c:
add r8, 1
and r8, 0xFFFF
oa6d:
cmp byte [tape + r8], 0
jz ca6d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
oa6e:
cmp byte [tape + r8], 0
jz ca6e
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa6e
ca6e:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa6f:
cmp byte [tape + r8], 0
jz ca6f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa6f
ca6f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa70:
cmp byte [tape + r8], 0
jz ca70
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa70
ca70:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa71:
cmp byte [tape + r8], 0
jz ca71
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa71
ca71:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa72:
cmp byte [tape + r8], 0
jz ca72
add r8, 325
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 334
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa72
ca72:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa6d
ca6d:
sub r8, 1
and r8, 0xFFFF
oa73:
cmp byte [tape + r8], 0
jz ca73
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa73
ca73:
add r8, 1
and r8, 0xFFFF
oa74:
cmp byte [tape + r8], 0
jz ca74
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oa75:
cmp byte [tape + r8], 0
jz ca75
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa75
ca75:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa76:
cmp byte [tape + r8], 0
jz ca76
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa76
ca76:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa77:
cmp byte [tape + r8], 0
jz ca77
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa77
ca77:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa78:
cmp byte [tape + r8], 0
jz ca78
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa78
ca78:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa79:
cmp byte [tape + r8], 0
jz ca79
add r8, 326
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 335
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa79
ca79:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa74
ca74:
sub r8, 1
and r8, 0xFFFF
oa7a:
cmp byte [tape + r8], 0
jz ca7a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa7a
ca7a:
add r8, 1
and r8, 0xFFFF
oa7b:
cmp byte [tape + r8], 0
jz ca7b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa7c:
cmp byte [tape + r8], 0
jz ca7c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa7c
ca7c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
oa7d:
cmp byte [tape + r8], 0
jz ca7d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa7d
ca7d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa7e:
cmp byte [tape + r8], 0
jz ca7e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa7e
ca7e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa7f:
cmp byte [tape + r8], 0
jz ca7f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa7f
ca7f:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa80:
cmp byte [tape + r8], 0
jz ca80
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa80
ca80:
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa81:
cmp byte [tape + r8], 0
jz ca81
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa81
ca81:
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa82:
cmp byte [tape + r8], 0
jz ca82
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa82
ca82:
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa83:
cmp byte [tape + r8], 0
jz ca83
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa83
ca83:
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa84:
cmp byte [tape + r8], 0
jz ca84
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa84
ca84:
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa85:
cmp byte [tape + r8], 0
jz ca85
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa85
ca85:
add r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 5
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 18
oa86:
cmp byte [tape + r8], 0
jz ca86
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa86
ca86:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa7b
ca7b:
add r8, 334
and r8, 0xFFFF
push 1
push 335
call ms
sub r8, 335
and r8, 0xFFFF
oa87:
cmp byte [tape + r8], 0
jz ca87
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa87
ca87:
add r8, 1
and r8, 0xFFFF
oa88:
cmp byte [tape + r8], 0
jz ca88
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oa89:
cmp byte [tape + r8], 0
jz ca89
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa89
ca89:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oa8a:
cmp byte [tape + r8], 0
jz ca8a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa8a
ca8a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oa8b:
cmp byte [tape + r8], 0
jz ca8b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oa8b
ca8b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oa8c:
cmp byte [tape + r8], 0
jz ca8c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa8c
ca8c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oa8d:
cmp byte [tape + r8], 0
jz ca8d
add r8, 327
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 336
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oa8d
ca8d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa88
ca88:
sub r8, 1
and r8, 0xFFFF
oa8e:
cmp byte [tape + r8], 0
jz ca8e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa8e
ca8e:
add r8, 1
and r8, 0xFFFF
oa8f:
cmp byte [tape + r8], 0
jz ca8f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa90:
cmp byte [tape + r8], 0
jz ca90
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa90
ca90:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 7
call m
add r8, 7
and r8, 0xFFFF
call o
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 15
oa91:
cmp byte [tape + r8], 0
jz ca91
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa91
ca91:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oa92:
cmp byte [tape + r8], 0
jz ca92
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa92
ca92:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa93:
cmp byte [tape + r8], 0
jz ca93
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa93
ca93:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 13
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oa94:
cmp byte [tape + r8], 0
jz ca94
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa94
ca94:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oa95:
cmp byte [tape + r8], 0
jz ca95
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa95
ca95:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa96:
cmp byte [tape + r8], 0
jz ca96
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa96
ca96:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
oa97:
cmp byte [tape + r8], 0
jz ca97
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa97
ca97:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa98:
cmp byte [tape + r8], 0
jz ca98
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa98
ca98:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oa99:
cmp byte [tape + r8], 0
jz ca99
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa99
ca99:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa9a:
cmp byte [tape + r8], 0
jz ca9a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa9a
ca9a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 17
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa9b:
cmp byte [tape + r8], 0
jz ca9b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa9b
ca9b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa9c:
cmp byte [tape + r8], 0
jz ca9c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa9c
ca9c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oa9d:
cmp byte [tape + r8], 0
jz ca9d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa9d
ca9d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oa9e:
cmp byte [tape + r8], 0
jz ca9e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa9e
ca9e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oa9f:
cmp byte [tape + r8], 0
jz ca9f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa9f
ca9f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oaa0:
cmp byte [tape + r8], 0
jz caa0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa0
caa0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oaa1:
cmp byte [tape + r8], 0
jz caa1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa1
caa1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oa8f
ca8f:
add r8, 335
and r8, 0xFFFF
push 1
push 336
call ms
sub r8, 336
and r8, 0xFFFF
oaa2:
cmp byte [tape + r8], 0
jz caa2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa2
caa2:
add r8, 1
and r8, 0xFFFF
oaa3:
cmp byte [tape + r8], 0
jz caa3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oaa4:
cmp byte [tape + r8], 0
jz caa4
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa4
caa4:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oaa5:
cmp byte [tape + r8], 0
jz caa5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa5
caa5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oaa6:
cmp byte [tape + r8], 0
jz caa6
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oaa6
caa6:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oaa7:
cmp byte [tape + r8], 0
jz caa7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa7
caa7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oaa8:
cmp byte [tape + r8], 0
jz caa8
add r8, 328
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 337
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oaa8
caa8:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa3
caa3:
sub r8, 1
and r8, 0xFFFF
oaa9:
cmp byte [tape + r8], 0
jz caa9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaa9
caa9:
add r8, 1
and r8, 0xFFFF
oaaa:
cmp byte [tape + r8], 0
jz caaa
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oaab:
cmp byte [tape + r8], 0
jz caab
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaab
caab:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 7
call m
add r8, 7
and r8, 0xFFFF
call o
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 11
oaac:
cmp byte [tape + r8], 0
jz caac
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaac
caac:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oaad:
cmp byte [tape + r8], 0
jz caad
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaad
caad:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 9
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oaae:
cmp byte [tape + r8], 0
jz caae
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaae
caae:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oaaf:
cmp byte [tape + r8], 0
jz caaf
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaaf
caaf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 11
call o
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oab0:
cmp byte [tape + r8], 0
jz cab0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab0
cab0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oab1:
cmp byte [tape + r8], 0
jz cab1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab1
cab1:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oab2:
cmp byte [tape + r8], 0
jz cab2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab2
cab2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oab3:
cmp byte [tape + r8], 0
jz cab3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab3
cab3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oab4:
cmp byte [tape + r8], 0
jz cab4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab4
cab4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oab5:
cmp byte [tape + r8], 0
jz cab5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab5
cab5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oab6:
cmp byte [tape + r8], 0
jz cab6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab6
cab6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oab7:
cmp byte [tape + r8], 0
jz cab7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab7
cab7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oab8:
cmp byte [tape + r8], 0
jz cab8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab8
cab8:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 11
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oab9:
cmp byte [tape + r8], 0
jz cab9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oab9
cab9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oaba:
cmp byte [tape + r8], 0
jz caba
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaba
caba:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oabb:
cmp byte [tape + r8], 0
jz cabb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oabb
cabb:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaaa
caaa:
add r8, 336
and r8, 0xFFFF
push 1
push 337
call ms
sub r8, 337
and r8, 0xFFFF
oabc:
cmp byte [tape + r8], 0
jz cabc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oabc
cabc:
add r8, 1
and r8, 0xFFFF
oabd:
cmp byte [tape + r8], 0
jz cabd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oabe:
cmp byte [tape + r8], 0
jz cabe
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oabe
cabe:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oabf:
cmp byte [tape + r8], 0
jz cabf
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oabf
cabf:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oac0:
cmp byte [tape + r8], 0
jz cac0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oac0
cac0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oac1:
cmp byte [tape + r8], 0
jz cac1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac1
cac1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oac2:
cmp byte [tape + r8], 0
jz cac2
add r8, 329
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 338
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oac2
cac2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oabd
cabd:
sub r8, 1
and r8, 0xFFFF
oac3:
cmp byte [tape + r8], 0
jz cac3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac3
cac3:
add r8, 1
and r8, 0xFFFF
oac4:
cmp byte [tape + r8], 0
jz cac4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oac5:
cmp byte [tape + r8], 0
jz cac5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac5
cac5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 7
call m
add r8, 7
and r8, 0xFFFF
call o
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 16
oac6:
cmp byte [tape + r8], 0
jz cac6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac6
cac6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oac7:
cmp byte [tape + r8], 0
jz cac7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac7
cac7:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oac8:
cmp byte [tape + r8], 0
jz cac8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac8
cac8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oac9:
cmp byte [tape + r8], 0
jz cac9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac9
cac9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 9
oaca:
cmp byte [tape + r8], 0
jz caca
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaca
caca:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oacb:
cmp byte [tape + r8], 0
jz cacb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oacb
cacb:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oacc:
cmp byte [tape + r8], 0
jz cacc
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oacc
cacc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oacd:
cmp byte [tape + r8], 0
jz cacd
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oacd
cacd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
add byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 13
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oace:
cmp byte [tape + r8], 0
jz cace
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oace
cace:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oacf:
cmp byte [tape + r8], 0
jz cacf
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oacf
cacf:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 14
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oad0:
cmp byte [tape + r8], 0
jz cad0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad0
cad0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oad1:
cmp byte [tape + r8], 0
jz cad1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad1
cad1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
oad2:
cmp byte [tape + r8], 0
jz cad2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad2
cad2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oad3:
cmp byte [tape + r8], 0
jz cad3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad3
cad3:
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oad4:
cmp byte [tape + r8], 0
jz cad4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad4
cad4:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 13
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 11
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oad5:
cmp byte [tape + r8], 0
jz cad5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad5
cad5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oad6:
cmp byte [tape + r8], 0
jz cad6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad6
cad6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 22
oad7:
cmp byte [tape + r8], 0
jz cad7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad7
cad7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
add r8, 5
and r8, 0xFFFF
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oac4
cac4:
add r8, 338
and r8, 0xFFFF
push 1
push 339
call ms
sub r8, 339
and r8, 0xFFFF
oad8:
cmp byte [tape + r8], 0
jz cad8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad8
cad8:
add r8, 1
and r8, 0xFFFF
oad9:
cmp byte [tape + r8], 0
jz cad9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call i
add r8, 105
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
call z
add r8, 105
and r8, 0xFFFF
oada:
cmp byte [tape + r8], 0
jz cada
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oada
cada:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oadb:
cmp byte [tape + r8], 0
jz cadb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oadb
cadb:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oadc:
cmp byte [tape + r8], 0
jz cadc
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oadc
cadc:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
oadd:
cmp byte [tape + r8], 0
jz cadd
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oadd
cadd:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oade:
cmp byte [tape + r8], 0
jz cade
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oade
cade:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oadf:
cmp byte [tape + r8], 0
jz cadf
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oadf
cadf:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oae0:
cmp byte [tape + r8], 0
jz cae0
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oae0
cae0:
add r8, 8
and r8, 0xFFFF
oae1:
cmp byte [tape + r8], 0
jz cae1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oae1
cae1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oae2:
cmp byte [tape + r8], 0
jz cae2
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oae2
cae2:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oae3:
cmp byte [tape + r8], 0
jz cae3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oae3
cae3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oae4:
cmp byte [tape + r8], 0
jz cae4
add r8, 330
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 339
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oae4
cae4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oad9
cad9:
sub r8, 1
and r8, 0xFFFF
oae5:
cmp byte [tape + r8], 0
jz cae5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oae5
cae5:
add r8, 1
and r8, 0xFFFF
oae6:
cmp byte [tape + r8], 0
jz cae6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
oae7:
cmp byte [tape + r8], 0
jz cae7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oae7
cae7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oae8:
cmp byte [tape + r8], 0
jz cae8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oae8
cae8:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oae9:
cmp byte [tape + r8], 0
jz cae9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oae9
cae9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oaea:
cmp byte [tape + r8], 0
jz caea
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaea
caea:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
oaeb:
cmp byte [tape + r8], 0
jz caeb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaeb
caeb:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oaec:
cmp byte [tape + r8], 0
jz caec
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaec
caec:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oaed:
cmp byte [tape + r8], 0
jz caed
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaed
caed:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oae6
cae6:
add r8, 337
and r8, 0xFFFF
push 1
push 338
call ms
sub r8, 338
and r8, 0xFFFF
oaee:
cmp byte [tape + r8], 0
jz caee
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaee
caee:
add r8, 1
and r8, 0xFFFF
oaef:
cmp byte [tape + r8], 0
jz caef
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oaf0:
cmp byte [tape + r8], 0
jz caf0
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf0
caf0:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oaf1:
cmp byte [tape + r8], 0
jz caf1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf1
caf1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oaf2:
cmp byte [tape + r8], 0
jz caf2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oaf2
caf2:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oaf3:
cmp byte [tape + r8], 0
jz caf3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf3
caf3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oaf4:
cmp byte [tape + r8], 0
jz caf4
add r8, 331
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 340
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oaf4
caf4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaef
caef:
sub r8, 1
and r8, 0xFFFF
oaf5:
cmp byte [tape + r8], 0
jz caf5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf5
caf5:
add r8, 1
and r8, 0xFFFF
oaf6:
cmp byte [tape + r8], 0
jz caf6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oaf7:
cmp byte [tape + r8], 0
jz caf7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf7
caf7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
call o
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 7
call m
add r8, 7
and r8, 0xFFFF
call o
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 17
oaf8:
cmp byte [tape + r8], 0
jz caf8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf8
caf8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oaf9:
cmp byte [tape + r8], 0
jz caf9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf9
caf9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oafa:
cmp byte [tape + r8], 0
jz cafa
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oafa
cafa:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
oafb:
cmp byte [tape + r8], 0
jz cafb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oafb
cafb:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oafc:
cmp byte [tape + r8], 0
jz cafc
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oafc
cafc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
oafd:
cmp byte [tape + r8], 0
jz cafd
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oafd
cafd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oafe:
cmp byte [tape + r8], 0
jz cafe
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oafe
cafe:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oaff:
cmp byte [tape + r8], 0
jz caff
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaff
caff:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 12
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
ob00:
cmp byte [tape + r8], 0
jz cb00
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob00
cb00:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob01:
cmp byte [tape + r8], 0
jz cb01
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob01
cb01:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
ob02:
cmp byte [tape + r8], 0
jz cb02
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob02
cb02:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
ob03:
cmp byte [tape + r8], 0
jz cb03
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob03
cb03:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob04:
cmp byte [tape + r8], 0
jz cb04
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob04
cb04:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob05:
cmp byte [tape + r8], 0
jz cb05
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob05
cb05:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 14
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
ob06:
cmp byte [tape + r8], 0
jz cb06
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob06
cb06:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
ob07:
cmp byte [tape + r8], 0
jz cb07
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob07
cb07:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 7
call m
add r8, 7
and r8, 0xFFFF
call o
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oaf6
caf6:
add r8, 339
and r8, 0xFFFF
push 1
push 340
call ms
sub r8, 340
and r8, 0xFFFF
ob08:
cmp byte [tape + r8], 0
jz cb08
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob08
cb08:
add r8, 1
and r8, 0xFFFF
ob09:
cmp byte [tape + r8], 0
jz cb09
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
ob0a:
cmp byte [tape + r8], 0
jz cb0a
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob0a
cb0a:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ob0b:
cmp byte [tape + r8], 0
jz cb0b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob0b
cb0b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ob0c:
cmp byte [tape + r8], 0
jz cb0c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ob0c
cb0c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ob0d:
cmp byte [tape + r8], 0
jz cb0d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob0d
cb0d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ob0e:
cmp byte [tape + r8], 0
jz cb0e
add r8, 332
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 341
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ob0e
cb0e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob09
cb09:
sub r8, 1
and r8, 0xFFFF
ob0f:
cmp byte [tape + r8], 0
jz cb0f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob0f
cb0f:
add r8, 1
and r8, 0xFFFF
ob10:
cmp byte [tape + r8], 0
jz cb10
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
ob11:
cmp byte [tape + r8], 0
jz cb11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob11
cb11:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob12:
cmp byte [tape + r8], 0
jz cb12
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob12
cb12:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 18
ob13:
cmp byte [tape + r8], 0
jz cb13
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob13
cb13:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 9
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 14
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
ob14:
cmp byte [tape + r8], 0
jz cb14
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob14
cb14:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob15:
cmp byte [tape + r8], 0
jz cb15
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob15
cb15:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 14
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 11
call o
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob16:
cmp byte [tape + r8], 0
jz cb16
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob16
cb16:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
ob17:
cmp byte [tape + r8], 0
jz cb17
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob17
cb17:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
ob18:
cmp byte [tape + r8], 0
jz cb18
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob18
cb18:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob19:
cmp byte [tape + r8], 0
jz cb19
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob19
cb19:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob1a:
cmp byte [tape + r8], 0
jz cb1a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob1a
cb1a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob1b:
cmp byte [tape + r8], 0
jz cb1b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob1b
cb1b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
ob1c:
cmp byte [tape + r8], 0
jz cb1c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob1c
cb1c:
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 14
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
ob1d:
cmp byte [tape + r8], 0
jz cb1d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob1d
cb1d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob1e:
cmp byte [tape + r8], 0
jz cb1e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob1e
cb1e:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob1f:
cmp byte [tape + r8], 0
jz cb1f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob1f
cb1f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob20:
cmp byte [tape + r8], 0
jz cb20
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob20
cb20:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
ob21:
cmp byte [tape + r8], 0
jz cb21
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob21
cb21:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob22:
cmp byte [tape + r8], 0
jz cb22
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob22
cb22:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob10
cb10:
add r8, 340
and r8, 0xFFFF
push 1
push 341
call ms
sub r8, 341
and r8, 0xFFFF
ob23:
cmp byte [tape + r8], 0
jz cb23
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob23
cb23:
add r8, 1
and r8, 0xFFFF
ob24:
cmp byte [tape + r8], 0
jz cb24
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
ob25:
cmp byte [tape + r8], 0
jz cb25
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob25
cb25:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ob26:
cmp byte [tape + r8], 0
jz cb26
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob26
cb26:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ob27:
cmp byte [tape + r8], 0
jz cb27
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ob27
cb27:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ob28:
cmp byte [tape + r8], 0
jz cb28
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob28
cb28:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ob29:
cmp byte [tape + r8], 0
jz cb29
add r8, 333
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 342
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ob29
cb29:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob24
cb24:
sub r8, 1
and r8, 0xFFFF
ob2a:
cmp byte [tape + r8], 0
jz cb2a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob2a
cb2a:
add r8, 1
and r8, 0xFFFF
ob2b:
cmp byte [tape + r8], 0
jz cb2b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
ob2c:
cmp byte [tape + r8], 0
jz cb2c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob2c
cb2c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
ob2d:
cmp byte [tape + r8], 0
jz cb2d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob2d
cb2d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 9
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
ob2e:
cmp byte [tape + r8], 0
jz cb2e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob2e
cb2e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 7
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob2f:
cmp byte [tape + r8], 0
jz cb2f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob2f
cb2f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
ob30:
cmp byte [tape + r8], 0
jz cb30
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob30
cb30:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 11
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 15
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
ob31:
cmp byte [tape + r8], 0
jz cb31
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob31
cb31:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob32:
cmp byte [tape + r8], 0
jz cb32
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob32
cb32:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 14
call o
add byte [tape + r8], 11
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
ob33:
cmp byte [tape + r8], 0
jz cb33
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob33
cb33:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob34:
cmp byte [tape + r8], 0
jz cb34
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob34
cb34:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
ob35:
cmp byte [tape + r8], 0
jz cb35
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob35
cb35:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob36:
cmp byte [tape + r8], 0
jz cb36
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob36
cb36:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 11
call o
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob37:
cmp byte [tape + r8], 0
jz cb37
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob37
cb37:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
ob38:
cmp byte [tape + r8], 0
jz cb38
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob38
cb38:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
ob39:
cmp byte [tape + r8], 0
jz cb39
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob39
cb39:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 13
ob3a:
cmp byte [tape + r8], 0
jz cb3a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob3a
cb3a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
ob3b:
cmp byte [tape + r8], 0
jz cb3b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob3b
cb3b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
ob3c:
cmp byte [tape + r8], 0
jz cb3c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob3c
cb3c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
ob3d:
cmp byte [tape + r8], 0
jz cb3d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob3d
cb3d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
ob3e:
cmp byte [tape + r8], 0
jz cb3e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob3e
cb3e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob2b
cb2b:
add r8, 341
and r8, 0xFFFF
push 1
push 342
call ms
sub r8, 342
and r8, 0xFFFF
ob3f:
cmp byte [tape + r8], 0
jz cb3f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob3f
cb3f:
add r8, 1
and r8, 0xFFFF
ob40:
cmp byte [tape + r8], 0
jz cb40
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
ob41:
cmp byte [tape + r8], 0
jz cb41
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob41
cb41:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ob42:
cmp byte [tape + r8], 0
jz cb42
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob42
cb42:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ob43:
cmp byte [tape + r8], 0
jz cb43
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ob43
cb43:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
ob44:
cmp byte [tape + r8], 0
jz cb44
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob44
cb44:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 4
call ms
add r8, 1
and r8, 0xFFFF
ob45:
cmp byte [tape + r8], 0
jz cb45
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob45
cb45:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 2
and r8, 0xFFFF
ob46:
cmp byte [tape + r8], 0
jz cb46
add r8, 2
and r8, 0xFFFF
ob47:
cmp byte [tape + r8], 0
jz cb47
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob47
cb47:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
ob48:
cmp byte [tape + r8], 0
jz cb48
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp ob48
cb48:
sub r8, 3
and r8, 0xFFFF
ob49:
cmp byte [tape + r8], 0
jz cb49
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob49
cb49:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob46
cb46:
add r8, 2
and r8, 0xFFFF
ob4a:
cmp byte [tape + r8], 0
jz cb4a
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
call z
jmp ob4a
cb4a:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add r8, 288
and r8, 0xFFFF
ob4b:
cmp byte [tape + r8], 0
jz cb4b
sub r8, 288
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob4b
cb4b:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 5
call ms
add r8, 1
and r8, 0xFFFF
ob4c:
cmp byte [tape + r8], 0
jz cb4c
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob4c
cb4c:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 2
and r8, 0xFFFF
ob4d:
cmp byte [tape + r8], 0
jz cb4d
add r8, 2
and r8, 0xFFFF
ob4e:
cmp byte [tape + r8], 0
jz cb4e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob4e
cb4e:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
ob4f:
cmp byte [tape + r8], 0
jz cb4f
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp ob4f
cb4f:
sub r8, 3
and r8, 0xFFFF
ob50:
cmp byte [tape + r8], 0
jz cb50
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob50
cb50:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob4d
cb4d:
sub r8, 1
and r8, 0xFFFF
ob51:
cmp byte [tape + r8], 0
jz cb51
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp ob51
cb51:
add r8, 3
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
ob52:
cmp byte [tape + r8], 0
jz cb52
call z
add r8, 9
and r8, 0xFFFF
ob53:
cmp byte [tape + r8], 0
jz cb53
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob53
cb53:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
ob54:
cmp byte [tape + r8], 0
jz cb54
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp ob54
cb54:
jmp ob52
cb52:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
ob55:
cmp byte [tape + r8], 0
jz cb55
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ob55
cb55:
add r8, 8
and r8, 0xFFFF
ob56:
cmp byte [tape + r8], 0
jz cb56
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob56
cb56:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
ob57:
cmp byte [tape + r8], 0
jz cb57
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ob57
cb57:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ob58:
cmp byte [tape + r8], 0
jz cb58
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob58
cb58:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ob59:
cmp byte [tape + r8], 0
jz cb59
add r8, 334
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 343
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ob59
cb59:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob40
cb40:
sub r8, 1
and r8, 0xFFFF
ob5a:
cmp byte [tape + r8], 0
jz cb5a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob5a
cb5a:
add r8, 1
and r8, 0xFFFF
ob5b:
cmp byte [tape + r8], 0
jz cb5b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 17
ob5c:
cmp byte [tape + r8], 0
jz cb5c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob5c
cb5c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob5b
cb5b:
add r8, 342
and r8, 0xFFFF
push 1
push 343
call ms
sub r8, 343
and r8, 0xFFFF
ob5d:
cmp byte [tape + r8], 0
jz cb5d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob5d
cb5d:
add r8, 1
and r8, 0xFFFF
ob5e:
cmp byte [tape + r8], 0
jz cb5e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob5e
cb5e:
add r8, 333
and r8, 0xFFFF
push 1
push 334
call ms
sub r8, 334
and r8, 0xFFFF
ob5f:
cmp byte [tape + r8], 0
jz cb5f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob5f
cb5f:
add r8, 1
and r8, 0xFFFF
ob60:
cmp byte [tape + r8], 0
jz cb60
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
ob61:
cmp byte [tape + r8], 0
jz cb61
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob61
cb61:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ob62:
cmp byte [tape + r8], 0
jz cb62
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob62
cb62:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ob63:
cmp byte [tape + r8], 0
jz cb63
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ob63
cb63:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ob64:
cmp byte [tape + r8], 0
jz cb64
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob64
cb64:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ob65:
cmp byte [tape + r8], 0
jz cb65
add r8, 335
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 344
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ob65
cb65:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob60
cb60:
sub r8, 1
and r8, 0xFFFF
ob66:
cmp byte [tape + r8], 0
jz cb66
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob66
cb66:
add r8, 1
and r8, 0xFFFF
ob67:
cmp byte [tape + r8], 0
jz cb67
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
ob68:
cmp byte [tape + r8], 0
jz cb68
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob68
cb68:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
ob69:
cmp byte [tape + r8], 0
jz cb69
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob69
cb69:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
ob6a:
cmp byte [tape + r8], 0
jz cb6a
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
ob6b:
cmp byte [tape + r8], 0
jz cb6b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob6b
cb6b:
sub r8, 3
and r8, 0xFFFF
push 1
push 3
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
ob6c:
cmp byte [tape + r8], 0
jz cb6c
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp ob6c
cb6c:
sub r8, 4
and r8, 0xFFFF
ob6d:
cmp byte [tape + r8], 0
jz cb6d
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob6d
cb6d:
add r8, 2
and r8, 0xFFFF
ob6e:
cmp byte [tape + r8], 0
jz cb6e
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob6e
cb6e:
sub r8, 2
and r8, 0xFFFF
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
ob6f:
cmp byte [tape + r8], 0
jz cb6f
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp ob6f
cb6f:
sub r8, 4
and r8, 0xFFFF
ob70:
cmp byte [tape + r8], 0
jz cb70
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob70
cb70:
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob6a
cb6a:
sub r8, 6
and r8, 0xFFFF
ob71:
cmp byte [tape + r8], 0
jz cb71
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
ob72:
cmp byte [tape + r8], 0
jz cb72
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob72
cb72:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
jmp ob71
cb71:
add r8, 1
and r8, 0xFFFF
ob73:
cmp byte [tape + r8], 0
jz cb73
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 2
call m
add r8, 2
and r8, 0xFFFF
call o
call z
jmp ob73
cb73:
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 3
call m
add r8, 3
and r8, 0xFFFF
call o
call z
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 16
ob74:
cmp byte [tape + r8], 0
jz cb74
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob74
cb74:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 21
and r8, 0xFFFF
ob75:
cmp byte [tape + r8], 0
jz cb75
sub r8, 21
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 28
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob75
cb75:
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
ob76:
cmp byte [tape + r8], 0
jz cb76
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
ob77:
cmp byte [tape + r8], 0
jz cb77
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob77
cb77:
sub r8, 3
and r8, 0xFFFF
push 1
push 3
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
ob78:
cmp byte [tape + r8], 0
jz cb78
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp ob78
cb78:
sub r8, 4
and r8, 0xFFFF
ob79:
cmp byte [tape + r8], 0
jz cb79
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob79
cb79:
add r8, 2
and r8, 0xFFFF
ob7a:
cmp byte [tape + r8], 0
jz cb7a
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob7a
cb7a:
sub r8, 2
and r8, 0xFFFF
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
ob7b:
cmp byte [tape + r8], 0
jz cb7b
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp ob7b
cb7b:
sub r8, 4
and r8, 0xFFFF
ob7c:
cmp byte [tape + r8], 0
jz cb7c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob7c
cb7c:
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob76
cb76:
sub r8, 6
and r8, 0xFFFF
ob7d:
cmp byte [tape + r8], 0
jz cb7d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
ob7e:
cmp byte [tape + r8], 0
jz cb7e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob7e
cb7e:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
jmp ob7d
cb7d:
add r8, 1
and r8, 0xFFFF
ob7f:
cmp byte [tape + r8], 0
jz cb7f
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 2
call m
add r8, 2
and r8, 0xFFFF
call o
call z
jmp ob7f
cb7f:
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 3
call m
add r8, 3
and r8, 0xFFFF
call o
call z
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
push 9
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
ob80:
cmp byte [tape + r8], 0
jz cb80
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob80
cb80:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ob81:
cmp byte [tape + r8], 0
jz cb81
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob81
cb81:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ob82:
cmp byte [tape + r8], 0
jz cb82
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ob82
cb82:
add r8, 7
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
ob83:
cmp byte [tape + r8], 0
jz cb83
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob83
cb83:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 4
call ms
add r8, 1
and r8, 0xFFFF
ob84:
cmp byte [tape + r8], 0
jz cb84
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob84
cb84:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 2
and r8, 0xFFFF
ob85:
cmp byte [tape + r8], 0
jz cb85
add r8, 2
and r8, 0xFFFF
ob86:
cmp byte [tape + r8], 0
jz cb86
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob86
cb86:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
ob87:
cmp byte [tape + r8], 0
jz cb87
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp ob87
cb87:
sub r8, 3
and r8, 0xFFFF
ob88:
cmp byte [tape + r8], 0
jz cb88
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob88
cb88:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob85
cb85:
add r8, 2
and r8, 0xFFFF
ob89:
cmp byte [tape + r8], 0
jz cb89
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
call z
jmp ob89
cb89:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
ob8a:
cmp byte [tape + r8], 0
jz cb8a
call z
add r8, 8
and r8, 0xFFFF
ob8b:
cmp byte [tape + r8], 0
jz cb8b
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob8b
cb8b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
ob8c:
cmp byte [tape + r8], 0
jz cb8c
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ob8c
cb8c:
jmp ob8a
cb8a:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ob8d:
cmp byte [tape + r8], 0
jz cb8d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob8d
cb8d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ob8e:
cmp byte [tape + r8], 0
jz cb8e
add r8, 336
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 345
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ob8e
cb8e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob67
cb67:
sub r8, 1
and r8, 0xFFFF
ob8f:
cmp byte [tape + r8], 0
jz cb8f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob8f
cb8f:
add r8, 1
and r8, 0xFFFF
ob90:
cmp byte [tape + r8], 0
jz cb90
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 25
and r8, 0xFFFF
ob91:
cmp byte [tape + r8], 0
jz cb91
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 32
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob91
cb91:
sub r8, 32
and r8, 0xFFFF
push 1
push 32
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ob92:
cmp byte [tape + r8], 0
jz cb92
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob92
cb92:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ob93:
cmp byte [tape + r8], 0
jz cb93
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ob93
cb93:
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
ob94:
cmp byte [tape + r8], 0
jz cb94
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob94
cb94:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ob95:
cmp byte [tape + r8], 0
jz cb95
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob95
cb95:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
ob96:
cmp byte [tape + r8], 0
jz cb96
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ob96
cb96:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
ob97:
cmp byte [tape + r8], 0
jz cb97
call z
add r8, 8
and r8, 0xFFFF
ob98:
cmp byte [tape + r8], 0
jz cb98
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob98
cb98:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
ob99:
cmp byte [tape + r8], 0
jz cb99
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ob99
cb99:
jmp ob97
cb97:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ob9a:
cmp byte [tape + r8], 0
jz cb9a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob9a
cb9a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ob9b:
cmp byte [tape + r8], 0
jz cb9b
add r8, 337
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 346
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ob9b
cb9b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob90
cb90:
sub r8, 1
and r8, 0xFFFF
ob9c:
cmp byte [tape + r8], 0
jz cb9c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob9c
cb9c:
add r8, 1
and r8, 0xFFFF
ob9d:
cmp byte [tape + r8], 0
jz cb9d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
ob9e:
cmp byte [tape + r8], 0
jz cb9e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob9e
cb9e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob9d
cb9d:
add r8, 345
and r8, 0xFFFF
push 1
push 346
call ms
sub r8, 346
and r8, 0xFFFF
ob9f:
cmp byte [tape + r8], 0
jz cb9f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ob9f
cb9f:
add r8, 1
and r8, 0xFFFF
oba0:
cmp byte [tape + r8], 0
jz cba0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
oba1:
cmp byte [tape + r8], 0
jz cba1
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba1
cba1:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oba2:
cmp byte [tape + r8], 0
jz cba2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba2
cba2:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oba3:
cmp byte [tape + r8], 0
jz cba3
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oba3
cba3:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oba4:
cmp byte [tape + r8], 0
jz cba4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba4
cba4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oba5:
cmp byte [tape + r8], 0
jz cba5
add r8, 338
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 347
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oba5
cba5:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba0
cba0:
sub r8, 1
and r8, 0xFFFF
oba6:
cmp byte [tape + r8], 0
jz cba6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba6
cba6:
add r8, 1
and r8, 0xFFFF
oba7:
cmp byte [tape + r8], 0
jz cba7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
oba8:
cmp byte [tape + r8], 0
jz cba8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba8
cba8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba7
cba7:
add r8, 346
and r8, 0xFFFF
push 1
push 347
call ms
sub r8, 347
and r8, 0xFFFF
oba9:
cmp byte [tape + r8], 0
jz cba9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oba9
cba9:
add r8, 1
and r8, 0xFFFF
obaa:
cmp byte [tape + r8], 0
jz cbaa
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
obab:
cmp byte [tape + r8], 0
jz cbab
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obab
cbab:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
obac:
cmp byte [tape + r8], 0
jz cbac
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obac
cbac:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
obad:
cmp byte [tape + r8], 0
jz cbad
add r8, 2
and r8, 0xFFFF
obae:
cmp byte [tape + r8], 0
jz cbae
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obae
cbae:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
obaf:
cmp byte [tape + r8], 0
jz cbaf
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp obaf
cbaf:
sub r8, 3
and r8, 0xFFFF
obb0:
cmp byte [tape + r8], 0
jz cbb0
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb0
cbb0:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obad
cbad:
add r8, 2
and r8, 0xFFFF
obb1:
cmp byte [tape + r8], 0
jz cbb1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp obb1
cbb1:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
obb2:
cmp byte [tape + r8], 0
jz cbb2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb2
cbb2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
obb3:
cmp byte [tape + r8], 0
jz cbb3
add r8, 339
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 348
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp obb3
cbb3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obaa
cbaa:
sub r8, 1
and r8, 0xFFFF
obb4:
cmp byte [tape + r8], 0
jz cbb4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb4
cbb4:
add r8, 1
and r8, 0xFFFF
obb5:
cmp byte [tape + r8], 0
jz cbb5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
obb6:
cmp byte [tape + r8], 0
jz cbb6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb6
cbb6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb5
cbb5:
add r8, 347
and r8, 0xFFFF
push 1
push 348
call ms
sub r8, 348
and r8, 0xFFFF
obb7:
cmp byte [tape + r8], 0
jz cbb7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb7
cbb7:
add r8, 1
and r8, 0xFFFF
obb8:
cmp byte [tape + r8], 0
jz cbb8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
obb9:
cmp byte [tape + r8], 0
jz cbb9
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb9
cbb9:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
obba:
cmp byte [tape + r8], 0
jz cbba
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obba
cbba:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
obbb:
cmp byte [tape + r8], 0
jz cbbb
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp obbb
cbbb:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
obbc:
cmp byte [tape + r8], 0
jz cbbc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obbc
cbbc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
obbd:
cmp byte [tape + r8], 0
jz cbbd
add r8, 340
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 349
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp obbd
cbbd:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obb8
cbb8:
sub r8, 1
and r8, 0xFFFF
obbe:
cmp byte [tape + r8], 0
jz cbbe
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obbe
cbbe:
add r8, 1
and r8, 0xFFFF
obbf:
cmp byte [tape + r8], 0
jz cbbf
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
obc0:
cmp byte [tape + r8], 0
jz cbc0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obc0
cbc0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obbf
cbbf:
add r8, 348
and r8, 0xFFFF
push 1
push 349
call ms
sub r8, 349
and r8, 0xFFFF
obc1:
cmp byte [tape + r8], 0
jz cbc1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obc1
cbc1:
add r8, 1
and r8, 0xFFFF
obc2:
cmp byte [tape + r8], 0
jz cbc2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 34
and r8, 0xFFFF
obc3:
cmp byte [tape + r8], 0
jz cbc3
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 41
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obc3
cbc3:
sub r8, 41
and r8, 0xFFFF
push 1
push 41
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
obc4:
cmp byte [tape + r8], 0
jz cbc4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obc4
cbc4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
obc5:
cmp byte [tape + r8], 0
jz cbc5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp obc5
cbc5:
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
obc6:
cmp byte [tape + r8], 0
jz cbc6
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obc6
cbc6:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
obc7:
cmp byte [tape + r8], 0
jz cbc7
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obc7
cbc7:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
obc8:
cmp byte [tape + r8], 0
jz cbc8
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp obc8
cbc8:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
obc9:
cmp byte [tape + r8], 0
jz cbc9
call z
add r8, 8
and r8, 0xFFFF
obca:
cmp byte [tape + r8], 0
jz cbca
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obca
cbca:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
obcb:
cmp byte [tape + r8], 0
jz cbcb
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp obcb
cbcb:
jmp obc9
cbc9:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
obcc:
cmp byte [tape + r8], 0
jz cbcc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obcc
cbcc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
obcd:
cmp byte [tape + r8], 0
jz cbcd
add r8, 341
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 350
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp obcd
cbcd:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obc2
cbc2:
sub r8, 1
and r8, 0xFFFF
obce:
cmp byte [tape + r8], 0
jz cbce
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obce
cbce:
add r8, 1
and r8, 0xFFFF
obcf:
cmp byte [tape + r8], 0
jz cbcf
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
obd0:
cmp byte [tape + r8], 0
jz cbd0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd0
cbd0:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obcf
cbcf:
add r8, 349
and r8, 0xFFFF
push 1
push 350
call ms
sub r8, 350
and r8, 0xFFFF
obd1:
cmp byte [tape + r8], 0
jz cbd1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd1
cbd1:
add r8, 1
and r8, 0xFFFF
obd2:
cmp byte [tape + r8], 0
jz cbd2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 24
and r8, 0xFFFF
obd3:
cmp byte [tape + r8], 0
jz cbd3
sub r8, 24
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 31
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd3
cbd3:
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
obd4:
cmp byte [tape + r8], 0
jz cbd4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd4
cbd4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
obd5:
cmp byte [tape + r8], 0
jz cbd5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp obd5
cbd5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
obd6:
cmp byte [tape + r8], 0
jz cbd6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd6
cbd6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
obd7:
cmp byte [tape + r8], 0
jz cbd7
add r8, 342
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 351
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp obd7
cbd7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd2
cbd2:
sub r8, 1
and r8, 0xFFFF
obd8:
cmp byte [tape + r8], 0
jz cbd8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd8
cbd8:
add r8, 1
and r8, 0xFFFF
obd9:
cmp byte [tape + r8], 0
jz cbd9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
obda:
cmp byte [tape + r8], 0
jz cbda
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obda
cbda:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 10
call o
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obd9
cbd9:
add r8, 350
and r8, 0xFFFF
push 1
push 351
call ms
sub r8, 351
and r8, 0xFFFF
obdb:
cmp byte [tape + r8], 0
jz cbdb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obdb
cbdb:
add r8, 1
and r8, 0xFFFF
obdc:
cmp byte [tape + r8], 0
jz cbdc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
obdd:
cmp byte [tape + r8], 0
jz cbdd
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obdd
cbdd:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
obde:
cmp byte [tape + r8], 0
jz cbde
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obde
cbde:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
obdf:
cmp byte [tape + r8], 0
jz cbdf
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp obdf
cbdf:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
obe0:
cmp byte [tape + r8], 0
jz cbe0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe0
cbe0:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
obe1:
cmp byte [tape + r8], 0
jz cbe1
add r8, 343
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 352
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp obe1
cbe1:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obdc
cbdc:
sub r8, 1
and r8, 0xFFFF
obe2:
cmp byte [tape + r8], 0
jz cbe2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe2
cbe2:
add r8, 1
and r8, 0xFFFF
obe3:
cmp byte [tape + r8], 0
jz cbe3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
obe4:
cmp byte [tape + r8], 0
jz cbe4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe4
cbe4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 9
call o
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe3
cbe3:
add r8, 351
and r8, 0xFFFF
push 1
push 352
call ms
sub r8, 352
and r8, 0xFFFF
obe5:
cmp byte [tape + r8], 0
jz cbe5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe5
cbe5:
add r8, 1
and r8, 0xFFFF
obe6:
cmp byte [tape + r8], 0
jz cbe6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
obe7:
cmp byte [tape + r8], 0
jz cbe7
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 33
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe7
cbe7:
sub r8, 33
and r8, 0xFFFF
push 1
push 33
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
obe8:
cmp byte [tape + r8], 0
jz cbe8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe8
cbe8:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
obe9:
cmp byte [tape + r8], 0
jz cbe9
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp obe9
cbe9:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
obea:
cmp byte [tape + r8], 0
jz cbea
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obea
cbea:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
obeb:
cmp byte [tape + r8], 0
jz cbeb
add r8, 344
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 353
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp obeb
cbeb:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obe6
cbe6:
sub r8, 1
and r8, 0xFFFF
obec:
cmp byte [tape + r8], 0
jz cbec
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obec
cbec:
add r8, 1
and r8, 0xFFFF
obed:
cmp byte [tape + r8], 0
jz cbed
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
obee:
cmp byte [tape + r8], 0
jz cbee
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obee
cbee:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 9
call o
add byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obed
cbed:
add r8, 352
and r8, 0xFFFF
push 1
push 353
call ms
sub r8, 353
and r8, 0xFFFF
obef:
cmp byte [tape + r8], 0
jz cbef
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obef
cbef:
add r8, 1
and r8, 0xFFFF
obf0:
cmp byte [tape + r8], 0
jz cbf0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 20
and r8, 0xFFFF
obf1:
cmp byte [tape + r8], 0
jz cbf1
sub r8, 20
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obf1
cbf1:
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
obf2:
cmp byte [tape + r8], 0
jz cbf2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obf2
cbf2:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
obf3:
cmp byte [tape + r8], 0
jz cbf3
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp obf3
cbf3:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
obf4:
cmp byte [tape + r8], 0
jz cbf4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obf4
cbf4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
obf5:
cmp byte [tape + r8], 0
jz cbf5
add r8, 345
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 354
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp obf5
cbf5:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obf0
cbf0:
sub r8, 1
and r8, 0xFFFF
obf6:
cmp byte [tape + r8], 0
jz cbf6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obf6
cbf6:
add r8, 1
and r8, 0xFFFF
obf7:
cmp byte [tape + r8], 0
jz cbf7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
obf8:
cmp byte [tape + r8], 0
jz cbf8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obf8
cbf8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 12
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obf7
cbf7:
add r8, 353
and r8, 0xFFFF
push 1
push 354
call ms
sub r8, 354
and r8, 0xFFFF
obf9:
cmp byte [tape + r8], 0
jz cbf9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obf9
cbf9:
add r8, 1
and r8, 0xFFFF
obfa:
cmp byte [tape + r8], 0
jz cbfa
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 19
and r8, 0xFFFF
obfb:
cmp byte [tape + r8], 0
jz cbfb
sub r8, 19
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 26
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obfb
cbfb:
sub r8, 26
and r8, 0xFFFF
push 1
push 26
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
obfc:
cmp byte [tape + r8], 0
jz cbfc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obfc
cbfc:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
obfd:
cmp byte [tape + r8], 0
jz cbfd
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp obfd
cbfd:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
obfe:
cmp byte [tape + r8], 0
jz cbfe
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obfe
cbfe:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
obff:
cmp byte [tape + r8], 0
jz cbff
add r8, 346
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 355
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp obff
cbff:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp obfa
cbfa:
sub r8, 1
and r8, 0xFFFF
oc00:
cmp byte [tape + r8], 0
jz cc00
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc00
cc00:
add r8, 1
and r8, 0xFFFF
oc01:
cmp byte [tape + r8], 0
jz cc01
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
oc02:
cmp byte [tape + r8], 0
jz cc02
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc02
cc02:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 9
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc01
cc01:
add r8, 354
and r8, 0xFFFF
push 1
push 355
call ms
sub r8, 10
and r8, 0xFFFF
push 1
push 345
call ms
sub r8, 345
and r8, 0xFFFF
oc03:
cmp byte [tape + r8], 0
jz cc03
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc03
cc03:
add r8, 1
and r8, 0xFFFF
oc04:
cmp byte [tape + r8], 0
jz cc04
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oc05:
cmp byte [tape + r8], 0
jz cc05
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc05
cc05:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc06:
cmp byte [tape + r8], 0
jz cc06
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc06
cc06:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oc07:
cmp byte [tape + r8], 0
jz cc07
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oc07
cc07:
add r8, 7
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
oc08:
cmp byte [tape + r8], 0
jz cc08
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc08
cc08:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc09:
cmp byte [tape + r8], 0
jz cc09
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc09
cc09:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oc0a:
cmp byte [tape + r8], 0
jz cc0a
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc0a
cc0a:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oc0b:
cmp byte [tape + r8], 0
jz cc0b
call z
add r8, 8
and r8, 0xFFFF
oc0c:
cmp byte [tape + r8], 0
jz cc0c
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc0c
cc0c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oc0d:
cmp byte [tape + r8], 0
jz cc0d
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc0d
cc0d:
jmp oc0b
cc0b:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oc0e:
cmp byte [tape + r8], 0
jz cc0e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc0e
cc0e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oc0f:
cmp byte [tape + r8], 0
jz cc0f
add r8, 347
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 356
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oc0f
cc0f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc04
cc04:
sub r8, 1
and r8, 0xFFFF
oc10:
cmp byte [tape + r8], 0
jz cc10
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc10
cc10:
add r8, 1
and r8, 0xFFFF
oc11:
cmp byte [tape + r8], 0
jz cc11
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oc12:
cmp byte [tape + r8], 0
jz cc12
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc12
cc12:
add r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc11
cc11:
add r8, 355
and r8, 0xFFFF
push 1
push 356
call ms
sub r8, 356
and r8, 0xFFFF
oc13:
cmp byte [tape + r8], 0
jz cc13
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc13
cc13:
add r8, 1
and r8, 0xFFFF
oc14:
cmp byte [tape + r8], 0
jz cc14
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc14
cc14:
add r8, 343
and r8, 0xFFFF
push 1
push 344
call ms
sub r8, 344
and r8, 0xFFFF
oc15:
cmp byte [tape + r8], 0
jz cc15
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc15
cc15:
add r8, 1
and r8, 0xFFFF
oc16:
cmp byte [tape + r8], 0
jz cc16
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
oc17:
cmp byte [tape + r8], 0
jz cc17
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc17
cc17:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc18:
cmp byte [tape + r8], 0
jz cc18
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc18
cc18:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oc19:
cmp byte [tape + r8], 0
jz cc19
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oc19
cc19:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oc1a:
cmp byte [tape + r8], 0
jz cc1a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc1a
cc1a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oc1b:
cmp byte [tape + r8], 0
jz cc1b
add r8, 348
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 357
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oc1b
cc1b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc16
cc16:
sub r8, 1
and r8, 0xFFFF
oc1c:
cmp byte [tape + r8], 0
jz cc1c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc1c
cc1c:
add r8, 1
and r8, 0xFFFF
oc1d:
cmp byte [tape + r8], 0
jz cc1d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
oc1e:
cmp byte [tape + r8], 0
jz cc1e
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc1e
cc1e:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
oc1f:
cmp byte [tape + r8], 0
jz cc1f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oc1f
cc1f:
add r8, 1
and r8, 0xFFFF
oc20:
cmp byte [tape + r8], 0
jz cc20
sub r8, 3
and r8, 0xFFFF
oc21:
cmp byte [tape + r8], 0
jz cc21
sub r8, 2
and r8, 0xFFFF
jmp oc21
cc21:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc22:
cmp byte [tape + r8], 0
jz cc22
add r8, 2
and r8, 0xFFFF
jmp oc22
cc22:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc20
cc20:
sub r8, 3
and r8, 0xFFFF
oc23:
cmp byte [tape + r8], 0
jz cc23
sub r8, 2
and r8, 0xFFFF
jmp oc23
cc23:
add r8, 1
and r8, 0xFFFF
oc24:
cmp byte [tape + r8], 0
jz cc24
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc24
cc24:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oc25:
cmp byte [tape + r8], 0
jz cc25
add r8, 2
and r8, 0xFFFF
jmp oc25
cc25:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oc26:
cmp byte [tape + r8], 0
jz cc26
sub r8, 2
and r8, 0xFFFF
jmp oc26
cc26:
add r8, 1
and r8, 0xFFFF
oc27:
cmp byte [tape + r8], 0
jz cc27
add r8, 1
and r8, 0xFFFF
oc28:
cmp byte [tape + r8], 0
jz cc28
add r8, 2
and r8, 0xFFFF
jmp oc28
cc28:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oc29:
cmp byte [tape + r8], 0
jz cc29
sub r8, 2
and r8, 0xFFFF
jmp oc29
cc29:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc27
cc27:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
oc2a:
cmp byte [tape + r8], 0
jz cc2a
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc2a
cc2a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc2b:
cmp byte [tape + r8], 0
jz cc2b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc2b
cc2b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oc2c:
cmp byte [tape + r8], 0
jz cc2c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oc2c
cc2c:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
oc2d:
cmp byte [tape + r8], 0
jz cc2d
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc2d
cc2d:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
oc2e:
cmp byte [tape + r8], 0
jz cc2e
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oc2e
cc2e:
add r8, 1
and r8, 0xFFFF
oc2f:
cmp byte [tape + r8], 0
jz cc2f
sub r8, 3
and r8, 0xFFFF
oc30:
cmp byte [tape + r8], 0
jz cc30
sub r8, 2
and r8, 0xFFFF
jmp oc30
cc30:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc31:
cmp byte [tape + r8], 0
jz cc31
add r8, 2
and r8, 0xFFFF
jmp oc31
cc31:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc2f
cc2f:
sub r8, 3
and r8, 0xFFFF
oc32:
cmp byte [tape + r8], 0
jz cc32
sub r8, 2
and r8, 0xFFFF
jmp oc32
cc32:
add r8, 1
and r8, 0xFFFF
oc33:
cmp byte [tape + r8], 0
jz cc33
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc33
cc33:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oc34:
cmp byte [tape + r8], 0
jz cc34
add r8, 2
and r8, 0xFFFF
jmp oc34
cc34:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oc35:
cmp byte [tape + r8], 0
jz cc35
sub r8, 2
and r8, 0xFFFF
jmp oc35
cc35:
add r8, 1
and r8, 0xFFFF
oc36:
cmp byte [tape + r8], 0
jz cc36
add r8, 1
and r8, 0xFFFF
oc37:
cmp byte [tape + r8], 0
jz cc37
add r8, 2
and r8, 0xFFFF
jmp oc37
cc37:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oc38:
cmp byte [tape + r8], 0
jz cc38
sub r8, 2
and r8, 0xFFFF
jmp oc38
cc38:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc36
cc36:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc39:
cmp byte [tape + r8], 0
jz cc39
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc39
cc39:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oc3a:
cmp byte [tape + r8], 0
jz cc3a
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc3a
cc3a:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oc3b:
cmp byte [tape + r8], 0
jz cc3b
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc3b
cc3b:
add r8, 8
and r8, 0xFFFF
oc3c:
cmp byte [tape + r8], 0
jz cc3c
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc3c
cc3c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oc3d:
cmp byte [tape + r8], 0
jz cc3d
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc3d
cc3d:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oc3e:
cmp byte [tape + r8], 0
jz cc3e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc3e
cc3e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oc3f:
cmp byte [tape + r8], 0
jz cc3f
add r8, 349
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 358
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oc3f
cc3f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc1d
cc1d:
sub r8, 1
and r8, 0xFFFF
oc40:
cmp byte [tape + r8], 0
jz cc40
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc40
cc40:
add r8, 1
and r8, 0xFFFF
oc41:
cmp byte [tape + r8], 0
jz cc41
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 28
and r8, 0xFFFF
oc42:
cmp byte [tape + r8], 0
jz cc42
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc42
cc42:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc43:
cmp byte [tape + r8], 0
jz cc43
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc43
cc43:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oc44:
cmp byte [tape + r8], 0
jz cc44
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oc44
cc44:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oc45:
cmp byte [tape + r8], 0
jz cc45
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc45
cc45:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oc46:
cmp byte [tape + r8], 0
jz cc46
add r8, 350
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 359
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oc46
cc46:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc41
cc41:
sub r8, 1
and r8, 0xFFFF
oc47:
cmp byte [tape + r8], 0
jz cc47
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc47
cc47:
add r8, 1
and r8, 0xFFFF
oc48:
cmp byte [tape + r8], 0
jz cc48
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
oc49:
cmp byte [tape + r8], 0
jz cc49
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oc49
cc49:
add r8, 1
and r8, 0xFFFF
oc4a:
cmp byte [tape + r8], 0
jz cc4a
sub r8, 3
and r8, 0xFFFF
oc4b:
cmp byte [tape + r8], 0
jz cc4b
sub r8, 2
and r8, 0xFFFF
jmp oc4b
cc4b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc4c:
cmp byte [tape + r8], 0
jz cc4c
add r8, 2
and r8, 0xFFFF
jmp oc4c
cc4c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc4a
cc4a:
sub r8, 3
and r8, 0xFFFF
oc4d:
cmp byte [tape + r8], 0
jz cc4d
sub r8, 2
and r8, 0xFFFF
jmp oc4d
cc4d:
add r8, 1
and r8, 0xFFFF
oc4e:
cmp byte [tape + r8], 0
jz cc4e
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc4e
cc4e:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oc4f:
cmp byte [tape + r8], 0
jz cc4f
add r8, 2
and r8, 0xFFFF
jmp oc4f
cc4f:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oc50:
cmp byte [tape + r8], 0
jz cc50
sub r8, 2
and r8, 0xFFFF
jmp oc50
cc50:
add r8, 1
and r8, 0xFFFF
oc51:
cmp byte [tape + r8], 0
jz cc51
add r8, 1
and r8, 0xFFFF
oc52:
cmp byte [tape + r8], 0
jz cc52
add r8, 2
and r8, 0xFFFF
jmp oc52
cc52:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oc53:
cmp byte [tape + r8], 0
jz cc53
sub r8, 2
and r8, 0xFFFF
jmp oc53
cc53:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc51
cc51:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
oc54:
cmp byte [tape + r8], 0
jz cc54
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc54
cc54:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc55:
cmp byte [tape + r8], 0
jz cc55
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc55
cc55:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oc56:
cmp byte [tape + r8], 0
jz cc56
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oc56
cc56:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
oc57:
cmp byte [tape + r8], 0
jz cc57
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oc57
cc57:
add r8, 1
and r8, 0xFFFF
oc58:
cmp byte [tape + r8], 0
jz cc58
sub r8, 3
and r8, 0xFFFF
oc59:
cmp byte [tape + r8], 0
jz cc59
sub r8, 2
and r8, 0xFFFF
jmp oc59
cc59:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc5a:
cmp byte [tape + r8], 0
jz cc5a
add r8, 2
and r8, 0xFFFF
jmp oc5a
cc5a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc58
cc58:
sub r8, 3
and r8, 0xFFFF
oc5b:
cmp byte [tape + r8], 0
jz cc5b
sub r8, 2
and r8, 0xFFFF
jmp oc5b
cc5b:
add r8, 1
and r8, 0xFFFF
oc5c:
cmp byte [tape + r8], 0
jz cc5c
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc5c
cc5c:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oc5d:
cmp byte [tape + r8], 0
jz cc5d
add r8, 2
and r8, 0xFFFF
jmp oc5d
cc5d:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oc5e:
cmp byte [tape + r8], 0
jz cc5e
sub r8, 2
and r8, 0xFFFF
jmp oc5e
cc5e:
add r8, 1
and r8, 0xFFFF
oc5f:
cmp byte [tape + r8], 0
jz cc5f
add r8, 1
and r8, 0xFFFF
oc60:
cmp byte [tape + r8], 0
jz cc60
add r8, 2
and r8, 0xFFFF
jmp oc60
cc60:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oc61:
cmp byte [tape + r8], 0
jz cc61
sub r8, 2
and r8, 0xFFFF
jmp oc61
cc61:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc5f
cc5f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc62:
cmp byte [tape + r8], 0
jz cc62
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc62
cc62:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oc63:
cmp byte [tape + r8], 0
jz cc63
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc63
cc63:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oc64:
cmp byte [tape + r8], 0
jz cc64
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc64
cc64:
add r8, 8
and r8, 0xFFFF
oc65:
cmp byte [tape + r8], 0
jz cc65
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc65
cc65:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oc66:
cmp byte [tape + r8], 0
jz cc66
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc66
cc66:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oc67:
cmp byte [tape + r8], 0
jz cc67
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc67
cc67:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oc68:
cmp byte [tape + r8], 0
jz cc68
add r8, 351
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 360
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oc68
cc68:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc48
cc48:
sub r8, 1
and r8, 0xFFFF
oc69:
cmp byte [tape + r8], 0
jz cc69
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc69
cc69:
add r8, 1
and r8, 0xFFFF
oc6a:
cmp byte [tape + r8], 0
jz cc6a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
oc6b:
cmp byte [tape + r8], 0
jz cc6b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc6b
cc6b:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc6a
cc6a:
add r8, 359
and r8, 0xFFFF
push 1
push 360
call ms
sub r8, 360
and r8, 0xFFFF
oc6c:
cmp byte [tape + r8], 0
jz cc6c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc6c
cc6c:
add r8, 1
and r8, 0xFFFF
oc6d:
cmp byte [tape + r8], 0
jz cc6d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
oc6e:
cmp byte [tape + r8], 0
jz cc6e
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 34
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc6e
cc6e:
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 1
and r8, 0xFFFF
oc6f:
cmp byte [tape + r8], 0
jz cc6f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc6f
cc6f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oc70:
cmp byte [tape + r8], 0
jz cc70
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oc70
cc70:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oc71:
cmp byte [tape + r8], 0
jz cc71
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc71
cc71:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oc72:
cmp byte [tape + r8], 0
jz cc72
add r8, 352
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 361
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oc72
cc72:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc6d
cc6d:
sub r8, 1
and r8, 0xFFFF
oc73:
cmp byte [tape + r8], 0
jz cc73
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc73
cc73:
add r8, 1
and r8, 0xFFFF
oc74:
cmp byte [tape + r8], 0
jz cc74
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc74
cc74:
add r8, 360
and r8, 0xFFFF
push 1
push 361
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 359
call ms
sub r8, 359
and r8, 0xFFFF
oc75:
cmp byte [tape + r8], 0
jz cc75
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc75
cc75:
add r8, 1
and r8, 0xFFFF
oc76:
cmp byte [tape + r8], 0
jz cc76
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
oc77:
cmp byte [tape + r8], 0
jz cc77
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc77
cc77:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 1
and r8, 0xFFFF
oc78:
cmp byte [tape + r8], 0
jz cc78
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc78
cc78:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oc79:
cmp byte [tape + r8], 0
jz cc79
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oc79
cc79:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
oc7a:
cmp byte [tape + r8], 0
jz cc7a
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc7a
cc7a:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc7b:
cmp byte [tape + r8], 0
jz cc7b
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc7b
cc7b:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oc7c:
cmp byte [tape + r8], 0
jz cc7c
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc7c
cc7c:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oc7d:
cmp byte [tape + r8], 0
jz cc7d
call z
add r8, 8
and r8, 0xFFFF
oc7e:
cmp byte [tape + r8], 0
jz cc7e
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc7e
cc7e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oc7f:
cmp byte [tape + r8], 0
jz cc7f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc7f
cc7f:
jmp oc7d
cc7d:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oc80:
cmp byte [tape + r8], 0
jz cc80
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc80
cc80:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oc81:
cmp byte [tape + r8], 0
jz cc81
add r8, 353
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 362
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oc81
cc81:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc76
cc76:
sub r8, 1
and r8, 0xFFFF
oc82:
cmp byte [tape + r8], 0
jz cc82
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc82
cc82:
add r8, 1
and r8, 0xFFFF
oc83:
cmp byte [tape + r8], 0
jz cc83
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
oc84:
cmp byte [tape + r8], 0
jz cc84
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oc84
cc84:
add r8, 1
and r8, 0xFFFF
oc85:
cmp byte [tape + r8], 0
jz cc85
sub r8, 3
and r8, 0xFFFF
oc86:
cmp byte [tape + r8], 0
jz cc86
sub r8, 2
and r8, 0xFFFF
jmp oc86
cc86:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc87:
cmp byte [tape + r8], 0
jz cc87
add r8, 2
and r8, 0xFFFF
jmp oc87
cc87:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc85
cc85:
sub r8, 3
and r8, 0xFFFF
oc88:
cmp byte [tape + r8], 0
jz cc88
sub r8, 2
and r8, 0xFFFF
jmp oc88
cc88:
add r8, 1
and r8, 0xFFFF
oc89:
cmp byte [tape + r8], 0
jz cc89
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc89
cc89:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oc8a:
cmp byte [tape + r8], 0
jz cc8a
add r8, 2
and r8, 0xFFFF
jmp oc8a
cc8a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oc8b:
cmp byte [tape + r8], 0
jz cc8b
sub r8, 2
and r8, 0xFFFF
jmp oc8b
cc8b:
add r8, 1
and r8, 0xFFFF
oc8c:
cmp byte [tape + r8], 0
jz cc8c
add r8, 1
and r8, 0xFFFF
oc8d:
cmp byte [tape + r8], 0
jz cc8d
add r8, 2
and r8, 0xFFFF
jmp oc8d
cc8d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oc8e:
cmp byte [tape + r8], 0
jz cc8e
sub r8, 2
and r8, 0xFFFF
jmp oc8e
cc8e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc8c
cc8c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
oc8f:
cmp byte [tape + r8], 0
jz cc8f
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc8f
cc8f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc90:
cmp byte [tape + r8], 0
jz cc90
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc90
cc90:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oc91:
cmp byte [tape + r8], 0
jz cc91
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oc91
cc91:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
oc92:
cmp byte [tape + r8], 0
jz cc92
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oc92
cc92:
add r8, 1
and r8, 0xFFFF
oc93:
cmp byte [tape + r8], 0
jz cc93
sub r8, 3
and r8, 0xFFFF
oc94:
cmp byte [tape + r8], 0
jz cc94
sub r8, 2
and r8, 0xFFFF
jmp oc94
cc94:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc95:
cmp byte [tape + r8], 0
jz cc95
add r8, 2
and r8, 0xFFFF
jmp oc95
cc95:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc93
cc93:
sub r8, 3
and r8, 0xFFFF
oc96:
cmp byte [tape + r8], 0
jz cc96
sub r8, 2
and r8, 0xFFFF
jmp oc96
cc96:
add r8, 1
and r8, 0xFFFF
oc97:
cmp byte [tape + r8], 0
jz cc97
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc97
cc97:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oc98:
cmp byte [tape + r8], 0
jz cc98
add r8, 2
and r8, 0xFFFF
jmp oc98
cc98:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oc99:
cmp byte [tape + r8], 0
jz cc99
sub r8, 2
and r8, 0xFFFF
jmp oc99
cc99:
add r8, 1
and r8, 0xFFFF
oc9a:
cmp byte [tape + r8], 0
jz cc9a
add r8, 1
and r8, 0xFFFF
oc9b:
cmp byte [tape + r8], 0
jz cc9b
add r8, 2
and r8, 0xFFFF
jmp oc9b
cc9b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oc9c:
cmp byte [tape + r8], 0
jz cc9c
sub r8, 2
and r8, 0xFFFF
jmp oc9c
cc9c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc9a
cc9a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oc9d:
cmp byte [tape + r8], 0
jz cc9d
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc9d
cc9d:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oc9e:
cmp byte [tape + r8], 0
jz cc9e
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc9e
cc9e:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oc9f:
cmp byte [tape + r8], 0
jz cc9f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oc9f
cc9f:
add r8, 8
and r8, 0xFFFF
oca0:
cmp byte [tape + r8], 0
jz cca0
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oca0
cca0:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oca1:
cmp byte [tape + r8], 0
jz cca1
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oca1
cca1:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oca2:
cmp byte [tape + r8], 0
jz cca2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oca2
cca2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oca3:
cmp byte [tape + r8], 0
jz cca3
add r8, 354
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 363
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oca3
cca3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oc83
cc83:
sub r8, 1
and r8, 0xFFFF
oca4:
cmp byte [tape + r8], 0
jz cca4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oca4
cca4:
add r8, 1
and r8, 0xFFFF
oca5:
cmp byte [tape + r8], 0
jz cca5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
oca6:
cmp byte [tape + r8], 0
jz cca6
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oca6
cca6:
add r8, 1
and r8, 0xFFFF
oca7:
cmp byte [tape + r8], 0
jz cca7
sub r8, 3
and r8, 0xFFFF
oca8:
cmp byte [tape + r8], 0
jz cca8
sub r8, 2
and r8, 0xFFFF
jmp oca8
cca8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oca9:
cmp byte [tape + r8], 0
jz cca9
add r8, 2
and r8, 0xFFFF
jmp oca9
cca9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oca7
cca7:
sub r8, 3
and r8, 0xFFFF
ocaa:
cmp byte [tape + r8], 0
jz ccaa
sub r8, 2
and r8, 0xFFFF
jmp ocaa
ccaa:
add r8, 1
and r8, 0xFFFF
ocab:
cmp byte [tape + r8], 0
jz ccab
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocab
ccab:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
ocac:
cmp byte [tape + r8], 0
jz ccac
add r8, 2
and r8, 0xFFFF
jmp ocac
ccac:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
ocad:
cmp byte [tape + r8], 0
jz ccad
sub r8, 2
and r8, 0xFFFF
jmp ocad
ccad:
add r8, 1
and r8, 0xFFFF
ocae:
cmp byte [tape + r8], 0
jz ccae
add r8, 1
and r8, 0xFFFF
ocaf:
cmp byte [tape + r8], 0
jz ccaf
add r8, 2
and r8, 0xFFFF
jmp ocaf
ccaf:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
ocb0:
cmp byte [tape + r8], 0
jz ccb0
sub r8, 2
and r8, 0xFFFF
jmp ocb0
ccb0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocae
ccae:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
ocb1:
cmp byte [tape + r8], 0
jz ccb1
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocb1
ccb1:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ocb2:
cmp byte [tape + r8], 0
jz ccb2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocb2
ccb2:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ocb3:
cmp byte [tape + r8], 0
jz ccb3
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ocb3
ccb3:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
ocb4:
cmp byte [tape + r8], 0
jz ccb4
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp ocb4
ccb4:
add r8, 1
and r8, 0xFFFF
ocb5:
cmp byte [tape + r8], 0
jz ccb5
sub r8, 3
and r8, 0xFFFF
ocb6:
cmp byte [tape + r8], 0
jz ccb6
sub r8, 2
and r8, 0xFFFF
jmp ocb6
ccb6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ocb7:
cmp byte [tape + r8], 0
jz ccb7
add r8, 2
and r8, 0xFFFF
jmp ocb7
ccb7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocb5
ccb5:
sub r8, 3
and r8, 0xFFFF
ocb8:
cmp byte [tape + r8], 0
jz ccb8
sub r8, 2
and r8, 0xFFFF
jmp ocb8
ccb8:
add r8, 1
and r8, 0xFFFF
ocb9:
cmp byte [tape + r8], 0
jz ccb9
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocb9
ccb9:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
ocba:
cmp byte [tape + r8], 0
jz ccba
add r8, 2
and r8, 0xFFFF
jmp ocba
ccba:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
ocbb:
cmp byte [tape + r8], 0
jz ccbb
sub r8, 2
and r8, 0xFFFF
jmp ocbb
ccbb:
add r8, 1
and r8, 0xFFFF
ocbc:
cmp byte [tape + r8], 0
jz ccbc
add r8, 1
and r8, 0xFFFF
ocbd:
cmp byte [tape + r8], 0
jz ccbd
add r8, 2
and r8, 0xFFFF
jmp ocbd
ccbd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
ocbe:
cmp byte [tape + r8], 0
jz ccbe
sub r8, 2
and r8, 0xFFFF
jmp ocbe
ccbe:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocbc
ccbc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ocbf:
cmp byte [tape + r8], 0
jz ccbf
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocbf
ccbf:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
occ0:
cmp byte [tape + r8], 0
jz ccc0
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp occ0
ccc0:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
occ1:
cmp byte [tape + r8], 0
jz ccc1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp occ1
ccc1:
add r8, 8
and r8, 0xFFFF
occ2:
cmp byte [tape + r8], 0
jz ccc2
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occ2
ccc2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
occ3:
cmp byte [tape + r8], 0
jz ccc3
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp occ3
ccc3:
add r8, 8
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
occ4:
cmp byte [tape + r8], 0
jz ccc4
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occ4
ccc4:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
add r8, 1
and r8, 0xFFFF
occ5:
cmp byte [tape + r8], 0
jz ccc5
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occ5
ccc5:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
occ6:
cmp byte [tape + r8], 0
jz ccc6
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp occ6
ccc6:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
occ7:
cmp byte [tape + r8], 0
jz ccc7
call z
add r8, 8
and r8, 0xFFFF
occ8:
cmp byte [tape + r8], 0
jz ccc8
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occ8
ccc8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
occ9:
cmp byte [tape + r8], 0
jz ccc9
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp occ9
ccc9:
jmp occ7
ccc7:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
occa:
cmp byte [tape + r8], 0
jz ccca
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occa
ccca:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
occb:
cmp byte [tape + r8], 0
jz cccb
add r8, 355
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 364
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp occb
cccb:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oca5
cca5:
sub r8, 1
and r8, 0xFFFF
occc:
cmp byte [tape + r8], 0
jz cccc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occc
cccc:
add r8, 1
and r8, 0xFFFF
occd:
cmp byte [tape + r8], 0
jz cccd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
occe:
cmp byte [tape + r8], 0
jz ccce
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occe
ccce:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
occf:
cmp byte [tape + r8], 0
jz cccf
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occf
cccf:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ocd0:
cmp byte [tape + r8], 0
jz ccd0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ocd0
ccd0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ocd1:
cmp byte [tape + r8], 0
jz ccd1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd1
ccd1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ocd2:
cmp byte [tape + r8], 0
jz ccd2
add r8, 356
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 365
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ocd2
ccd2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp occd
cccd:
sub r8, 1
and r8, 0xFFFF
ocd3:
cmp byte [tape + r8], 0
jz ccd3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd3
ccd3:
add r8, 1
and r8, 0xFFFF
ocd4:
cmp byte [tape + r8], 0
jz ccd4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
ocd5:
cmp byte [tape + r8], 0
jz ccd5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd5
ccd5:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd4
ccd4:
add r8, 364
and r8, 0xFFFF
push 1
push 365
call ms
sub r8, 365
and r8, 0xFFFF
ocd6:
cmp byte [tape + r8], 0
jz ccd6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd6
ccd6:
add r8, 1
and r8, 0xFFFF
ocd7:
cmp byte [tape + r8], 0
jz ccd7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
ocd8:
cmp byte [tape + r8], 0
jz ccd8
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd8
ccd8:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ocd9:
cmp byte [tape + r8], 0
jz ccd9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd9
ccd9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ocda:
cmp byte [tape + r8], 0
jz ccda
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ocda
ccda:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ocdb:
cmp byte [tape + r8], 0
jz ccdb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocdb
ccdb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ocdc:
cmp byte [tape + r8], 0
jz ccdc
add r8, 357
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 366
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ocdc
ccdc:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocd7
ccd7:
sub r8, 1
and r8, 0xFFFF
ocdd:
cmp byte [tape + r8], 0
jz ccdd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocdd
ccdd:
add r8, 1
and r8, 0xFFFF
ocde:
cmp byte [tape + r8], 0
jz ccde
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
ocdf:
cmp byte [tape + r8], 0
jz ccdf
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocdf
ccdf:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocde
ccde:
add r8, 365
and r8, 0xFFFF
push 1
push 366
call ms
sub r8, 366
and r8, 0xFFFF
oce0:
cmp byte [tape + r8], 0
jz cce0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce0
cce0:
add r8, 1
and r8, 0xFFFF
oce1:
cmp byte [tape + r8], 0
jz cce1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
oce2:
cmp byte [tape + r8], 0
jz cce2
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce2
cce2:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oce3:
cmp byte [tape + r8], 0
jz cce3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce3
cce3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oce4:
cmp byte [tape + r8], 0
jz cce4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oce4
cce4:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oce5:
cmp byte [tape + r8], 0
jz cce5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce5
cce5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oce6:
cmp byte [tape + r8], 0
jz cce6
add r8, 358
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 367
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oce6
cce6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce1
cce1:
sub r8, 1
and r8, 0xFFFF
oce7:
cmp byte [tape + r8], 0
jz cce7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce7
cce7:
add r8, 1
and r8, 0xFFFF
oce8:
cmp byte [tape + r8], 0
jz cce8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
oce9:
cmp byte [tape + r8], 0
jz cce9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce9
cce9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 17
and r8, 0xFFFF
call z
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oce8
cce8:
add r8, 366
and r8, 0xFFFF
push 1
push 367
call ms
sub r8, 367
and r8, 0xFFFF
ocea:
cmp byte [tape + r8], 0
jz ccea
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocea
ccea:
add r8, 1
and r8, 0xFFFF
oceb:
cmp byte [tape + r8], 0
jz cceb
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 368
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 368
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oceb
cceb:
add r8, 363
and r8, 0xFFFF
push 1
push 364
call ms
sub r8, 364
and r8, 0xFFFF
ocec:
cmp byte [tape + r8], 0
jz ccec
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocec
ccec:
add r8, 1
and r8, 0xFFFF
oced:
cmp byte [tape + r8], 0
jz cced
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
ocee:
cmp byte [tape + r8], 0
jz ccee
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocee
ccee:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ocef:
cmp byte [tape + r8], 0
jz ccef
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocef
ccef:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ocf0:
cmp byte [tape + r8], 0
jz ccf0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ocf0
ccf0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ocf1:
cmp byte [tape + r8], 0
jz ccf1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocf1
ccf1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ocf2:
cmp byte [tape + r8], 0
jz ccf2
add r8, 360
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 369
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ocf2
ccf2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oced
cced:
sub r8, 1
and r8, 0xFFFF
ocf3:
cmp byte [tape + r8], 0
jz ccf3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocf3
ccf3:
add r8, 1
and r8, 0xFFFF
ocf4:
cmp byte [tape + r8], 0
jz ccf4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
ocf5:
cmp byte [tape + r8], 0
jz ccf5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocf5
ccf5:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocf4
ccf4:
add r8, 368
and r8, 0xFFFF
push 1
push 369
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 368
call ms
sub r8, 5
and r8, 0xFFFF
push 1
push 363
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 362
call ms
sub r8, 362
and r8, 0xFFFF
ocf6:
cmp byte [tape + r8], 0
jz ccf6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocf6
ccf6:
add r8, 1
and r8, 0xFFFF
ocf7:
cmp byte [tape + r8], 0
jz ccf7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
ocf8:
cmp byte [tape + r8], 0
jz ccf8
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocf8
ccf8:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ocf9:
cmp byte [tape + r8], 0
jz ccf9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocf9
ccf9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ocfa:
cmp byte [tape + r8], 0
jz ccfa
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ocfa
ccfa:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ocfb:
cmp byte [tape + r8], 0
jz ccfb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocfb
ccfb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ocfc:
cmp byte [tape + r8], 0
jz ccfc
add r8, 361
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 370
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ocfc
ccfc:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocf7
ccf7:
sub r8, 1
and r8, 0xFFFF
ocfd:
cmp byte [tape + r8], 0
jz ccfd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocfd
ccfd:
add r8, 1
and r8, 0xFFFF
ocfe:
cmp byte [tape + r8], 0
jz ccfe
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocfe
ccfe:
add r8, 369
and r8, 0xFFFF
push 1
push 370
call ms
sub r8, 12
and r8, 0xFFFF
push 1
push 358
call ms
sub r8, 358
and r8, 0xFFFF
ocff:
cmp byte [tape + r8], 0
jz ccff
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ocff
ccff:
add r8, 1
and r8, 0xFFFF
od00:
cmp byte [tape + r8], 0
jz cd00
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
od01:
cmp byte [tape + r8], 0
jz cd01
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od01
cd01:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od02:
cmp byte [tape + r8], 0
jz cd02
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od02
cd02:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
od03:
cmp byte [tape + r8], 0
jz cd03
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp od03
cd03:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
od04:
cmp byte [tape + r8], 0
jz cd04
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od04
cd04:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
od05:
cmp byte [tape + r8], 0
jz cd05
add r8, 362
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 371
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp od05
cd05:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od00
cd00:
sub r8, 1
and r8, 0xFFFF
od06:
cmp byte [tape + r8], 0
jz cd06
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od06
cd06:
add r8, 1
and r8, 0xFFFF
od07:
cmp byte [tape + r8], 0
jz cd07
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
od08:
cmp byte [tape + r8], 0
jz cd08
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp od08
cd08:
add r8, 1
and r8, 0xFFFF
od09:
cmp byte [tape + r8], 0
jz cd09
sub r8, 3
and r8, 0xFFFF
od0a:
cmp byte [tape + r8], 0
jz cd0a
sub r8, 2
and r8, 0xFFFF
jmp od0a
cd0a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od0b:
cmp byte [tape + r8], 0
jz cd0b
add r8, 2
and r8, 0xFFFF
jmp od0b
cd0b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od09
cd09:
sub r8, 3
and r8, 0xFFFF
od0c:
cmp byte [tape + r8], 0
jz cd0c
sub r8, 2
and r8, 0xFFFF
jmp od0c
cd0c:
add r8, 1
and r8, 0xFFFF
od0d:
cmp byte [tape + r8], 0
jz cd0d
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od0d
cd0d:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
od0e:
cmp byte [tape + r8], 0
jz cd0e
add r8, 2
and r8, 0xFFFF
jmp od0e
cd0e:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
od0f:
cmp byte [tape + r8], 0
jz cd0f
sub r8, 2
and r8, 0xFFFF
jmp od0f
cd0f:
add r8, 1
and r8, 0xFFFF
od10:
cmp byte [tape + r8], 0
jz cd10
add r8, 1
and r8, 0xFFFF
od11:
cmp byte [tape + r8], 0
jz cd11
add r8, 2
and r8, 0xFFFF
jmp od11
cd11:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
od12:
cmp byte [tape + r8], 0
jz cd12
sub r8, 2
and r8, 0xFFFF
jmp od12
cd12:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od10
cd10:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
od13:
cmp byte [tape + r8], 0
jz cd13
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od13
cd13:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od14:
cmp byte [tape + r8], 0
jz cd14
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od14
cd14:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
od15:
cmp byte [tape + r8], 0
jz cd15
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp od15
cd15:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
od16:
cmp byte [tape + r8], 0
jz cd16
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp od16
cd16:
add r8, 1
and r8, 0xFFFF
od17:
cmp byte [tape + r8], 0
jz cd17
sub r8, 3
and r8, 0xFFFF
od18:
cmp byte [tape + r8], 0
jz cd18
sub r8, 2
and r8, 0xFFFF
jmp od18
cd18:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od19:
cmp byte [tape + r8], 0
jz cd19
add r8, 2
and r8, 0xFFFF
jmp od19
cd19:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od17
cd17:
sub r8, 3
and r8, 0xFFFF
od1a:
cmp byte [tape + r8], 0
jz cd1a
sub r8, 2
and r8, 0xFFFF
jmp od1a
cd1a:
add r8, 1
and r8, 0xFFFF
od1b:
cmp byte [tape + r8], 0
jz cd1b
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od1b
cd1b:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
od1c:
cmp byte [tape + r8], 0
jz cd1c
add r8, 2
and r8, 0xFFFF
jmp od1c
cd1c:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
od1d:
cmp byte [tape + r8], 0
jz cd1d
sub r8, 2
and r8, 0xFFFF
jmp od1d
cd1d:
add r8, 1
and r8, 0xFFFF
od1e:
cmp byte [tape + r8], 0
jz cd1e
add r8, 1
and r8, 0xFFFF
od1f:
cmp byte [tape + r8], 0
jz cd1f
add r8, 2
and r8, 0xFFFF
jmp od1f
cd1f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
od20:
cmp byte [tape + r8], 0
jz cd20
sub r8, 2
and r8, 0xFFFF
jmp od20
cd20:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od1e
cd1e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od21:
cmp byte [tape + r8], 0
jz cd21
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od21
cd21:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
od22:
cmp byte [tape + r8], 0
jz cd22
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od22
cd22:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
od23:
cmp byte [tape + r8], 0
jz cd23
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od23
cd23:
add r8, 8
and r8, 0xFFFF
od24:
cmp byte [tape + r8], 0
jz cd24
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od24
cd24:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
od25:
cmp byte [tape + r8], 0
jz cd25
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od25
cd25:
add r8, 8
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
od26:
cmp byte [tape + r8], 0
jz cd26
sub r8, 16
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od26
cd26:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od27:
cmp byte [tape + r8], 0
jz cd27
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od27
cd27:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
od28:
cmp byte [tape + r8], 0
jz cd28
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od28
cd28:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
od29:
cmp byte [tape + r8], 0
jz cd29
call z
add r8, 8
and r8, 0xFFFF
od2a:
cmp byte [tape + r8], 0
jz cd2a
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od2a
cd2a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
od2b:
cmp byte [tape + r8], 0
jz cd2b
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od2b
cd2b:
jmp od29
cd29:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
od2c:
cmp byte [tape + r8], 0
jz cd2c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od2c
cd2c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
od2d:
cmp byte [tape + r8], 0
jz cd2d
add r8, 363
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 372
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp od2d
cd2d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od07
cd07:
sub r8, 1
and r8, 0xFFFF
od2e:
cmp byte [tape + r8], 0
jz cd2e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od2e
cd2e:
add r8, 1
and r8, 0xFFFF
od2f:
cmp byte [tape + r8], 0
jz cd2f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 105
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od2f
cd2f:
add r8, 371
and r8, 0xFFFF
push 1
push 372
call ms
sub r8, 372
and r8, 0xFFFF
od30:
cmp byte [tape + r8], 0
jz cd30
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od30
cd30:
add r8, 1
and r8, 0xFFFF
od31:
cmp byte [tape + r8], 0
jz cd31
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
od32:
cmp byte [tape + r8], 0
jz cd32
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp od32
cd32:
add r8, 1
and r8, 0xFFFF
od33:
cmp byte [tape + r8], 0
jz cd33
sub r8, 3
and r8, 0xFFFF
od34:
cmp byte [tape + r8], 0
jz cd34
sub r8, 2
and r8, 0xFFFF
jmp od34
cd34:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od35:
cmp byte [tape + r8], 0
jz cd35
add r8, 2
and r8, 0xFFFF
jmp od35
cd35:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od33
cd33:
sub r8, 3
and r8, 0xFFFF
od36:
cmp byte [tape + r8], 0
jz cd36
sub r8, 2
and r8, 0xFFFF
jmp od36
cd36:
add r8, 1
and r8, 0xFFFF
od37:
cmp byte [tape + r8], 0
jz cd37
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od37
cd37:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
od38:
cmp byte [tape + r8], 0
jz cd38
add r8, 2
and r8, 0xFFFF
jmp od38
cd38:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
od39:
cmp byte [tape + r8], 0
jz cd39
sub r8, 2
and r8, 0xFFFF
jmp od39
cd39:
add r8, 1
and r8, 0xFFFF
od3a:
cmp byte [tape + r8], 0
jz cd3a
add r8, 1
and r8, 0xFFFF
od3b:
cmp byte [tape + r8], 0
jz cd3b
add r8, 2
and r8, 0xFFFF
jmp od3b
cd3b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
od3c:
cmp byte [tape + r8], 0
jz cd3c
sub r8, 2
and r8, 0xFFFF
jmp od3c
cd3c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od3a
cd3a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
od3d:
cmp byte [tape + r8], 0
jz cd3d
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od3d
cd3d:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od3e:
cmp byte [tape + r8], 0
jz cd3e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od3e
cd3e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
od3f:
cmp byte [tape + r8], 0
jz cd3f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp od3f
cd3f:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
od40:
cmp byte [tape + r8], 0
jz cd40
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp od40
cd40:
add r8, 1
and r8, 0xFFFF
od41:
cmp byte [tape + r8], 0
jz cd41
sub r8, 3
and r8, 0xFFFF
od42:
cmp byte [tape + r8], 0
jz cd42
sub r8, 2
and r8, 0xFFFF
jmp od42
cd42:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od43:
cmp byte [tape + r8], 0
jz cd43
add r8, 2
and r8, 0xFFFF
jmp od43
cd43:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od41
cd41:
sub r8, 3
and r8, 0xFFFF
od44:
cmp byte [tape + r8], 0
jz cd44
sub r8, 2
and r8, 0xFFFF
jmp od44
cd44:
add r8, 1
and r8, 0xFFFF
od45:
cmp byte [tape + r8], 0
jz cd45
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od45
cd45:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
od46:
cmp byte [tape + r8], 0
jz cd46
add r8, 2
and r8, 0xFFFF
jmp od46
cd46:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
od47:
cmp byte [tape + r8], 0
jz cd47
sub r8, 2
and r8, 0xFFFF
jmp od47
cd47:
add r8, 1
and r8, 0xFFFF
od48:
cmp byte [tape + r8], 0
jz cd48
add r8, 1
and r8, 0xFFFF
od49:
cmp byte [tape + r8], 0
jz cd49
add r8, 2
and r8, 0xFFFF
jmp od49
cd49:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
od4a:
cmp byte [tape + r8], 0
jz cd4a
sub r8, 2
and r8, 0xFFFF
jmp od4a
cd4a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od48
cd48:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od4b:
cmp byte [tape + r8], 0
jz cd4b
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od4b
cd4b:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
od4c:
cmp byte [tape + r8], 0
jz cd4c
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od4c
cd4c:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
od4d:
cmp byte [tape + r8], 0
jz cd4d
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od4d
cd4d:
add r8, 8
and r8, 0xFFFF
od4e:
cmp byte [tape + r8], 0
jz cd4e
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od4e
cd4e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
od4f:
cmp byte [tape + r8], 0
jz cd4f
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od4f
cd4f:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
od50:
cmp byte [tape + r8], 0
jz cd50
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od50
cd50:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
od51:
cmp byte [tape + r8], 0
jz cd51
add r8, 364
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 373
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp od51
cd51:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od31
cd31:
sub r8, 1
and r8, 0xFFFF
od52:
cmp byte [tape + r8], 0
jz cd52
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od52
cd52:
add r8, 1
and r8, 0xFFFF
od53:
cmp byte [tape + r8], 0
jz cd53
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
od54:
cmp byte [tape + r8], 0
jz cd54
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od54
cd54:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
od55:
cmp byte [tape + r8], 0
jz cd55
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od55
cd55:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 112
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od53
cd53:
add r8, 372
and r8, 0xFFFF
push 1
push 373
call ms
sub r8, 373
and r8, 0xFFFF
od56:
cmp byte [tape + r8], 0
jz cd56
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od56
cd56:
add r8, 1
and r8, 0xFFFF
od57:
cmp byte [tape + r8], 0
jz cd57
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
od58:
cmp byte [tape + r8], 0
jz cd58
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od58
cd58:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od59:
cmp byte [tape + r8], 0
jz cd59
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od59
cd59:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
od5a:
cmp byte [tape + r8], 0
jz cd5a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp od5a
cd5a:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
od5b:
cmp byte [tape + r8], 0
jz cd5b
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od5b
cd5b:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 4
call ms
add r8, 1
and r8, 0xFFFF
od5c:
cmp byte [tape + r8], 0
jz cd5c
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od5c
cd5c:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 2
and r8, 0xFFFF
od5d:
cmp byte [tape + r8], 0
jz cd5d
add r8, 2
and r8, 0xFFFF
od5e:
cmp byte [tape + r8], 0
jz cd5e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od5e
cd5e:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
od5f:
cmp byte [tape + r8], 0
jz cd5f
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp od5f
cd5f:
sub r8, 3
and r8, 0xFFFF
od60:
cmp byte [tape + r8], 0
jz cd60
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od60
cd60:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od5d
cd5d:
add r8, 2
and r8, 0xFFFF
od61:
cmp byte [tape + r8], 0
jz cd61
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
call z
jmp od61
cd61:
sub r8, 3
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
od62:
cmp byte [tape + r8], 0
jz cd62
call z
add r8, 8
and r8, 0xFFFF
od63:
cmp byte [tape + r8], 0
jz cd63
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od63
cd63:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
od64:
cmp byte [tape + r8], 0
jz cd64
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od64
cd64:
jmp od62
cd62:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
od65:
cmp byte [tape + r8], 0
jz cd65
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od65
cd65:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
od66:
cmp byte [tape + r8], 0
jz cd66
add r8, 365
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 374
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp od66
cd66:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od57
cd57:
sub r8, 1
and r8, 0xFFFF
od67:
cmp byte [tape + r8], 0
jz cd67
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od67
cd67:
add r8, 1
and r8, 0xFFFF
od68:
cmp byte [tape + r8], 0
jz cd68
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
od69:
cmp byte [tape + r8], 0
jz cd69
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od69
cd69:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od6a:
cmp byte [tape + r8], 0
jz cd6a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od6a
cd6a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
od6b:
cmp byte [tape + r8], 0
jz cd6b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp od6b
cd6b:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
od6c:
cmp byte [tape + r8], 0
jz cd6c
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp od6c
cd6c:
add r8, 1
and r8, 0xFFFF
od6d:
cmp byte [tape + r8], 0
jz cd6d
sub r8, 3
and r8, 0xFFFF
od6e:
cmp byte [tape + r8], 0
jz cd6e
sub r8, 2
and r8, 0xFFFF
jmp od6e
cd6e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od6f:
cmp byte [tape + r8], 0
jz cd6f
add r8, 2
and r8, 0xFFFF
jmp od6f
cd6f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od6d
cd6d:
sub r8, 3
and r8, 0xFFFF
od70:
cmp byte [tape + r8], 0
jz cd70
sub r8, 2
and r8, 0xFFFF
jmp od70
cd70:
add r8, 1
and r8, 0xFFFF
od71:
cmp byte [tape + r8], 0
jz cd71
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od71
cd71:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
od72:
cmp byte [tape + r8], 0
jz cd72
add r8, 2
and r8, 0xFFFF
jmp od72
cd72:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
od73:
cmp byte [tape + r8], 0
jz cd73
sub r8, 2
and r8, 0xFFFF
jmp od73
cd73:
add r8, 1
and r8, 0xFFFF
od74:
cmp byte [tape + r8], 0
jz cd74
add r8, 1
and r8, 0xFFFF
od75:
cmp byte [tape + r8], 0
jz cd75
add r8, 2
and r8, 0xFFFF
jmp od75
cd75:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
od76:
cmp byte [tape + r8], 0
jz cd76
sub r8, 2
and r8, 0xFFFF
jmp od76
cd76:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od74
cd74:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 35
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
od77:
cmp byte [tape + r8], 0
jz cd77
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od77
cd77:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od78:
cmp byte [tape + r8], 0
jz cd78
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od78
cd78:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
od79:
cmp byte [tape + r8], 0
jz cd79
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od79
cd79:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
od7a:
cmp byte [tape + r8], 0
jz cd7a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp od7a
cd7a:
add r8, 1
and r8, 0xFFFF
od7b:
cmp byte [tape + r8], 0
jz cd7b
sub r8, 3
and r8, 0xFFFF
od7c:
cmp byte [tape + r8], 0
jz cd7c
sub r8, 2
and r8, 0xFFFF
jmp od7c
cd7c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od7d:
cmp byte [tape + r8], 0
jz cd7d
add r8, 2
and r8, 0xFFFF
jmp od7d
cd7d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od7b
cd7b:
sub r8, 3
and r8, 0xFFFF
od7e:
cmp byte [tape + r8], 0
jz cd7e
sub r8, 2
and r8, 0xFFFF
jmp od7e
cd7e:
add r8, 1
and r8, 0xFFFF
od7f:
cmp byte [tape + r8], 0
jz cd7f
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od7f
cd7f:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
od80:
cmp byte [tape + r8], 0
jz cd80
add r8, 2
and r8, 0xFFFF
jmp od80
cd80:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
od81:
cmp byte [tape + r8], 0
jz cd81
sub r8, 2
and r8, 0xFFFF
jmp od81
cd81:
add r8, 1
and r8, 0xFFFF
od82:
cmp byte [tape + r8], 0
jz cd82
add r8, 1
and r8, 0xFFFF
od83:
cmp byte [tape + r8], 0
jz cd83
add r8, 2
and r8, 0xFFFF
jmp od83
cd83:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
od84:
cmp byte [tape + r8], 0
jz cd84
sub r8, 2
and r8, 0xFFFF
jmp od84
cd84:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od82
cd82:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
od85:
cmp byte [tape + r8], 0
jz cd85
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od85
cd85:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
od86:
cmp byte [tape + r8], 0
jz cd86
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp od86
cd86:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
od87:
cmp byte [tape + r8], 0
jz cd87
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp od87
cd87:
add r8, 9
and r8, 0xFFFF
od88:
cmp byte [tape + r8], 0
jz cd88
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od88
cd88:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
od89:
cmp byte [tape + r8], 0
jz cd89
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp od89
cd89:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
od8a:
cmp byte [tape + r8], 0
jz cd8a
call z
add r8, 8
and r8, 0xFFFF
od8b:
cmp byte [tape + r8], 0
jz cd8b
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od8b
cd8b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
od8c:
cmp byte [tape + r8], 0
jz cd8c
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp od8c
cd8c:
jmp od8a
cd8a:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
od8d:
cmp byte [tape + r8], 0
jz cd8d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od8d
cd8d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
od8e:
cmp byte [tape + r8], 0
jz cd8e
add r8, 366
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 375
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp od8e
cd8e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od68
cd68:
sub r8, 1
and r8, 0xFFFF
od8f:
cmp byte [tape + r8], 0
jz cd8f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od8f
cd8f:
add r8, 1
and r8, 0xFFFF
od90:
cmp byte [tape + r8], 0
jz cd90
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
od91:
cmp byte [tape + r8], 0
jz cd91
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od91
cd91:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
od92:
cmp byte [tape + r8], 0
jz cd92
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od92
cd92:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
od93:
cmp byte [tape + r8], 0
jz cd93
add r8, 2
and r8, 0xFFFF
od94:
cmp byte [tape + r8], 0
jz cd94
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od94
cd94:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
od95:
cmp byte [tape + r8], 0
jz cd95
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp od95
cd95:
sub r8, 3
and r8, 0xFFFF
od96:
cmp byte [tape + r8], 0
jz cd96
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od96
cd96:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od93
cd93:
add r8, 2
and r8, 0xFFFF
od97:
cmp byte [tape + r8], 0
jz cd97
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp od97
cd97:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
od98:
cmp byte [tape + r8], 0
jz cd98
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od98
cd98:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
od99:
cmp byte [tape + r8], 0
jz cd99
add r8, 367
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 376
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp od99
cd99:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od90
cd90:
sub r8, 1
and r8, 0xFFFF
od9a:
cmp byte [tape + r8], 0
jz cd9a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od9a
cd9a:
add r8, 1
and r8, 0xFFFF
od9b:
cmp byte [tape + r8], 0
jz cd9b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
od9c:
cmp byte [tape + r8], 0
jz cd9c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od9c
cd9c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
od9d:
cmp byte [tape + r8], 0
jz cd9d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od9d
cd9d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 13
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
od9e:
cmp byte [tape + r8], 0
jz cd9e
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp od9e
cd9e:
add r8, 1
and r8, 0xFFFF
od9f:
cmp byte [tape + r8], 0
jz cd9f
sub r8, 3
and r8, 0xFFFF
oda0:
cmp byte [tape + r8], 0
jz cda0
sub r8, 2
and r8, 0xFFFF
jmp oda0
cda0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oda1:
cmp byte [tape + r8], 0
jz cda1
add r8, 2
and r8, 0xFFFF
jmp oda1
cda1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od9f
cd9f:
sub r8, 3
and r8, 0xFFFF
oda2:
cmp byte [tape + r8], 0
jz cda2
sub r8, 2
and r8, 0xFFFF
jmp oda2
cda2:
add r8, 1
and r8, 0xFFFF
oda3:
cmp byte [tape + r8], 0
jz cda3
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oda3
cda3:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oda4:
cmp byte [tape + r8], 0
jz cda4
add r8, 2
and r8, 0xFFFF
jmp oda4
cda4:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oda5:
cmp byte [tape + r8], 0
jz cda5
sub r8, 2
and r8, 0xFFFF
jmp oda5
cda5:
add r8, 1
and r8, 0xFFFF
oda6:
cmp byte [tape + r8], 0
jz cda6
add r8, 1
and r8, 0xFFFF
oda7:
cmp byte [tape + r8], 0
jz cda7
add r8, 2
and r8, 0xFFFF
jmp oda7
cda7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oda8:
cmp byte [tape + r8], 0
jz cda8
sub r8, 2
and r8, 0xFFFF
jmp oda8
cda8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oda6
cda6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oda9:
cmp byte [tape + r8], 0
jz cda9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oda9
cda9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
odaa:
cmp byte [tape + r8], 0
jz cdaa
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp odaa
cdaa:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
odab:
cmp byte [tape + r8], 0
jz cdab
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odab
cdab:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
odac:
cmp byte [tape + r8], 0
jz cdac
add r8, 368
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 377
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp odac
cdac:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp od9b
cd9b:
sub r8, 1
and r8, 0xFFFF
odad:
cmp byte [tape + r8], 0
jz cdad
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odad
cdad:
add r8, 1
and r8, 0xFFFF
odae:
cmp byte [tape + r8], 0
jz cdae
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
odaf:
cmp byte [tape + r8], 0
jz cdaf
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odaf
cdaf:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
odb0:
cmp byte [tape + r8], 0
jz cdb0
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odb0
cdb0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odae
cdae:
add r8, 376
and r8, 0xFFFF
push 1
push 377
call ms
sub r8, 377
and r8, 0xFFFF
odb1:
cmp byte [tape + r8], 0
jz cdb1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odb1
cdb1:
add r8, 1
and r8, 0xFFFF
odb2:
cmp byte [tape + r8], 0
jz cdb2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
odb3:
cmp byte [tape + r8], 0
jz cdb3
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp odb3
cdb3:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
odb4:
cmp byte [tape + r8], 0
jz cdb4
sub r8, 2
and r8, 0xFFFF
jmp odb4
cdb4:
add r8, 1
and r8, 0xFFFF
odb5:
cmp byte [tape + r8], 0
jz cdb5
add r8, 1
and r8, 0xFFFF
odb6:
cmp byte [tape + r8], 0
jz cdb6
add r8, 2
and r8, 0xFFFF
jmp odb6
cdb6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
odb7:
cmp byte [tape + r8], 0
jz cdb7
sub r8, 2
and r8, 0xFFFF
jmp odb7
cdb7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odb5
cdb5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 34
and r8, 0xFFFF
call z
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 12
add r8, 13
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 369
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 378
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odb2
cdb2:
add r8, 375
and r8, 0xFFFF
push 1
push 376
call ms
sub r8, 376
and r8, 0xFFFF
odb8:
cmp byte [tape + r8], 0
jz cdb8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odb8
cdb8:
add r8, 1
and r8, 0xFFFF
odb9:
cmp byte [tape + r8], 0
jz cdb9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
odba:
cmp byte [tape + r8], 0
jz cdba
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odba
cdba:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 12
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odb9
cdb9:
add r8, 377
and r8, 0xFFFF
push 1
push 378
call ms
sub r8, 378
and r8, 0xFFFF
odbb:
cmp byte [tape + r8], 0
jz cdbb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odbb
cdbb:
add r8, 1
and r8, 0xFFFF
odbc:
cmp byte [tape + r8], 0
jz cdbc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 379
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 379
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odbc
cdbc:
add r8, 374
and r8, 0xFFFF
push 1
push 375
call ms
sub r8, 375
and r8, 0xFFFF
odbd:
cmp byte [tape + r8], 0
jz cdbd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odbd
cdbd:
add r8, 1
and r8, 0xFFFF
odbe:
cmp byte [tape + r8], 0
jz cdbe
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
odbf:
cmp byte [tape + r8], 0
jz cdbf
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp odbf
cdbf:
add r8, 1
and r8, 0xFFFF
odc0:
cmp byte [tape + r8], 0
jz cdc0
sub r8, 3
and r8, 0xFFFF
odc1:
cmp byte [tape + r8], 0
jz cdc1
sub r8, 2
and r8, 0xFFFF
jmp odc1
cdc1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
odc2:
cmp byte [tape + r8], 0
jz cdc2
add r8, 2
and r8, 0xFFFF
jmp odc2
cdc2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odc0
cdc0:
sub r8, 3
and r8, 0xFFFF
odc3:
cmp byte [tape + r8], 0
jz cdc3
sub r8, 2
and r8, 0xFFFF
jmp odc3
cdc3:
add r8, 1
and r8, 0xFFFF
odc4:
cmp byte [tape + r8], 0
jz cdc4
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odc4
cdc4:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
odc5:
cmp byte [tape + r8], 0
jz cdc5
add r8, 2
and r8, 0xFFFF
jmp odc5
cdc5:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
odc6:
cmp byte [tape + r8], 0
jz cdc6
sub r8, 2
and r8, 0xFFFF
jmp odc6
cdc6:
add r8, 1
and r8, 0xFFFF
odc7:
cmp byte [tape + r8], 0
jz cdc7
add r8, 1
and r8, 0xFFFF
odc8:
cmp byte [tape + r8], 0
jz cdc8
add r8, 2
and r8, 0xFFFF
jmp odc8
cdc8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
odc9:
cmp byte [tape + r8], 0
jz cdc9
sub r8, 2
and r8, 0xFFFF
jmp odc9
cdc9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odc7
cdc7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
odca:
cmp byte [tape + r8], 0
jz cdca
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odca
cdca:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
odcb:
cmp byte [tape + r8], 0
jz cdcb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odcb
cdcb:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
odcc:
cmp byte [tape + r8], 0
jz cdcc
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp odcc
cdcc:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
odcd:
cmp byte [tape + r8], 0
jz cdcd
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp odcd
cdcd:
add r8, 1
and r8, 0xFFFF
odce:
cmp byte [tape + r8], 0
jz cdce
sub r8, 3
and r8, 0xFFFF
odcf:
cmp byte [tape + r8], 0
jz cdcf
sub r8, 2
and r8, 0xFFFF
jmp odcf
cdcf:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
odd0:
cmp byte [tape + r8], 0
jz cdd0
add r8, 2
and r8, 0xFFFF
jmp odd0
cdd0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odce
cdce:
sub r8, 3
and r8, 0xFFFF
odd1:
cmp byte [tape + r8], 0
jz cdd1
sub r8, 2
and r8, 0xFFFF
jmp odd1
cdd1:
add r8, 1
and r8, 0xFFFF
odd2:
cmp byte [tape + r8], 0
jz cdd2
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odd2
cdd2:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
odd3:
cmp byte [tape + r8], 0
jz cdd3
add r8, 2
and r8, 0xFFFF
jmp odd3
cdd3:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
odd4:
cmp byte [tape + r8], 0
jz cdd4
sub r8, 2
and r8, 0xFFFF
jmp odd4
cdd4:
add r8, 1
and r8, 0xFFFF
odd5:
cmp byte [tape + r8], 0
jz cdd5
add r8, 1
and r8, 0xFFFF
odd6:
cmp byte [tape + r8], 0
jz cdd6
add r8, 2
and r8, 0xFFFF
jmp odd6
cdd6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
odd7:
cmp byte [tape + r8], 0
jz cdd7
sub r8, 2
and r8, 0xFFFF
jmp odd7
cdd7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odd5
cdd5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
odd8:
cmp byte [tape + r8], 0
jz cdd8
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odd8
cdd8:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
odd9:
cmp byte [tape + r8], 0
jz cdd9
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp odd9
cdd9:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
odda:
cmp byte [tape + r8], 0
jz cdda
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp odda
cdda:
add r8, 8
and r8, 0xFFFF
oddb:
cmp byte [tape + r8], 0
jz cddb
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oddb
cddb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oddc:
cmp byte [tape + r8], 0
jz cddc
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oddc
cddc:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oddd:
cmp byte [tape + r8], 0
jz cddd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oddd
cddd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
odde:
cmp byte [tape + r8], 0
jz cdde
add r8, 371
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 380
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp odde
cdde:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odbe
cdbe:
sub r8, 1
and r8, 0xFFFF
oddf:
cmp byte [tape + r8], 0
jz cddf
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oddf
cddf:
add r8, 1
and r8, 0xFFFF
ode0:
cmp byte [tape + r8], 0
jz cde0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
ode1:
cmp byte [tape + r8], 0
jz cde1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode1
cde1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 372
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 381
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode0
cde0:
add r8, 379
and r8, 0xFFFF
push 1
push 380
call ms
sub r8, 380
and r8, 0xFFFF
ode2:
cmp byte [tape + r8], 0
jz cde2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode2
cde2:
add r8, 1
and r8, 0xFFFF
ode3:
cmp byte [tape + r8], 0
jz cde3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode3
cde3:
add r8, 380
and r8, 0xFFFF
push 1
push 381
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 379
call ms
sub r8, 5
and r8, 0xFFFF
push 1
push 374
call ms
sub r8, 3
and r8, 0xFFFF
push 1
push 371
call ms
sub r8, 371
and r8, 0xFFFF
ode4:
cmp byte [tape + r8], 0
jz cde4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode4
cde4:
add r8, 1
and r8, 0xFFFF
ode5:
cmp byte [tape + r8], 0
jz cde5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
ode6:
cmp byte [tape + r8], 0
jz cde6
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode6
cde6:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ode7:
cmp byte [tape + r8], 0
jz cde7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode7
cde7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ode8:
cmp byte [tape + r8], 0
jz cde8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ode8
cde8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ode9:
cmp byte [tape + r8], 0
jz cde9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode9
cde9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
odea:
cmp byte [tape + r8], 0
jz cdea
add r8, 373
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 382
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp odea
cdea:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ode5
cde5:
sub r8, 1
and r8, 0xFFFF
odeb:
cmp byte [tape + r8], 0
jz cdeb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odeb
cdeb:
add r8, 1
and r8, 0xFFFF
odec:
cmp byte [tape + r8], 0
jz cdec
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oded:
cmp byte [tape + r8], 0
jz cded
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oded
cded:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
odee:
cmp byte [tape + r8], 0
jz cdee
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odee
cdee:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
odef:
cmp byte [tape + r8], 0
jz cdef
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp odef
cdef:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
odf0:
cmp byte [tape + r8], 0
jz cdf0
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odf0
cdf0:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
add r8, 1
and r8, 0xFFFF
odf1:
cmp byte [tape + r8], 0
jz cdf1
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odf1
cdf1:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
odf2:
cmp byte [tape + r8], 0
jz cdf2
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp odf2
cdf2:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
odf3:
cmp byte [tape + r8], 0
jz cdf3
call z
add r8, 8
and r8, 0xFFFF
odf4:
cmp byte [tape + r8], 0
jz cdf4
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odf4
cdf4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
odf5:
cmp byte [tape + r8], 0
jz cdf5
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp odf5
cdf5:
jmp odf3
cdf3:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
odf6:
cmp byte [tape + r8], 0
jz cdf6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odf6
cdf6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
odf7:
cmp byte [tape + r8], 0
jz cdf7
add r8, 374
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 383
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp odf7
cdf7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odec
cdec:
sub r8, 1
and r8, 0xFFFF
odf8:
cmp byte [tape + r8], 0
jz cdf8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odf8
cdf8:
add r8, 1
and r8, 0xFFFF
odf9:
cmp byte [tape + r8], 0
jz cdf9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
odfa:
cmp byte [tape + r8], 0
jz cdfa
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odfa
cdfa:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odf9
cdf9:
add r8, 382
and r8, 0xFFFF
push 1
push 383
call ms
sub r8, 383
and r8, 0xFFFF
odfb:
cmp byte [tape + r8], 0
jz cdfb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odfb
cdfb:
add r8, 1
and r8, 0xFFFF
odfc:
cmp byte [tape + r8], 0
jz cdfc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
odfd:
cmp byte [tape + r8], 0
jz cdfd
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odfd
cdfd:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
odfe:
cmp byte [tape + r8], 0
jz cdfe
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odfe
cdfe:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
odff:
cmp byte [tape + r8], 0
jz cdff
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp odff
cdff:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oe00:
cmp byte [tape + r8], 0
jz ce00
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe00
ce00:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oe01:
cmp byte [tape + r8], 0
jz ce01
add r8, 375
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 384
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oe01
ce01:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp odfc
cdfc:
sub r8, 1
and r8, 0xFFFF
oe02:
cmp byte [tape + r8], 0
jz ce02
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe02
ce02:
add r8, 1
and r8, 0xFFFF
oe03:
cmp byte [tape + r8], 0
jz ce03
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
oe04:
cmp byte [tape + r8], 0
jz ce04
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oe04
ce04:
add r8, 1
and r8, 0xFFFF
oe05:
cmp byte [tape + r8], 0
jz ce05
sub r8, 3
and r8, 0xFFFF
oe06:
cmp byte [tape + r8], 0
jz ce06
sub r8, 2
and r8, 0xFFFF
jmp oe06
ce06:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe07:
cmp byte [tape + r8], 0
jz ce07
add r8, 2
and r8, 0xFFFF
jmp oe07
ce07:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe05
ce05:
sub r8, 3
and r8, 0xFFFF
oe08:
cmp byte [tape + r8], 0
jz ce08
sub r8, 2
and r8, 0xFFFF
jmp oe08
ce08:
add r8, 1
and r8, 0xFFFF
oe09:
cmp byte [tape + r8], 0
jz ce09
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe09
ce09:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oe0a:
cmp byte [tape + r8], 0
jz ce0a
add r8, 2
and r8, 0xFFFF
jmp oe0a
ce0a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oe0b:
cmp byte [tape + r8], 0
jz ce0b
sub r8, 2
and r8, 0xFFFF
jmp oe0b
ce0b:
add r8, 1
and r8, 0xFFFF
oe0c:
cmp byte [tape + r8], 0
jz ce0c
add r8, 1
and r8, 0xFFFF
oe0d:
cmp byte [tape + r8], 0
jz ce0d
add r8, 2
and r8, 0xFFFF
jmp oe0d
ce0d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oe0e:
cmp byte [tape + r8], 0
jz ce0e
sub r8, 2
and r8, 0xFFFF
jmp oe0e
ce0e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe0c
ce0c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
oe0f:
cmp byte [tape + r8], 0
jz ce0f
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe0f
ce0f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe10:
cmp byte [tape + r8], 0
jz ce10
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe10
ce10:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oe11:
cmp byte [tape + r8], 0
jz ce11
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oe11
ce11:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
oe12:
cmp byte [tape + r8], 0
jz ce12
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oe12
ce12:
add r8, 1
and r8, 0xFFFF
oe13:
cmp byte [tape + r8], 0
jz ce13
sub r8, 3
and r8, 0xFFFF
oe14:
cmp byte [tape + r8], 0
jz ce14
sub r8, 2
and r8, 0xFFFF
jmp oe14
ce14:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe15:
cmp byte [tape + r8], 0
jz ce15
add r8, 2
and r8, 0xFFFF
jmp oe15
ce15:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe13
ce13:
sub r8, 3
and r8, 0xFFFF
oe16:
cmp byte [tape + r8], 0
jz ce16
sub r8, 2
and r8, 0xFFFF
jmp oe16
ce16:
add r8, 1
and r8, 0xFFFF
oe17:
cmp byte [tape + r8], 0
jz ce17
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe17
ce17:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oe18:
cmp byte [tape + r8], 0
jz ce18
add r8, 2
and r8, 0xFFFF
jmp oe18
ce18:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oe19:
cmp byte [tape + r8], 0
jz ce19
sub r8, 2
and r8, 0xFFFF
jmp oe19
ce19:
add r8, 1
and r8, 0xFFFF
oe1a:
cmp byte [tape + r8], 0
jz ce1a
add r8, 1
and r8, 0xFFFF
oe1b:
cmp byte [tape + r8], 0
jz ce1b
add r8, 2
and r8, 0xFFFF
jmp oe1b
ce1b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oe1c:
cmp byte [tape + r8], 0
jz ce1c
sub r8, 2
and r8, 0xFFFF
jmp oe1c
ce1c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe1a
ce1a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe1d:
cmp byte [tape + r8], 0
jz ce1d
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe1d
ce1d:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oe1e:
cmp byte [tape + r8], 0
jz ce1e
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe1e
ce1e:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oe1f:
cmp byte [tape + r8], 0
jz ce1f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe1f
ce1f:
add r8, 8
and r8, 0xFFFF
oe20:
cmp byte [tape + r8], 0
jz ce20
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe20
ce20:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oe21:
cmp byte [tape + r8], 0
jz ce21
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe21
ce21:
add r8, 8
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
oe22:
cmp byte [tape + r8], 0
jz ce22
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe22
ce22:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
add r8, 1
and r8, 0xFFFF
oe23:
cmp byte [tape + r8], 0
jz ce23
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe23
ce23:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oe24:
cmp byte [tape + r8], 0
jz ce24
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe24
ce24:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oe25:
cmp byte [tape + r8], 0
jz ce25
call z
add r8, 8
and r8, 0xFFFF
oe26:
cmp byte [tape + r8], 0
jz ce26
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe26
ce26:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oe27:
cmp byte [tape + r8], 0
jz ce27
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe27
ce27:
jmp oe25
ce25:
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
oe28:
cmp byte [tape + r8], 0
jz ce28
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oe28
ce28:
add r8, 1
and r8, 0xFFFF
oe29:
cmp byte [tape + r8], 0
jz ce29
sub r8, 3
and r8, 0xFFFF
oe2a:
cmp byte [tape + r8], 0
jz ce2a
sub r8, 2
and r8, 0xFFFF
jmp oe2a
ce2a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe2b:
cmp byte [tape + r8], 0
jz ce2b
add r8, 2
and r8, 0xFFFF
jmp oe2b
ce2b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe29
ce29:
sub r8, 3
and r8, 0xFFFF
oe2c:
cmp byte [tape + r8], 0
jz ce2c
sub r8, 2
and r8, 0xFFFF
jmp oe2c
ce2c:
add r8, 1
and r8, 0xFFFF
oe2d:
cmp byte [tape + r8], 0
jz ce2d
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe2d
ce2d:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oe2e:
cmp byte [tape + r8], 0
jz ce2e
add r8, 2
and r8, 0xFFFF
jmp oe2e
ce2e:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oe2f:
cmp byte [tape + r8], 0
jz ce2f
sub r8, 2
and r8, 0xFFFF
jmp oe2f
ce2f:
add r8, 1
and r8, 0xFFFF
oe30:
cmp byte [tape + r8], 0
jz ce30
add r8, 1
and r8, 0xFFFF
oe31:
cmp byte [tape + r8], 0
jz ce31
add r8, 2
and r8, 0xFFFF
jmp oe31
ce31:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oe32:
cmp byte [tape + r8], 0
jz ce32
sub r8, 2
and r8, 0xFFFF
jmp oe32
ce32:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe30
ce30:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe33:
cmp byte [tape + r8], 0
jz ce33
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe33
ce33:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oe34:
cmp byte [tape + r8], 0
jz ce34
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe34
ce34:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
oe35:
cmp byte [tape + r8], 0
jz ce35
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oe35
ce35:
add r8, 1
and r8, 0xFFFF
oe36:
cmp byte [tape + r8], 0
jz ce36
sub r8, 3
and r8, 0xFFFF
oe37:
cmp byte [tape + r8], 0
jz ce37
sub r8, 2
and r8, 0xFFFF
jmp oe37
ce37:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe38:
cmp byte [tape + r8], 0
jz ce38
add r8, 2
and r8, 0xFFFF
jmp oe38
ce38:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe36
ce36:
sub r8, 3
and r8, 0xFFFF
oe39:
cmp byte [tape + r8], 0
jz ce39
sub r8, 2
and r8, 0xFFFF
jmp oe39
ce39:
add r8, 1
and r8, 0xFFFF
oe3a:
cmp byte [tape + r8], 0
jz ce3a
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe3a
ce3a:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oe3b:
cmp byte [tape + r8], 0
jz ce3b
add r8, 2
and r8, 0xFFFF
jmp oe3b
ce3b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oe3c:
cmp byte [tape + r8], 0
jz ce3c
sub r8, 2
and r8, 0xFFFF
jmp oe3c
ce3c:
add r8, 1
and r8, 0xFFFF
oe3d:
cmp byte [tape + r8], 0
jz ce3d
add r8, 1
and r8, 0xFFFF
oe3e:
cmp byte [tape + r8], 0
jz ce3e
add r8, 2
and r8, 0xFFFF
jmp oe3e
ce3e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oe3f:
cmp byte [tape + r8], 0
jz ce3f
sub r8, 2
and r8, 0xFFFF
jmp oe3f
ce3f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe3d
ce3d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 34
and r8, 0xFFFF
call z
add r8, 25
and r8, 0xFFFF
oe40:
cmp byte [tape + r8], 0
jz ce40
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe40
ce40:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe41:
cmp byte [tape + r8], 0
jz ce41
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe41
ce41:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
oe42:
cmp byte [tape + r8], 0
jz ce42
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe42
ce42:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
oe43:
cmp byte [tape + r8], 0
jz ce43
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe43
ce43:
add r8, 9
and r8, 0xFFFF
oe44:
cmp byte [tape + r8], 0
jz ce44
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe44
ce44:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
oe45:
cmp byte [tape + r8], 0
jz ce45
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe45
ce45:
add r8, 9
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
oe46:
cmp byte [tape + r8], 0
jz ce46
sub r8, 15
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe46
ce46:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe47:
cmp byte [tape + r8], 0
jz ce47
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe47
ce47:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
oe48:
cmp byte [tape + r8], 0
jz ce48
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe48
ce48:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
oe49:
cmp byte [tape + r8], 0
jz ce49
call z
add r8, 9
and r8, 0xFFFF
oe4a:
cmp byte [tape + r8], 0
jz ce4a
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe4a
ce4a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
oe4b:
cmp byte [tape + r8], 0
jz ce4b
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe4b
ce4b:
jmp oe49
ce49:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oe4c:
cmp byte [tape + r8], 0
jz ce4c
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe4c
ce4c:
add r8, 8
and r8, 0xFFFF
oe4d:
cmp byte [tape + r8], 0
jz ce4d
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe4d
ce4d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oe4e:
cmp byte [tape + r8], 0
jz ce4e
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe4e
ce4e:
add r8, 8
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
oe4f:
cmp byte [tape + r8], 0
jz ce4f
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe4f
ce4f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe50:
cmp byte [tape + r8], 0
jz ce50
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe50
ce50:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oe51:
cmp byte [tape + r8], 0
jz ce51
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe51
ce51:
add r8, 8
and r8, 0xFFFF
call z
add r8, 31
and r8, 0xFFFF
oe52:
cmp byte [tape + r8], 0
jz ce52
sub r8, 31
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe52
ce52:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe53:
cmp byte [tape + r8], 0
jz ce53
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe53
ce53:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
oe54:
cmp byte [tape + r8], 0
jz ce54
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe54
ce54:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
oe55:
cmp byte [tape + r8], 0
jz ce55
call z
add r8, 9
and r8, 0xFFFF
oe56:
cmp byte [tape + r8], 0
jz ce56
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe56
ce56:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
oe57:
cmp byte [tape + r8], 0
jz ce57
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe57
ce57:
jmp oe55
ce55:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oe58:
cmp byte [tape + r8], 0
jz ce58
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe58
ce58:
add r8, 8
and r8, 0xFFFF
oe59:
cmp byte [tape + r8], 0
jz ce59
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe59
ce59:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oe5a:
cmp byte [tape + r8], 0
jz ce5a
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe5a
ce5a:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oe5b:
cmp byte [tape + r8], 0
jz ce5b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe5b
ce5b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oe5c:
cmp byte [tape + r8], 0
jz ce5c
add r8, 376
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 385
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oe5c
ce5c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe03
ce03:
sub r8, 1
and r8, 0xFFFF
oe5d:
cmp byte [tape + r8], 0
jz ce5d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe5d
ce5d:
add r8, 1
and r8, 0xFFFF
oe5e:
cmp byte [tape + r8], 0
jz ce5e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oe5f:
cmp byte [tape + r8], 0
jz ce5f
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe5f
ce5f:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe60:
cmp byte [tape + r8], 0
jz ce60
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe60
ce60:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oe61:
cmp byte [tape + r8], 0
jz ce61
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oe61
ce61:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oe62:
cmp byte [tape + r8], 0
jz ce62
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe62
ce62:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oe63:
cmp byte [tape + r8], 0
jz ce63
add r8, 377
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 386
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oe63
ce63:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe5e
ce5e:
sub r8, 1
and r8, 0xFFFF
oe64:
cmp byte [tape + r8], 0
jz ce64
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe64
ce64:
add r8, 1
and r8, 0xFFFF
oe65:
cmp byte [tape + r8], 0
jz ce65
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
oe66:
cmp byte [tape + r8], 0
jz ce66
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe66
ce66:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 385
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 387
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe65
ce65:
add r8, 385
and r8, 0xFFFF
push 1
push 386
call ms
sub r8, 386
and r8, 0xFFFF
oe67:
cmp byte [tape + r8], 0
jz ce67
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe67
ce67:
add r8, 1
and r8, 0xFFFF
oe68:
cmp byte [tape + r8], 0
jz ce68
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oe69:
cmp byte [tape + r8], 0
jz ce69
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe69
ce69:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe6a:
cmp byte [tape + r8], 0
jz ce6a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe6a
ce6a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oe6b:
cmp byte [tape + r8], 0
jz ce6b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oe6b
ce6b:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
oe6c:
cmp byte [tape + r8], 0
jz ce6c
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oe6c
ce6c:
add r8, 1
and r8, 0xFFFF
oe6d:
cmp byte [tape + r8], 0
jz ce6d
sub r8, 3
and r8, 0xFFFF
oe6e:
cmp byte [tape + r8], 0
jz ce6e
sub r8, 2
and r8, 0xFFFF
jmp oe6e
ce6e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe6f:
cmp byte [tape + r8], 0
jz ce6f
add r8, 2
and r8, 0xFFFF
jmp oe6f
ce6f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe6d
ce6d:
sub r8, 3
and r8, 0xFFFF
oe70:
cmp byte [tape + r8], 0
jz ce70
sub r8, 2
and r8, 0xFFFF
jmp oe70
ce70:
add r8, 1
and r8, 0xFFFF
oe71:
cmp byte [tape + r8], 0
jz ce71
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe71
ce71:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oe72:
cmp byte [tape + r8], 0
jz ce72
add r8, 2
and r8, 0xFFFF
jmp oe72
ce72:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oe73:
cmp byte [tape + r8], 0
jz ce73
sub r8, 2
and r8, 0xFFFF
jmp oe73
ce73:
add r8, 1
and r8, 0xFFFF
oe74:
cmp byte [tape + r8], 0
jz ce74
add r8, 1
and r8, 0xFFFF
oe75:
cmp byte [tape + r8], 0
jz ce75
add r8, 2
and r8, 0xFFFF
jmp oe75
ce75:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oe76:
cmp byte [tape + r8], 0
jz ce76
sub r8, 2
and r8, 0xFFFF
jmp oe76
ce76:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe74
ce74:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe77:
cmp byte [tape + r8], 0
jz ce77
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe77
ce77:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oe78:
cmp byte [tape + r8], 0
jz ce78
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe78
ce78:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
oe79:
cmp byte [tape + r8], 0
jz ce79
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oe79
ce79:
add r8, 1
and r8, 0xFFFF
oe7a:
cmp byte [tape + r8], 0
jz ce7a
sub r8, 3
and r8, 0xFFFF
oe7b:
cmp byte [tape + r8], 0
jz ce7b
sub r8, 2
and r8, 0xFFFF
jmp oe7b
ce7b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe7c:
cmp byte [tape + r8], 0
jz ce7c
add r8, 2
and r8, 0xFFFF
jmp oe7c
ce7c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe7a
ce7a:
sub r8, 3
and r8, 0xFFFF
oe7d:
cmp byte [tape + r8], 0
jz ce7d
sub r8, 2
and r8, 0xFFFF
jmp oe7d
ce7d:
add r8, 1
and r8, 0xFFFF
oe7e:
cmp byte [tape + r8], 0
jz ce7e
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe7e
ce7e:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oe7f:
cmp byte [tape + r8], 0
jz ce7f
add r8, 2
and r8, 0xFFFF
jmp oe7f
ce7f:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oe80:
cmp byte [tape + r8], 0
jz ce80
sub r8, 2
and r8, 0xFFFF
jmp oe80
ce80:
add r8, 1
and r8, 0xFFFF
oe81:
cmp byte [tape + r8], 0
jz ce81
add r8, 1
and r8, 0xFFFF
oe82:
cmp byte [tape + r8], 0
jz ce82
add r8, 2
and r8, 0xFFFF
jmp oe82
ce82:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oe83:
cmp byte [tape + r8], 0
jz ce83
sub r8, 2
and r8, 0xFFFF
jmp oe83
ce83:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe81
ce81:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 34
and r8, 0xFFFF
call z
add r8, 25
and r8, 0xFFFF
oe84:
cmp byte [tape + r8], 0
jz ce84
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe84
ce84:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe85:
cmp byte [tape + r8], 0
jz ce85
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe85
ce85:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
oe86:
cmp byte [tape + r8], 0
jz ce86
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe86
ce86:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
oe87:
cmp byte [tape + r8], 0
jz ce87
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe87
ce87:
add r8, 9
and r8, 0xFFFF
oe88:
cmp byte [tape + r8], 0
jz ce88
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe88
ce88:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
oe89:
cmp byte [tape + r8], 0
jz ce89
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp oe89
ce89:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oe8a:
cmp byte [tape + r8], 0
jz ce8a
call z
add r8, 8
and r8, 0xFFFF
oe8b:
cmp byte [tape + r8], 0
jz ce8b
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe8b
ce8b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oe8c:
cmp byte [tape + r8], 0
jz ce8c
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oe8c
ce8c:
jmp oe8a
ce8a:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oe8d:
cmp byte [tape + r8], 0
jz ce8d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe8d
ce8d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oe8e:
cmp byte [tape + r8], 0
jz ce8e
add r8, 379
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 388
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oe8e
ce8e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe68
ce68:
sub r8, 1
and r8, 0xFFFF
oe8f:
cmp byte [tape + r8], 0
jz ce8f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe8f
ce8f:
add r8, 1
and r8, 0xFFFF
oe90:
cmp byte [tape + r8], 0
jz ce90
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
oe91:
cmp byte [tape + r8], 0
jz ce91
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe91
ce91:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
oe92:
cmp byte [tape + r8], 0
jz ce92
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe92
ce92:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
oe93:
cmp byte [tape + r8], 0
jz ce93
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oe93
ce93:
add r8, 1
and r8, 0xFFFF
oe94:
cmp byte [tape + r8], 0
jz ce94
sub r8, 3
and r8, 0xFFFF
oe95:
cmp byte [tape + r8], 0
jz ce95
sub r8, 2
and r8, 0xFFFF
jmp oe95
ce95:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe96:
cmp byte [tape + r8], 0
jz ce96
add r8, 2
and r8, 0xFFFF
jmp oe96
ce96:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe94
ce94:
sub r8, 3
and r8, 0xFFFF
oe97:
cmp byte [tape + r8], 0
jz ce97
sub r8, 2
and r8, 0xFFFF
jmp oe97
ce97:
add r8, 1
and r8, 0xFFFF
oe98:
cmp byte [tape + r8], 0
jz ce98
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe98
ce98:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oe99:
cmp byte [tape + r8], 0
jz ce99
add r8, 2
and r8, 0xFFFF
jmp oe99
ce99:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oe9a:
cmp byte [tape + r8], 0
jz ce9a
sub r8, 2
and r8, 0xFFFF
jmp oe9a
ce9a:
add r8, 1
and r8, 0xFFFF
oe9b:
cmp byte [tape + r8], 0
jz ce9b
add r8, 1
and r8, 0xFFFF
oe9c:
cmp byte [tape + r8], 0
jz ce9c
add r8, 2
and r8, 0xFFFF
jmp oe9c
ce9c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oe9d:
cmp byte [tape + r8], 0
jz ce9d
sub r8, 2
and r8, 0xFFFF
jmp oe9d
ce9d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe9b
ce9b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oe9e:
cmp byte [tape + r8], 0
jz ce9e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe9e
ce9e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oe9f:
cmp byte [tape + r8], 0
jz ce9f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oe9f
ce9f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oea0:
cmp byte [tape + r8], 0
jz cea0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oea0
cea0:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oea1:
cmp byte [tape + r8], 0
jz cea1
add r8, 380
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 389
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oea1
cea1:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oe90
ce90:
sub r8, 1
and r8, 0xFFFF
oea2:
cmp byte [tape + r8], 0
jz cea2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oea2
cea2:
add r8, 1
and r8, 0xFFFF
oea3:
cmp byte [tape + r8], 0
jz cea3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
oea4:
cmp byte [tape + r8], 0
jz cea4
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oea4
cea4:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
oea5:
cmp byte [tape + r8], 0
jz cea5
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oea5
cea5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oea3
cea3:
add r8, 388
and r8, 0xFFFF
push 1
push 389
call ms
sub r8, 389
and r8, 0xFFFF
oea6:
cmp byte [tape + r8], 0
jz cea6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oea6
cea6:
add r8, 1
and r8, 0xFFFF
oea7:
cmp byte [tape + r8], 0
jz cea7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
oea8:
cmp byte [tape + r8], 0
jz cea8
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oea8
cea8:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oea9:
cmp byte [tape + r8], 0
jz cea9
sub r8, 2
and r8, 0xFFFF
jmp oea9
cea9:
add r8, 1
and r8, 0xFFFF
oeaa:
cmp byte [tape + r8], 0
jz ceaa
add r8, 1
and r8, 0xFFFF
oeab:
cmp byte [tape + r8], 0
jz ceab
add r8, 2
and r8, 0xFFFF
jmp oeab
ceab:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oeac:
cmp byte [tape + r8], 0
jz ceac
sub r8, 2
and r8, 0xFFFF
jmp oeac
ceac:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeaa
ceaa:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 344
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 390
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oea7
cea7:
add r8, 387
and r8, 0xFFFF
push 1
push 388
call ms
sub r8, 388
and r8, 0xFFFF
oead:
cmp byte [tape + r8], 0
jz cead
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oead
cead:
add r8, 1
and r8, 0xFFFF
oeae:
cmp byte [tape + r8], 0
jz ceae
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
oeaf:
cmp byte [tape + r8], 0
jz ceaf
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeaf
ceaf:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 1
and r8, 0xFFFF
oeb0:
cmp byte [tape + r8], 0
jz ceb0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb0
ceb0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oeb1:
cmp byte [tape + r8], 0
jz ceb1
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oeb1
ceb1:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oeb2:
cmp byte [tape + r8], 0
jz ceb2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb2
ceb2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oeb3:
cmp byte [tape + r8], 0
jz ceb3
add r8, 382
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 391
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oeb3
ceb3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeae
ceae:
sub r8, 1
and r8, 0xFFFF
oeb4:
cmp byte [tape + r8], 0
jz ceb4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb4
ceb4:
add r8, 1
and r8, 0xFFFF
oeb5:
cmp byte [tape + r8], 0
jz ceb5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
oeb6:
cmp byte [tape + r8], 0
jz ceb6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb6
ceb6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 390
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 392
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb5
ceb5:
add r8, 390
and r8, 0xFFFF
push 1
push 391
call ms
sub r8, 391
and r8, 0xFFFF
oeb7:
cmp byte [tape + r8], 0
jz ceb7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb7
ceb7:
add r8, 1
and r8, 0xFFFF
oeb8:
cmp byte [tape + r8], 0
jz ceb8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb8
ceb8:
add r8, 391
and r8, 0xFFFF
push 1
push 392
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 390
call ms
sub r8, 3
and r8, 0xFFFF
push 1
push 387
call ms
sub r8, 387
and r8, 0xFFFF
oeb9:
cmp byte [tape + r8], 0
jz ceb9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeb9
ceb9:
add r8, 1
and r8, 0xFFFF
oeba:
cmp byte [tape + r8], 0
jz ceba
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 384
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 393
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeba
ceba:
add r8, 384
and r8, 0xFFFF
push 1
push 385
call ms
sub r8, 385
and r8, 0xFFFF
oebb:
cmp byte [tape + r8], 0
jz cebb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oebb
cebb:
add r8, 1
and r8, 0xFFFF
oebc:
cmp byte [tape + r8], 0
jz cebc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oebc
cebc:
add r8, 392
and r8, 0xFFFF
push 1
push 393
call ms
sub r8, 9
and r8, 0xFFFF
push 1
push 384
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 382
call ms
sub r8, 382
and r8, 0xFFFF
oebd:
cmp byte [tape + r8], 0
jz cebd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oebd
cebd:
add r8, 1
and r8, 0xFFFF
oebe:
cmp byte [tape + r8], 0
jz cebe
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
oebf:
cmp byte [tape + r8], 0
jz cebf
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oebf
cebf:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oec0:
cmp byte [tape + r8], 0
jz cec0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oec0
cec0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oec1:
cmp byte [tape + r8], 0
jz cec1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oec1
cec1:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oec2:
cmp byte [tape + r8], 0
jz cec2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oec2
cec2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oec3:
cmp byte [tape + r8], 0
jz cec3
add r8, 385
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 394
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oec3
cec3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oebe
cebe:
sub r8, 1
and r8, 0xFFFF
oec4:
cmp byte [tape + r8], 0
jz cec4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oec4
cec4:
add r8, 1
and r8, 0xFFFF
oec5:
cmp byte [tape + r8], 0
jz cec5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
oec6:
cmp byte [tape + r8], 0
jz cec6
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oec6
cec6:
add r8, 1
and r8, 0xFFFF
oec7:
cmp byte [tape + r8], 0
jz cec7
sub r8, 3
and r8, 0xFFFF
oec8:
cmp byte [tape + r8], 0
jz cec8
sub r8, 2
and r8, 0xFFFF
jmp oec8
cec8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oec9:
cmp byte [tape + r8], 0
jz cec9
add r8, 2
and r8, 0xFFFF
jmp oec9
cec9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oec7
cec7:
sub r8, 3
and r8, 0xFFFF
oeca:
cmp byte [tape + r8], 0
jz ceca
sub r8, 2
and r8, 0xFFFF
jmp oeca
ceca:
add r8, 1
and r8, 0xFFFF
oecb:
cmp byte [tape + r8], 0
jz cecb
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oecb
cecb:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oecc:
cmp byte [tape + r8], 0
jz cecc
add r8, 2
and r8, 0xFFFF
jmp oecc
cecc:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oecd:
cmp byte [tape + r8], 0
jz cecd
sub r8, 2
and r8, 0xFFFF
jmp oecd
cecd:
add r8, 1
and r8, 0xFFFF
oece:
cmp byte [tape + r8], 0
jz cece
add r8, 1
and r8, 0xFFFF
oecf:
cmp byte [tape + r8], 0
jz cecf
add r8, 2
and r8, 0xFFFF
jmp oecf
cecf:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oed0:
cmp byte [tape + r8], 0
jz ced0
sub r8, 2
and r8, 0xFFFF
jmp oed0
ced0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oece
cece:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oed1:
cmp byte [tape + r8], 0
jz ced1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oed1
ced1:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oed2:
cmp byte [tape + r8], 0
jz ced2
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oed2
ced2:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
oed3:
cmp byte [tape + r8], 0
jz ced3
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp oed3
ced3:
add r8, 1
and r8, 0xFFFF
oed4:
cmp byte [tape + r8], 0
jz ced4
sub r8, 3
and r8, 0xFFFF
oed5:
cmp byte [tape + r8], 0
jz ced5
sub r8, 2
and r8, 0xFFFF
jmp oed5
ced5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oed6:
cmp byte [tape + r8], 0
jz ced6
add r8, 2
and r8, 0xFFFF
jmp oed6
ced6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oed4
ced4:
sub r8, 3
and r8, 0xFFFF
oed7:
cmp byte [tape + r8], 0
jz ced7
sub r8, 2
and r8, 0xFFFF
jmp oed7
ced7:
add r8, 1
and r8, 0xFFFF
oed8:
cmp byte [tape + r8], 0
jz ced8
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oed8
ced8:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
oed9:
cmp byte [tape + r8], 0
jz ced9
add r8, 2
and r8, 0xFFFF
jmp oed9
ced9:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
oeda:
cmp byte [tape + r8], 0
jz ceda
sub r8, 2
and r8, 0xFFFF
jmp oeda
ceda:
add r8, 1
and r8, 0xFFFF
oedb:
cmp byte [tape + r8], 0
jz cedb
add r8, 1
and r8, 0xFFFF
oedc:
cmp byte [tape + r8], 0
jz cedc
add r8, 2
and r8, 0xFFFF
jmp oedc
cedc:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
oedd:
cmp byte [tape + r8], 0
jz cedd
sub r8, 2
and r8, 0xFFFF
jmp oedd
cedd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oedb
cedb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 35
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
oede:
cmp byte [tape + r8], 0
jz cede
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oede
cede:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oedf:
cmp byte [tape + r8], 0
jz cedf
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oedf
cedf:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oee0:
cmp byte [tape + r8], 0
jz cee0
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oee0
cee0:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oee1:
cmp byte [tape + r8], 0
jz cee1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oee1
cee1:
add r8, 8
and r8, 0xFFFF
oee2:
cmp byte [tape + r8], 0
jz cee2
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oee2
cee2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oee3:
cmp byte [tape + r8], 0
jz cee3
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oee3
cee3:
add r8, 8
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
oee4:
cmp byte [tape + r8], 0
jz cee4
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oee4
cee4:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oee5:
cmp byte [tape + r8], 0
jz cee5
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oee5
cee5:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
oee6:
cmp byte [tape + r8], 0
jz cee6
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oee6
cee6:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
oee7:
cmp byte [tape + r8], 0
jz cee7
call z
add r8, 8
and r8, 0xFFFF
oee8:
cmp byte [tape + r8], 0
jz cee8
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oee8
cee8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
oee9:
cmp byte [tape + r8], 0
jz cee9
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp oee9
cee9:
jmp oee7
cee7:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oeea:
cmp byte [tape + r8], 0
jz ceea
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeea
ceea:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oeeb:
cmp byte [tape + r8], 0
jz ceeb
add r8, 386
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 395
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oeeb
ceeb:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oec5
cec5:
sub r8, 1
and r8, 0xFFFF
oeec:
cmp byte [tape + r8], 0
jz ceec
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeec
ceec:
add r8, 1
and r8, 0xFFFF
oeed:
cmp byte [tape + r8], 0
jz ceed
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
oeee:
cmp byte [tape + r8], 0
jz ceee
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeee
ceee:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 394
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 396
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeed
ceed:
add r8, 394
and r8, 0xFFFF
push 1
push 395
call ms
sub r8, 395
and r8, 0xFFFF
oeef:
cmp byte [tape + r8], 0
jz ceef
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oeef
ceef:
add r8, 1
and r8, 0xFFFF
oef0:
cmp byte [tape + r8], 0
jz cef0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
oef1:
cmp byte [tape + r8], 0
jz cef1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef1
cef1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef0
cef0:
add r8, 395
and r8, 0xFFFF
push 1
push 396
call ms
sub r8, 396
and r8, 0xFFFF
oef2:
cmp byte [tape + r8], 0
jz cef2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef2
cef2:
add r8, 1
and r8, 0xFFFF
oef3:
cmp byte [tape + r8], 0
jz cef3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef3
cef3:
add r8, 393
and r8, 0xFFFF
push 1
push 394
call ms
sub r8, 37
and r8, 0xFFFF
push 1
push 357
call ms
sub r8, 357
and r8, 0xFFFF
oef4:
cmp byte [tape + r8], 0
jz cef4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef4
cef4:
add r8, 1
and r8, 0xFFFF
oef5:
cmp byte [tape + r8], 0
jz cef5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
oef6:
cmp byte [tape + r8], 0
jz cef6
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef6
cef6:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oef7:
cmp byte [tape + r8], 0
jz cef7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef7
cef7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oef8:
cmp byte [tape + r8], 0
jz cef8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oef8
cef8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
oef9:
cmp byte [tape + r8], 0
jz cef9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef9
cef9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
oefa:
cmp byte [tape + r8], 0
jz cefa
add r8, 388
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 397
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp oefa
cefa:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oef5
cef5:
sub r8, 1
and r8, 0xFFFF
oefb:
cmp byte [tape + r8], 0
jz cefb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oefb
cefb:
add r8, 1
and r8, 0xFFFF
oefc:
cmp byte [tape + r8], 0
jz cefc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
oefd:
cmp byte [tape + r8], 0
jz cefd
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oefd
cefd:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
oefe:
cmp byte [tape + r8], 0
jz cefe
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oefe
cefe:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
oeff:
cmp byte [tape + r8], 0
jz ceff
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp oeff
ceff:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of00:
cmp byte [tape + r8], 0
jz cf00
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of00
cf00:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of01:
cmp byte [tape + r8], 0
jz cf01
add r8, 389
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 398
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of01
cf01:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp oefc
cefc:
sub r8, 1
and r8, 0xFFFF
of02:
cmp byte [tape + r8], 0
jz cf02
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of02
cf02:
add r8, 1
and r8, 0xFFFF
of03:
cmp byte [tape + r8], 0
jz cf03
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
of04:
cmp byte [tape + r8], 0
jz cf04
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp of04
cf04:
add r8, 1
and r8, 0xFFFF
of05:
cmp byte [tape + r8], 0
jz cf05
sub r8, 3
and r8, 0xFFFF
of06:
cmp byte [tape + r8], 0
jz cf06
sub r8, 2
and r8, 0xFFFF
jmp of06
cf06:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of07:
cmp byte [tape + r8], 0
jz cf07
add r8, 2
and r8, 0xFFFF
jmp of07
cf07:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of05
cf05:
sub r8, 3
and r8, 0xFFFF
of08:
cmp byte [tape + r8], 0
jz cf08
sub r8, 2
and r8, 0xFFFF
jmp of08
cf08:
add r8, 1
and r8, 0xFFFF
of09:
cmp byte [tape + r8], 0
jz cf09
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of09
cf09:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
of0a:
cmp byte [tape + r8], 0
jz cf0a
add r8, 2
and r8, 0xFFFF
jmp of0a
cf0a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
of0b:
cmp byte [tape + r8], 0
jz cf0b
sub r8, 2
and r8, 0xFFFF
jmp of0b
cf0b:
add r8, 1
and r8, 0xFFFF
of0c:
cmp byte [tape + r8], 0
jz cf0c
add r8, 1
and r8, 0xFFFF
of0d:
cmp byte [tape + r8], 0
jz cf0d
add r8, 2
and r8, 0xFFFF
jmp of0d
cf0d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
of0e:
cmp byte [tape + r8], 0
jz cf0e
sub r8, 2
and r8, 0xFFFF
jmp of0e
cf0e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of0c
cf0c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
of0f:
cmp byte [tape + r8], 0
jz cf0f
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of0f
cf0f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of10:
cmp byte [tape + r8], 0
jz cf10
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of10
cf10:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of11:
cmp byte [tape + r8], 0
jz cf11
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of11
cf11:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
of12:
cmp byte [tape + r8], 0
jz cf12
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp of12
cf12:
add r8, 1
and r8, 0xFFFF
of13:
cmp byte [tape + r8], 0
jz cf13
sub r8, 3
and r8, 0xFFFF
of14:
cmp byte [tape + r8], 0
jz cf14
sub r8, 2
and r8, 0xFFFF
jmp of14
cf14:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of15:
cmp byte [tape + r8], 0
jz cf15
add r8, 2
and r8, 0xFFFF
jmp of15
cf15:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of13
cf13:
sub r8, 3
and r8, 0xFFFF
of16:
cmp byte [tape + r8], 0
jz cf16
sub r8, 2
and r8, 0xFFFF
jmp of16
cf16:
add r8, 1
and r8, 0xFFFF
of17:
cmp byte [tape + r8], 0
jz cf17
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of17
cf17:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
of18:
cmp byte [tape + r8], 0
jz cf18
add r8, 2
and r8, 0xFFFF
jmp of18
cf18:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
of19:
cmp byte [tape + r8], 0
jz cf19
sub r8, 2
and r8, 0xFFFF
jmp of19
cf19:
add r8, 1
and r8, 0xFFFF
of1a:
cmp byte [tape + r8], 0
jz cf1a
add r8, 1
and r8, 0xFFFF
of1b:
cmp byte [tape + r8], 0
jz cf1b
add r8, 2
and r8, 0xFFFF
jmp of1b
cf1b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
of1c:
cmp byte [tape + r8], 0
jz cf1c
sub r8, 2
and r8, 0xFFFF
jmp of1c
cf1c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of1a
cf1a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of1d:
cmp byte [tape + r8], 0
jz cf1d
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of1d
cf1d:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
of1e:
cmp byte [tape + r8], 0
jz cf1e
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of1e
cf1e:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
of1f:
cmp byte [tape + r8], 0
jz cf1f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of1f
cf1f:
add r8, 8
and r8, 0xFFFF
of20:
cmp byte [tape + r8], 0
jz cf20
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of20
cf20:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
of21:
cmp byte [tape + r8], 0
jz cf21
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of21
cf21:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of22:
cmp byte [tape + r8], 0
jz cf22
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of22
cf22:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of23:
cmp byte [tape + r8], 0
jz cf23
add r8, 390
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 399
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of23
cf23:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of03
cf03:
sub r8, 1
and r8, 0xFFFF
of24:
cmp byte [tape + r8], 0
jz cf24
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of24
cf24:
add r8, 1
and r8, 0xFFFF
of25:
cmp byte [tape + r8], 0
jz cf25
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
of26:
cmp byte [tape + r8], 0
jz cf26
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of26
cf26:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of27:
cmp byte [tape + r8], 0
jz cf27
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of27
cf27:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of28:
cmp byte [tape + r8], 0
jz cf28
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of28
cf28:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of29:
cmp byte [tape + r8], 0
jz cf29
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of29
cf29:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of2a:
cmp byte [tape + r8], 0
jz cf2a
add r8, 391
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 400
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of2a
cf2a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of25
cf25:
sub r8, 1
and r8, 0xFFFF
of2b:
cmp byte [tape + r8], 0
jz cf2b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of2b
cf2b:
add r8, 1
and r8, 0xFFFF
of2c:
cmp byte [tape + r8], 0
jz cf2c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
of2d:
cmp byte [tape + r8], 0
jz cf2d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of2d
cf2d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
of2e:
cmp byte [tape + r8], 0
jz cf2e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of2e
cf2e:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
add r8, 392
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 401
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of2c
cf2c:
add r8, 399
and r8, 0xFFFF
push 1
push 400
call ms
sub r8, 400
and r8, 0xFFFF
of2f:
cmp byte [tape + r8], 0
jz cf2f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of2f
cf2f:
add r8, 1
and r8, 0xFFFF
of30:
cmp byte [tape + r8], 0
jz cf30
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
of31:
cmp byte [tape + r8], 0
jz cf31
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of31
cf31:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of30
cf30:
add r8, 400
and r8, 0xFFFF
push 1
push 401
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 399
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 398
call ms
sub r8, 398
and r8, 0xFFFF
of32:
cmp byte [tape + r8], 0
jz cf32
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of32
cf32:
add r8, 1
and r8, 0xFFFF
of33:
cmp byte [tape + r8], 0
jz cf33
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
of34:
cmp byte [tape + r8], 0
jz cf34
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of34
cf34:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of35:
cmp byte [tape + r8], 0
jz cf35
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of35
cf35:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of36:
cmp byte [tape + r8], 0
jz cf36
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of36
cf36:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of37:
cmp byte [tape + r8], 0
jz cf37
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of37
cf37:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of38:
cmp byte [tape + r8], 0
jz cf38
add r8, 393
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 402
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of38
cf38:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of33
cf33:
sub r8, 1
and r8, 0xFFFF
of39:
cmp byte [tape + r8], 0
jz cf39
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of39
cf39:
add r8, 1
and r8, 0xFFFF
of3a:
cmp byte [tape + r8], 0
jz cf3a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
of3b:
cmp byte [tape + r8], 0
jz cf3b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp of3b
cf3b:
add r8, 1
and r8, 0xFFFF
of3c:
cmp byte [tape + r8], 0
jz cf3c
sub r8, 3
and r8, 0xFFFF
of3d:
cmp byte [tape + r8], 0
jz cf3d
sub r8, 2
and r8, 0xFFFF
jmp of3d
cf3d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of3e:
cmp byte [tape + r8], 0
jz cf3e
add r8, 2
and r8, 0xFFFF
jmp of3e
cf3e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of3c
cf3c:
sub r8, 3
and r8, 0xFFFF
of3f:
cmp byte [tape + r8], 0
jz cf3f
sub r8, 2
and r8, 0xFFFF
jmp of3f
cf3f:
add r8, 1
and r8, 0xFFFF
of40:
cmp byte [tape + r8], 0
jz cf40
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of40
cf40:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
of41:
cmp byte [tape + r8], 0
jz cf41
add r8, 2
and r8, 0xFFFF
jmp of41
cf41:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
of42:
cmp byte [tape + r8], 0
jz cf42
sub r8, 2
and r8, 0xFFFF
jmp of42
cf42:
add r8, 1
and r8, 0xFFFF
of43:
cmp byte [tape + r8], 0
jz cf43
add r8, 1
and r8, 0xFFFF
of44:
cmp byte [tape + r8], 0
jz cf44
add r8, 2
and r8, 0xFFFF
jmp of44
cf44:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
of45:
cmp byte [tape + r8], 0
jz cf45
sub r8, 2
and r8, 0xFFFF
jmp of45
cf45:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of43
cf43:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
of46:
cmp byte [tape + r8], 0
jz cf46
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of46
cf46:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of47:
cmp byte [tape + r8], 0
jz cf47
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of47
cf47:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of48:
cmp byte [tape + r8], 0
jz cf48
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of48
cf48:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
of49:
cmp byte [tape + r8], 0
jz cf49
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp of49
cf49:
add r8, 1
and r8, 0xFFFF
of4a:
cmp byte [tape + r8], 0
jz cf4a
sub r8, 3
and r8, 0xFFFF
of4b:
cmp byte [tape + r8], 0
jz cf4b
sub r8, 2
and r8, 0xFFFF
jmp of4b
cf4b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of4c:
cmp byte [tape + r8], 0
jz cf4c
add r8, 2
and r8, 0xFFFF
jmp of4c
cf4c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of4a
cf4a:
sub r8, 3
and r8, 0xFFFF
of4d:
cmp byte [tape + r8], 0
jz cf4d
sub r8, 2
and r8, 0xFFFF
jmp of4d
cf4d:
add r8, 1
and r8, 0xFFFF
of4e:
cmp byte [tape + r8], 0
jz cf4e
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of4e
cf4e:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
of4f:
cmp byte [tape + r8], 0
jz cf4f
add r8, 2
and r8, 0xFFFF
jmp of4f
cf4f:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
of50:
cmp byte [tape + r8], 0
jz cf50
sub r8, 2
and r8, 0xFFFF
jmp of50
cf50:
add r8, 1
and r8, 0xFFFF
of51:
cmp byte [tape + r8], 0
jz cf51
add r8, 1
and r8, 0xFFFF
of52:
cmp byte [tape + r8], 0
jz cf52
add r8, 2
and r8, 0xFFFF
jmp of52
cf52:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
of53:
cmp byte [tape + r8], 0
jz cf53
sub r8, 2
and r8, 0xFFFF
jmp of53
cf53:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of51
cf51:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of54:
cmp byte [tape + r8], 0
jz cf54
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of54
cf54:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
of55:
cmp byte [tape + r8], 0
jz cf55
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of55
cf55:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
of56:
cmp byte [tape + r8], 0
jz cf56
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of56
cf56:
add r8, 8
and r8, 0xFFFF
of57:
cmp byte [tape + r8], 0
jz cf57
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of57
cf57:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
of58:
cmp byte [tape + r8], 0
jz cf58
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of58
cf58:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of59:
cmp byte [tape + r8], 0
jz cf59
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of59
cf59:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of5a:
cmp byte [tape + r8], 0
jz cf5a
add r8, 394
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 403
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of5a
cf5a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of3a
cf3a:
sub r8, 1
and r8, 0xFFFF
of5b:
cmp byte [tape + r8], 0
jz cf5b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of5b
cf5b:
add r8, 1
and r8, 0xFFFF
of5c:
cmp byte [tape + r8], 0
jz cf5c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
of5d:
cmp byte [tape + r8], 0
jz cf5d
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of5d
cf5d:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of5e:
cmp byte [tape + r8], 0
jz cf5e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of5e
cf5e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of5f:
cmp byte [tape + r8], 0
jz cf5f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of5f
cf5f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of60:
cmp byte [tape + r8], 0
jz cf60
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of60
cf60:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of61:
cmp byte [tape + r8], 0
jz cf61
add r8, 395
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 404
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of61
cf61:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of5c
cf5c:
sub r8, 1
and r8, 0xFFFF
of62:
cmp byte [tape + r8], 0
jz cf62
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of62
cf62:
add r8, 1
and r8, 0xFFFF
of63:
cmp byte [tape + r8], 0
jz cf63
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
of64:
cmp byte [tape + r8], 0
jz cf64
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of64
cf64:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
of65:
cmp byte [tape + r8], 0
jz cf65
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of65
cf65:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
add r8, 396
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 405
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of63
cf63:
add r8, 403
and r8, 0xFFFF
push 1
push 404
call ms
sub r8, 404
and r8, 0xFFFF
of66:
cmp byte [tape + r8], 0
jz cf66
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of66
cf66:
add r8, 1
and r8, 0xFFFF
of67:
cmp byte [tape + r8], 0
jz cf67
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
of68:
cmp byte [tape + r8], 0
jz cf68
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of68
cf68:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of69:
cmp byte [tape + r8], 0
jz cf69
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of69
cf69:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of6a:
cmp byte [tape + r8], 0
jz cf6a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of6a
cf6a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of6b:
cmp byte [tape + r8], 0
jz cf6b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of6b
cf6b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of6c:
cmp byte [tape + r8], 0
jz cf6c
add r8, 397
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 406
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of6c
cf6c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of67
cf67:
sub r8, 1
and r8, 0xFFFF
of6d:
cmp byte [tape + r8], 0
jz cf6d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of6d
cf6d:
add r8, 1
and r8, 0xFFFF
of6e:
cmp byte [tape + r8], 0
jz cf6e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
of6f:
cmp byte [tape + r8], 0
jz cf6f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of6f
cf6f:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 398
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 407
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of6e
cf6e:
add r8, 405
and r8, 0xFFFF
push 1
push 406
call ms
sub r8, 406
and r8, 0xFFFF
of70:
cmp byte [tape + r8], 0
jz cf70
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of70
cf70:
add r8, 1
and r8, 0xFFFF
of71:
cmp byte [tape + r8], 0
jz cf71
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
of72:
cmp byte [tape + r8], 0
jz cf72
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of72
cf72:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of73:
cmp byte [tape + r8], 0
jz cf73
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of73
cf73:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of74:
cmp byte [tape + r8], 0
jz cf74
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of74
cf74:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of75:
cmp byte [tape + r8], 0
jz cf75
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of75
cf75:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of76:
cmp byte [tape + r8], 0
jz cf76
add r8, 399
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 408
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of76
cf76:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of71
cf71:
sub r8, 1
and r8, 0xFFFF
of77:
cmp byte [tape + r8], 0
jz cf77
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of77
cf77:
add r8, 1
and r8, 0xFFFF
of78:
cmp byte [tape + r8], 0
jz cf78
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
of79:
cmp byte [tape + r8], 0
jz cf79
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of79
cf79:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
of7a:
cmp byte [tape + r8], 0
jz cf7a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of7a
cf7a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of78
cf78:
add r8, 407
and r8, 0xFFFF
push 1
push 408
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 407
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 405
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 403
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 402
call ms
sub r8, 402
and r8, 0xFFFF
of7b:
cmp byte [tape + r8], 0
jz cf7b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of7b
cf7b:
add r8, 1
and r8, 0xFFFF
of7c:
cmp byte [tape + r8], 0
jz cf7c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
of7d:
cmp byte [tape + r8], 0
jz cf7d
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of7d
cf7d:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of7e:
cmp byte [tape + r8], 0
jz cf7e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of7e
cf7e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of7f:
cmp byte [tape + r8], 0
jz cf7f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of7f
cf7f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
of80:
cmp byte [tape + r8], 0
jz cf80
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of80
cf80:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
of81:
cmp byte [tape + r8], 0
jz cf81
add r8, 400
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 409
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp of81
cf81:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of7c
cf7c:
sub r8, 1
and r8, 0xFFFF
of82:
cmp byte [tape + r8], 0
jz cf82
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of82
cf82:
add r8, 1
and r8, 0xFFFF
of83:
cmp byte [tape + r8], 0
jz cf83
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
of84:
cmp byte [tape + r8], 0
jz cf84
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp of84
cf84:
add r8, 1
and r8, 0xFFFF
of85:
cmp byte [tape + r8], 0
jz cf85
sub r8, 3
and r8, 0xFFFF
of86:
cmp byte [tape + r8], 0
jz cf86
sub r8, 2
and r8, 0xFFFF
jmp of86
cf86:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of87:
cmp byte [tape + r8], 0
jz cf87
add r8, 2
and r8, 0xFFFF
jmp of87
cf87:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of85
cf85:
sub r8, 3
and r8, 0xFFFF
of88:
cmp byte [tape + r8], 0
jz cf88
sub r8, 2
and r8, 0xFFFF
jmp of88
cf88:
add r8, 1
and r8, 0xFFFF
of89:
cmp byte [tape + r8], 0
jz cf89
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of89
cf89:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
of8a:
cmp byte [tape + r8], 0
jz cf8a
add r8, 2
and r8, 0xFFFF
jmp of8a
cf8a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
of8b:
cmp byte [tape + r8], 0
jz cf8b
sub r8, 2
and r8, 0xFFFF
jmp of8b
cf8b:
add r8, 1
and r8, 0xFFFF
of8c:
cmp byte [tape + r8], 0
jz cf8c
add r8, 1
and r8, 0xFFFF
of8d:
cmp byte [tape + r8], 0
jz cf8d
add r8, 2
and r8, 0xFFFF
jmp of8d
cf8d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
of8e:
cmp byte [tape + r8], 0
jz cf8e
sub r8, 2
and r8, 0xFFFF
jmp of8e
cf8e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of8c
cf8c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
of8f:
cmp byte [tape + r8], 0
jz cf8f
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of8f
cf8f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of90:
cmp byte [tape + r8], 0
jz cf90
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of90
cf90:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
of91:
cmp byte [tape + r8], 0
jz cf91
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp of91
cf91:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
of92:
cmp byte [tape + r8], 0
jz cf92
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp of92
cf92:
add r8, 1
and r8, 0xFFFF
of93:
cmp byte [tape + r8], 0
jz cf93
sub r8, 3
and r8, 0xFFFF
of94:
cmp byte [tape + r8], 0
jz cf94
sub r8, 2
and r8, 0xFFFF
jmp of94
cf94:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of95:
cmp byte [tape + r8], 0
jz cf95
add r8, 2
and r8, 0xFFFF
jmp of95
cf95:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of93
cf93:
sub r8, 3
and r8, 0xFFFF
of96:
cmp byte [tape + r8], 0
jz cf96
sub r8, 2
and r8, 0xFFFF
jmp of96
cf96:
add r8, 1
and r8, 0xFFFF
of97:
cmp byte [tape + r8], 0
jz cf97
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of97
cf97:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
of98:
cmp byte [tape + r8], 0
jz cf98
add r8, 2
and r8, 0xFFFF
jmp of98
cf98:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
of99:
cmp byte [tape + r8], 0
jz cf99
sub r8, 2
and r8, 0xFFFF
jmp of99
cf99:
add r8, 1
and r8, 0xFFFF
of9a:
cmp byte [tape + r8], 0
jz cf9a
add r8, 1
and r8, 0xFFFF
of9b:
cmp byte [tape + r8], 0
jz cf9b
add r8, 2
and r8, 0xFFFF
jmp of9b
cf9b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
of9c:
cmp byte [tape + r8], 0
jz cf9c
sub r8, 2
and r8, 0xFFFF
jmp of9c
cf9c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of9a
cf9a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
of9d:
cmp byte [tape + r8], 0
jz cf9d
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of9d
cf9d:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
of9e:
cmp byte [tape + r8], 0
jz cf9e
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of9e
cf9e:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
of9f:
cmp byte [tape + r8], 0
jz cf9f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp of9f
cf9f:
add r8, 8
and r8, 0xFFFF
ofa0:
cmp byte [tape + r8], 0
jz cfa0
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofa0
cfa0:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
ofa1:
cmp byte [tape + r8], 0
jz cfa1
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ofa1
cfa1:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ofa2:
cmp byte [tape + r8], 0
jz cfa2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofa2
cfa2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ofa3:
cmp byte [tape + r8], 0
jz cfa3
add r8, 401
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 410
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ofa3
cfa3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp of83
cf83:
sub r8, 1
and r8, 0xFFFF
ofa4:
cmp byte [tape + r8], 0
jz cfa4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofa4
cfa4:
add r8, 1
and r8, 0xFFFF
ofa5:
cmp byte [tape + r8], 0
jz cfa5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
ofa6:
cmp byte [tape + r8], 0
jz cfa6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofa6
cfa6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
ofa7:
cmp byte [tape + r8], 0
jz cfa7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofa7
cfa7:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 13
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofa5
cfa5:
add r8, 409
and r8, 0xFFFF
push 1
push 410
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 409
call ms
sub r8, 409
and r8, 0xFFFF
ofa8:
cmp byte [tape + r8], 0
jz cfa8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofa8
cfa8:
add r8, 1
and r8, 0xFFFF
ofa9:
cmp byte [tape + r8], 0
jz cfa9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
ofaa:
cmp byte [tape + r8], 0
jz cfaa
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofaa
cfaa:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofab:
cmp byte [tape + r8], 0
jz cfab
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofab
cfab:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ofac:
cmp byte [tape + r8], 0
jz cfac
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ofac
cfac:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ofad:
cmp byte [tape + r8], 0
jz cfad
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofad
cfad:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ofae:
cmp byte [tape + r8], 0
jz cfae
add r8, 402
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 411
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ofae
cfae:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofa9
cfa9:
sub r8, 1
and r8, 0xFFFF
ofaf:
cmp byte [tape + r8], 0
jz cfaf
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofaf
cfaf:
add r8, 1
and r8, 0xFFFF
ofb0:
cmp byte [tape + r8], 0
jz cfb0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofb0
cfb0:
add r8, 410
and r8, 0xFFFF
push 1
push 411
call ms
sub r8, 411
and r8, 0xFFFF
ofb1:
cmp byte [tape + r8], 0
jz cfb1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofb1
cfb1:
add r8, 1
and r8, 0xFFFF
ofb2:
cmp byte [tape + r8], 0
jz cfb2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
ofb3:
cmp byte [tape + r8], 0
jz cfb3
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofb3
cfb3:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofb4:
cmp byte [tape + r8], 0
jz cfb4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofb4
cfb4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ofb5:
cmp byte [tape + r8], 0
jz cfb5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ofb5
cfb5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ofb6:
cmp byte [tape + r8], 0
jz cfb6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofb6
cfb6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ofb7:
cmp byte [tape + r8], 0
jz cfb7
add r8, 403
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 412
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ofb7
cfb7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofb2
cfb2:
sub r8, 1
and r8, 0xFFFF
ofb8:
cmp byte [tape + r8], 0
jz cfb8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofb8
cfb8:
add r8, 1
and r8, 0xFFFF
ofb9:
cmp byte [tape + r8], 0
jz cfb9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
ofba:
cmp byte [tape + r8], 0
jz cfba
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofba
cfba:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
ofbb:
cmp byte [tape + r8], 0
jz cfbb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp ofbb
cfbb:
add r8, 1
and r8, 0xFFFF
ofbc:
cmp byte [tape + r8], 0
jz cfbc
sub r8, 3
and r8, 0xFFFF
ofbd:
cmp byte [tape + r8], 0
jz cfbd
sub r8, 2
and r8, 0xFFFF
jmp ofbd
cfbd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofbe:
cmp byte [tape + r8], 0
jz cfbe
add r8, 2
and r8, 0xFFFF
jmp ofbe
cfbe:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofbc
cfbc:
sub r8, 3
and r8, 0xFFFF
ofbf:
cmp byte [tape + r8], 0
jz cfbf
sub r8, 2
and r8, 0xFFFF
jmp ofbf
cfbf:
add r8, 1
and r8, 0xFFFF
ofc0:
cmp byte [tape + r8], 0
jz cfc0
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofc0
cfc0:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
ofc1:
cmp byte [tape + r8], 0
jz cfc1
add r8, 2
and r8, 0xFFFF
jmp ofc1
cfc1:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
ofc2:
cmp byte [tape + r8], 0
jz cfc2
sub r8, 2
and r8, 0xFFFF
jmp ofc2
cfc2:
add r8, 1
and r8, 0xFFFF
ofc3:
cmp byte [tape + r8], 0
jz cfc3
add r8, 1
and r8, 0xFFFF
ofc4:
cmp byte [tape + r8], 0
jz cfc4
add r8, 2
and r8, 0xFFFF
jmp ofc4
cfc4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
ofc5:
cmp byte [tape + r8], 0
jz cfc5
sub r8, 2
and r8, 0xFFFF
jmp ofc5
cfc5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofc3
cfc3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
ofc6:
cmp byte [tape + r8], 0
jz cfc6
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofc6
cfc6:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofc7:
cmp byte [tape + r8], 0
jz cfc7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofc7
cfc7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ofc8:
cmp byte [tape + r8], 0
jz cfc8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ofc8
cfc8:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
ofc9:
cmp byte [tape + r8], 0
jz cfc9
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofc9
cfc9:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
ofca:
cmp byte [tape + r8], 0
jz cfca
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp ofca
cfca:
add r8, 1
and r8, 0xFFFF
ofcb:
cmp byte [tape + r8], 0
jz cfcb
sub r8, 3
and r8, 0xFFFF
ofcc:
cmp byte [tape + r8], 0
jz cfcc
sub r8, 2
and r8, 0xFFFF
jmp ofcc
cfcc:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofcd:
cmp byte [tape + r8], 0
jz cfcd
add r8, 2
and r8, 0xFFFF
jmp ofcd
cfcd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofcb
cfcb:
sub r8, 3
and r8, 0xFFFF
ofce:
cmp byte [tape + r8], 0
jz cfce
sub r8, 2
and r8, 0xFFFF
jmp ofce
cfce:
add r8, 1
and r8, 0xFFFF
ofcf:
cmp byte [tape + r8], 0
jz cfcf
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofcf
cfcf:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
ofd0:
cmp byte [tape + r8], 0
jz cfd0
add r8, 2
and r8, 0xFFFF
jmp ofd0
cfd0:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
ofd1:
cmp byte [tape + r8], 0
jz cfd1
sub r8, 2
and r8, 0xFFFF
jmp ofd1
cfd1:
add r8, 1
and r8, 0xFFFF
ofd2:
cmp byte [tape + r8], 0
jz cfd2
add r8, 1
and r8, 0xFFFF
ofd3:
cmp byte [tape + r8], 0
jz cfd3
add r8, 2
and r8, 0xFFFF
jmp ofd3
cfd3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
ofd4:
cmp byte [tape + r8], 0
jz cfd4
sub r8, 2
and r8, 0xFFFF
jmp ofd4
cfd4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofd2
cfd2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofd5:
cmp byte [tape + r8], 0
jz cfd5
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofd5
cfd5:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
ofd6:
cmp byte [tape + r8], 0
jz cfd6
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ofd6
cfd6:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
ofd7:
cmp byte [tape + r8], 0
jz cfd7
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ofd7
cfd7:
add r8, 8
and r8, 0xFFFF
ofd8:
cmp byte [tape + r8], 0
jz cfd8
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofd8
cfd8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
ofd9:
cmp byte [tape + r8], 0
jz cfd9
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ofd9
cfd9:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ofda:
cmp byte [tape + r8], 0
jz cfda
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofda
cfda:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ofdb:
cmp byte [tape + r8], 0
jz cfdb
add r8, 404
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 413
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ofdb
cfdb:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofb9
cfb9:
sub r8, 1
and r8, 0xFFFF
ofdc:
cmp byte [tape + r8], 0
jz cfdc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofdc
cfdc:
add r8, 1
and r8, 0xFFFF
ofdd:
cmp byte [tape + r8], 0
jz cfdd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
ofde:
cmp byte [tape + r8], 0
jz cfde
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofde
cfde:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 412
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 414
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofdd
cfdd:
add r8, 412
and r8, 0xFFFF
push 1
push 413
call ms
sub r8, 413
and r8, 0xFFFF
ofdf:
cmp byte [tape + r8], 0
jz cfdf
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofdf
cfdf:
add r8, 1
and r8, 0xFFFF
ofe0:
cmp byte [tape + r8], 0
jz cfe0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofe0
cfe0:
add r8, 413
and r8, 0xFFFF
push 1
push 414
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 412
call ms
sub r8, 15
and r8, 0xFFFF
push 1
push 397
call ms
sub r8, 397
and r8, 0xFFFF
ofe1:
cmp byte [tape + r8], 0
jz cfe1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofe1
cfe1:
add r8, 1
and r8, 0xFFFF
ofe2:
cmp byte [tape + r8], 0
jz cfe2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
ofe3:
cmp byte [tape + r8], 0
jz cfe3
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofe3
cfe3:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofe4:
cmp byte [tape + r8], 0
jz cfe4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofe4
cfe4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ofe5:
cmp byte [tape + r8], 0
jz cfe5
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ofe5
cfe5:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
ofe6:
cmp byte [tape + r8], 0
jz cfe6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofe6
cfe6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
ofe7:
cmp byte [tape + r8], 0
jz cfe7
add r8, 406
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 415
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp ofe7
cfe7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofe2
cfe2:
sub r8, 1
and r8, 0xFFFF
ofe8:
cmp byte [tape + r8], 0
jz cfe8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofe8
cfe8:
add r8, 1
and r8, 0xFFFF
ofe9:
cmp byte [tape + r8], 0
jz cfe9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
ofea:
cmp byte [tape + r8], 0
jz cfea
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofea
cfea:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofeb:
cmp byte [tape + r8], 0
jz cfeb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofeb
cfeb:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
ofec:
cmp byte [tape + r8], 0
jz cfec
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp ofec
cfec:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
ofed:
cmp byte [tape + r8], 0
jz cfed
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofed
cfed:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
ofee:
cmp byte [tape + r8], 0
jz cfee
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofee
cfee:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
ofef:
cmp byte [tape + r8], 0
jz cfef
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp ofef
cfef:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
off0:
cmp byte [tape + r8], 0
jz cff0
call z
add r8, 8
and r8, 0xFFFF
off1:
cmp byte [tape + r8], 0
jz cff1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp off1
cff1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
off2:
cmp byte [tape + r8], 0
jz cff2
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp off2
cff2:
jmp off0
cff0:
add r8, 8
and r8, 0xFFFF
call z
add r8, 32
and r8, 0xFFFF
off3:
cmp byte [tape + r8], 0
jz cff3
sub r8, 32
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp off3
cff3:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
off4:
cmp byte [tape + r8], 0
jz cff4
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp off4
cff4:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
off5:
cmp byte [tape + r8], 0
jz cff5
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp off5
cff5:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
off6:
cmp byte [tape + r8], 0
jz cff6
call z
add r8, 8
and r8, 0xFFFF
off7:
cmp byte [tape + r8], 0
jz cff7
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp off7
cff7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
off8:
cmp byte [tape + r8], 0
jz cff8
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp off8
cff8:
jmp off6
cff6:
add r8, 8
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
off9:
cmp byte [tape + r8], 0
jz cff9
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp off9
cff9:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
offa:
cmp byte [tape + r8], 0
jz cffa
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp offa
cffa:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
offb:
cmp byte [tape + r8], 0
jz cffb
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp offb
cffb:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
offc:
cmp byte [tape + r8], 0
jz cffc
call z
add r8, 8
and r8, 0xFFFF
offd:
cmp byte [tape + r8], 0
jz cffd
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp offd
cffd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
offe:
cmp byte [tape + r8], 0
jz cffe
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp offe
cffe:
jmp offc
cffc:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
offf:
cmp byte [tape + r8], 0
jz cfff
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp offf
cfff:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1000:
cmp byte [tape + r8], 0
jz c1000
add r8, 407
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 416
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1000
c1000:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp ofe9
cfe9:
sub r8, 1
and r8, 0xFFFF
o1001:
cmp byte [tape + r8], 0
jz c1001
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1001
c1001:
add r8, 1
and r8, 0xFFFF
o1002:
cmp byte [tape + r8], 0
jz c1002
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o1003:
cmp byte [tape + r8], 0
jz c1003
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1003
c1003:
add r8, 1
and r8, 0xFFFF
o1004:
cmp byte [tape + r8], 0
jz c1004
sub r8, 3
and r8, 0xFFFF
o1005:
cmp byte [tape + r8], 0
jz c1005
sub r8, 2
and r8, 0xFFFF
jmp o1005
c1005:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1006:
cmp byte [tape + r8], 0
jz c1006
add r8, 2
and r8, 0xFFFF
jmp o1006
c1006:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1004
c1004:
sub r8, 3
and r8, 0xFFFF
o1007:
cmp byte [tape + r8], 0
jz c1007
sub r8, 2
and r8, 0xFFFF
jmp o1007
c1007:
add r8, 1
and r8, 0xFFFF
o1008:
cmp byte [tape + r8], 0
jz c1008
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1008
c1008:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1009:
cmp byte [tape + r8], 0
jz c1009
add r8, 2
and r8, 0xFFFF
jmp o1009
c1009:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o100a:
cmp byte [tape + r8], 0
jz c100a
sub r8, 2
and r8, 0xFFFF
jmp o100a
c100a:
add r8, 1
and r8, 0xFFFF
o100b:
cmp byte [tape + r8], 0
jz c100b
add r8, 1
and r8, 0xFFFF
o100c:
cmp byte [tape + r8], 0
jz c100c
add r8, 2
and r8, 0xFFFF
jmp o100c
c100c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o100d:
cmp byte [tape + r8], 0
jz c100d
sub r8, 2
and r8, 0xFFFF
jmp o100d
c100d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o100b
c100b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o100e:
cmp byte [tape + r8], 0
jz c100e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o100e
c100e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o100f:
cmp byte [tape + r8], 0
jz c100f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o100f
c100f:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o1010:
cmp byte [tape + r8], 0
jz c1010
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1010
c1010:
add r8, 1
and r8, 0xFFFF
o1011:
cmp byte [tape + r8], 0
jz c1011
sub r8, 3
and r8, 0xFFFF
o1012:
cmp byte [tape + r8], 0
jz c1012
sub r8, 2
and r8, 0xFFFF
jmp o1012
c1012:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1013:
cmp byte [tape + r8], 0
jz c1013
add r8, 2
and r8, 0xFFFF
jmp o1013
c1013:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1011
c1011:
sub r8, 3
and r8, 0xFFFF
o1014:
cmp byte [tape + r8], 0
jz c1014
sub r8, 2
and r8, 0xFFFF
jmp o1014
c1014:
add r8, 1
and r8, 0xFFFF
o1015:
cmp byte [tape + r8], 0
jz c1015
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1015
c1015:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1016:
cmp byte [tape + r8], 0
jz c1016
add r8, 2
and r8, 0xFFFF
jmp o1016
c1016:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1017:
cmp byte [tape + r8], 0
jz c1017
sub r8, 2
and r8, 0xFFFF
jmp o1017
c1017:
add r8, 1
and r8, 0xFFFF
o1018:
cmp byte [tape + r8], 0
jz c1018
add r8, 1
and r8, 0xFFFF
o1019:
cmp byte [tape + r8], 0
jz c1019
add r8, 2
and r8, 0xFFFF
jmp o1019
c1019:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o101a:
cmp byte [tape + r8], 0
jz c101a
sub r8, 2
and r8, 0xFFFF
jmp o101a
c101a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1018
c1018:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 35
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o101b:
cmp byte [tape + r8], 0
jz c101b
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o101b
c101b:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o101c:
cmp byte [tape + r8], 0
jz c101c
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o101c
c101c:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o101d:
cmp byte [tape + r8], 0
jz c101d
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o101d
c101d:
add r8, 8
and r8, 0xFFFF
o101e:
cmp byte [tape + r8], 0
jz c101e
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o101e
c101e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o101f:
cmp byte [tape + r8], 0
jz c101f
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o101f
c101f:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1020:
cmp byte [tape + r8], 0
jz c1020
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1020
c1020:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1021:
cmp byte [tape + r8], 0
jz c1021
add r8, 408
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 417
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1021
c1021:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1002
c1002:
sub r8, 1
and r8, 0xFFFF
o1022:
cmp byte [tape + r8], 0
jz c1022
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1022
c1022:
add r8, 1
and r8, 0xFFFF
o1023:
cmp byte [tape + r8], 0
jz c1023
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o1024:
cmp byte [tape + r8], 0
jz c1024
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1024
c1024:
add r8, 1
and r8, 0xFFFF
o1025:
cmp byte [tape + r8], 0
jz c1025
sub r8, 3
and r8, 0xFFFF
o1026:
cmp byte [tape + r8], 0
jz c1026
sub r8, 2
and r8, 0xFFFF
jmp o1026
c1026:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1027:
cmp byte [tape + r8], 0
jz c1027
add r8, 2
and r8, 0xFFFF
jmp o1027
c1027:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1025
c1025:
sub r8, 3
and r8, 0xFFFF
o1028:
cmp byte [tape + r8], 0
jz c1028
sub r8, 2
and r8, 0xFFFF
jmp o1028
c1028:
add r8, 1
and r8, 0xFFFF
o1029:
cmp byte [tape + r8], 0
jz c1029
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1029
c1029:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o102a:
cmp byte [tape + r8], 0
jz c102a
add r8, 2
and r8, 0xFFFF
jmp o102a
c102a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o102b:
cmp byte [tape + r8], 0
jz c102b
sub r8, 2
and r8, 0xFFFF
jmp o102b
c102b:
add r8, 1
and r8, 0xFFFF
o102c:
cmp byte [tape + r8], 0
jz c102c
add r8, 1
and r8, 0xFFFF
o102d:
cmp byte [tape + r8], 0
jz c102d
add r8, 2
and r8, 0xFFFF
jmp o102d
c102d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o102e:
cmp byte [tape + r8], 0
jz c102e
sub r8, 2
and r8, 0xFFFF
jmp o102e
c102e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o102c
c102c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o102f:
cmp byte [tape + r8], 0
jz c102f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o102f
c102f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1030:
cmp byte [tape + r8], 0
jz c1030
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1030
c1030:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1031:
cmp byte [tape + r8], 0
jz c1031
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1031
c1031:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1032:
cmp byte [tape + r8], 0
jz c1032
add r8, 409
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 418
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1032
c1032:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1023
c1023:
sub r8, 1
and r8, 0xFFFF
o1033:
cmp byte [tape + r8], 0
jz c1033
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1033
c1033:
add r8, 1
and r8, 0xFFFF
o1034:
cmp byte [tape + r8], 0
jz c1034
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o1035:
cmp byte [tape + r8], 0
jz c1035
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1035
c1035:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o1036:
cmp byte [tape + r8], 0
jz c1036
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1036
c1036:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1034
c1034:
add r8, 417
and r8, 0xFFFF
push 1
push 418
call ms
sub r8, 418
and r8, 0xFFFF
o1037:
cmp byte [tape + r8], 0
jz c1037
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1037
c1037:
add r8, 1
and r8, 0xFFFF
o1038:
cmp byte [tape + r8], 0
jz c1038
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1039:
cmp byte [tape + r8], 0
jz c1039
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1039
c1039:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o103a:
cmp byte [tape + r8], 0
jz c103a
sub r8, 2
and r8, 0xFFFF
jmp o103a
c103a:
add r8, 1
and r8, 0xFFFF
o103b:
cmp byte [tape + r8], 0
jz c103b
add r8, 1
and r8, 0xFFFF
o103c:
cmp byte [tape + r8], 0
jz c103c
add r8, 2
and r8, 0xFFFF
jmp o103c
c103c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o103d:
cmp byte [tape + r8], 0
jz c103d
sub r8, 2
and r8, 0xFFFF
jmp o103d
c103d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o103b
c103b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
add byte [tape + r8], 17
o103e:
cmp byte [tape + r8], 0
jz c103e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o103e
c103e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
call z
sub r8, 33
and r8, 0xFFFF
push 1
push 33
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1038
c1038:
add r8, 416
and r8, 0xFFFF
push 1
push 417
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 416
call ms
sub r8, 416
and r8, 0xFFFF
o103f:
cmp byte [tape + r8], 0
jz c103f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o103f
c103f:
add r8, 1
and r8, 0xFFFF
o1040:
cmp byte [tape + r8], 0
jz c1040
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1041:
cmp byte [tape + r8], 0
jz c1041
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1041
c1041:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1042:
cmp byte [tape + r8], 0
jz c1042
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1042
c1042:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1043:
cmp byte [tape + r8], 0
jz c1043
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1043
c1043:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o1044:
cmp byte [tape + r8], 0
jz c1044
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1044
c1044:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1045:
cmp byte [tape + r8], 0
jz c1045
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1045
c1045:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1046:
cmp byte [tape + r8], 0
jz c1046
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1046
c1046:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1047:
cmp byte [tape + r8], 0
jz c1047
call z
add r8, 8
and r8, 0xFFFF
o1048:
cmp byte [tape + r8], 0
jz c1048
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1048
c1048:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1049:
cmp byte [tape + r8], 0
jz c1049
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1049
c1049:
jmp o1047
c1047:
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o104a:
cmp byte [tape + r8], 0
jz c104a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o104a
c104a:
add r8, 1
and r8, 0xFFFF
o104b:
cmp byte [tape + r8], 0
jz c104b
sub r8, 3
and r8, 0xFFFF
o104c:
cmp byte [tape + r8], 0
jz c104c
sub r8, 2
and r8, 0xFFFF
jmp o104c
c104c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o104d:
cmp byte [tape + r8], 0
jz c104d
add r8, 2
and r8, 0xFFFF
jmp o104d
c104d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o104b
c104b:
sub r8, 3
and r8, 0xFFFF
o104e:
cmp byte [tape + r8], 0
jz c104e
sub r8, 2
and r8, 0xFFFF
jmp o104e
c104e:
add r8, 1
and r8, 0xFFFF
o104f:
cmp byte [tape + r8], 0
jz c104f
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o104f
c104f:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1050:
cmp byte [tape + r8], 0
jz c1050
add r8, 2
and r8, 0xFFFF
jmp o1050
c1050:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1051:
cmp byte [tape + r8], 0
jz c1051
sub r8, 2
and r8, 0xFFFF
jmp o1051
c1051:
add r8, 1
and r8, 0xFFFF
o1052:
cmp byte [tape + r8], 0
jz c1052
add r8, 1
and r8, 0xFFFF
o1053:
cmp byte [tape + r8], 0
jz c1053
add r8, 2
and r8, 0xFFFF
jmp o1053
c1053:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1054:
cmp byte [tape + r8], 0
jz c1054
sub r8, 2
and r8, 0xFFFF
jmp o1054
c1054:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1052
c1052:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1055:
cmp byte [tape + r8], 0
jz c1055
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1055
c1055:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1056:
cmp byte [tape + r8], 0
jz c1056
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1056
c1056:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
o1057:
cmp byte [tape + r8], 0
jz c1057
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1057
c1057:
add r8, 1
and r8, 0xFFFF
o1058:
cmp byte [tape + r8], 0
jz c1058
sub r8, 3
and r8, 0xFFFF
o1059:
cmp byte [tape + r8], 0
jz c1059
sub r8, 2
and r8, 0xFFFF
jmp o1059
c1059:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o105a:
cmp byte [tape + r8], 0
jz c105a
add r8, 2
and r8, 0xFFFF
jmp o105a
c105a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1058
c1058:
sub r8, 3
and r8, 0xFFFF
o105b:
cmp byte [tape + r8], 0
jz c105b
sub r8, 2
and r8, 0xFFFF
jmp o105b
c105b:
add r8, 1
and r8, 0xFFFF
o105c:
cmp byte [tape + r8], 0
jz c105c
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o105c
c105c:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o105d:
cmp byte [tape + r8], 0
jz c105d
add r8, 2
and r8, 0xFFFF
jmp o105d
c105d:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o105e:
cmp byte [tape + r8], 0
jz c105e
sub r8, 2
and r8, 0xFFFF
jmp o105e
c105e:
add r8, 1
and r8, 0xFFFF
o105f:
cmp byte [tape + r8], 0
jz c105f
add r8, 1
and r8, 0xFFFF
o1060:
cmp byte [tape + r8], 0
jz c1060
add r8, 2
and r8, 0xFFFF
jmp o1060
c1060:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1061:
cmp byte [tape + r8], 0
jz c1061
sub r8, 2
and r8, 0xFFFF
jmp o1061
c1061:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o105f
c105f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1062:
cmp byte [tape + r8], 0
jz c1062
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1062
c1062:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o1063:
cmp byte [tape + r8], 0
jz c1063
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o1063
c1063:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o1064:
cmp byte [tape + r8], 0
jz c1064
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o1064
c1064:
add r8, 9
and r8, 0xFFFF
o1065:
cmp byte [tape + r8], 0
jz c1065
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1065
c1065:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o1066:
cmp byte [tape + r8], 0
jz c1066
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o1066
c1066:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1067:
cmp byte [tape + r8], 0
jz c1067
call z
add r8, 8
and r8, 0xFFFF
o1068:
cmp byte [tape + r8], 0
jz c1068
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1068
c1068:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1069:
cmp byte [tape + r8], 0
jz c1069
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1069
c1069:
jmp o1067
c1067:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o106a:
cmp byte [tape + r8], 0
jz c106a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o106a
c106a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o106b:
cmp byte [tape + r8], 0
jz c106b
add r8, 410
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 419
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o106b
c106b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1040
c1040:
sub r8, 1
and r8, 0xFFFF
o106c:
cmp byte [tape + r8], 0
jz c106c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o106c
c106c:
add r8, 1
and r8, 0xFFFF
o106d:
cmp byte [tape + r8], 0
jz c106d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o106e:
cmp byte [tape + r8], 0
jz c106e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o106e
c106e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o106f:
cmp byte [tape + r8], 0
jz c106f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o106f
c106f:
add r8, 1
and r8, 0xFFFF
o1070:
cmp byte [tape + r8], 0
jz c1070
sub r8, 3
and r8, 0xFFFF
o1071:
cmp byte [tape + r8], 0
jz c1071
sub r8, 2
and r8, 0xFFFF
jmp o1071
c1071:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1072:
cmp byte [tape + r8], 0
jz c1072
add r8, 2
and r8, 0xFFFF
jmp o1072
c1072:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1070
c1070:
sub r8, 3
and r8, 0xFFFF
o1073:
cmp byte [tape + r8], 0
jz c1073
sub r8, 2
and r8, 0xFFFF
jmp o1073
c1073:
add r8, 1
and r8, 0xFFFF
o1074:
cmp byte [tape + r8], 0
jz c1074
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1074
c1074:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1075:
cmp byte [tape + r8], 0
jz c1075
add r8, 2
and r8, 0xFFFF
jmp o1075
c1075:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1076:
cmp byte [tape + r8], 0
jz c1076
sub r8, 2
and r8, 0xFFFF
jmp o1076
c1076:
add r8, 1
and r8, 0xFFFF
o1077:
cmp byte [tape + r8], 0
jz c1077
add r8, 1
and r8, 0xFFFF
o1078:
cmp byte [tape + r8], 0
jz c1078
add r8, 2
and r8, 0xFFFF
jmp o1078
c1078:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1079:
cmp byte [tape + r8], 0
jz c1079
sub r8, 2
and r8, 0xFFFF
jmp o1079
c1079:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1077
c1077:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o107a:
cmp byte [tape + r8], 0
jz c107a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o107a
c107a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o107b:
cmp byte [tape + r8], 0
jz c107b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o107b
c107b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o107c:
cmp byte [tape + r8], 0
jz c107c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o107c
c107c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o107d:
cmp byte [tape + r8], 0
jz c107d
add r8, 411
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 420
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o107d
c107d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o106d
c106d:
sub r8, 1
and r8, 0xFFFF
o107e:
cmp byte [tape + r8], 0
jz c107e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o107e
c107e:
add r8, 1
and r8, 0xFFFF
o107f:
cmp byte [tape + r8], 0
jz c107f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o1080:
cmp byte [tape + r8], 0
jz c1080
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1080
c1080:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o1081:
cmp byte [tape + r8], 0
jz c1081
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1081
c1081:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o107f
c107f:
add r8, 419
and r8, 0xFFFF
push 1
push 420
call ms
sub r8, 420
and r8, 0xFFFF
o1082:
cmp byte [tape + r8], 0
jz c1082
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1082
c1082:
add r8, 1
and r8, 0xFFFF
o1083:
cmp byte [tape + r8], 0
jz c1083
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 24
and r8, 0xFFFF
call z
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1084:
cmp byte [tape + r8], 0
jz c1084
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1084
c1084:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1085:
cmp byte [tape + r8], 0
jz c1085
sub r8, 2
and r8, 0xFFFF
jmp o1085
c1085:
add r8, 1
and r8, 0xFFFF
o1086:
cmp byte [tape + r8], 0
jz c1086
add r8, 1
and r8, 0xFFFF
o1087:
cmp byte [tape + r8], 0
jz c1087
add r8, 2
and r8, 0xFFFF
jmp o1087
c1087:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1088:
cmp byte [tape + r8], 0
jz c1088
sub r8, 2
and r8, 0xFFFF
jmp o1088
c1088:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1086
c1086:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 15
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1083
c1083:
add r8, 418
and r8, 0xFFFF
push 1
push 419
call ms
sub r8, 419
and r8, 0xFFFF
o1089:
cmp byte [tape + r8], 0
jz c1089
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1089
c1089:
add r8, 1
and r8, 0xFFFF
o108a:
cmp byte [tape + r8], 0
jz c108a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o108b:
cmp byte [tape + r8], 0
jz c108b
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o108b
c108b:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o108c:
cmp byte [tape + r8], 0
jz c108c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o108c
c108c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o108d:
cmp byte [tape + r8], 0
jz c108d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o108d
c108d:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o108e:
cmp byte [tape + r8], 0
jz c108e
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o108e
c108e:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o108f:
cmp byte [tape + r8], 0
jz c108f
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o108f
c108f:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1090:
cmp byte [tape + r8], 0
jz c1090
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1090
c1090:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1091:
cmp byte [tape + r8], 0
jz c1091
call z
add r8, 8
and r8, 0xFFFF
o1092:
cmp byte [tape + r8], 0
jz c1092
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1092
c1092:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1093:
cmp byte [tape + r8], 0
jz c1093
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1093
c1093:
jmp o1091
c1091:
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o1094:
cmp byte [tape + r8], 0
jz c1094
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1094
c1094:
add r8, 1
and r8, 0xFFFF
o1095:
cmp byte [tape + r8], 0
jz c1095
sub r8, 3
and r8, 0xFFFF
o1096:
cmp byte [tape + r8], 0
jz c1096
sub r8, 2
and r8, 0xFFFF
jmp o1096
c1096:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1097:
cmp byte [tape + r8], 0
jz c1097
add r8, 2
and r8, 0xFFFF
jmp o1097
c1097:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1095
c1095:
sub r8, 3
and r8, 0xFFFF
o1098:
cmp byte [tape + r8], 0
jz c1098
sub r8, 2
and r8, 0xFFFF
jmp o1098
c1098:
add r8, 1
and r8, 0xFFFF
o1099:
cmp byte [tape + r8], 0
jz c1099
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1099
c1099:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o109a:
cmp byte [tape + r8], 0
jz c109a
add r8, 2
and r8, 0xFFFF
jmp o109a
c109a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o109b:
cmp byte [tape + r8], 0
jz c109b
sub r8, 2
and r8, 0xFFFF
jmp o109b
c109b:
add r8, 1
and r8, 0xFFFF
o109c:
cmp byte [tape + r8], 0
jz c109c
add r8, 1
and r8, 0xFFFF
o109d:
cmp byte [tape + r8], 0
jz c109d
add r8, 2
and r8, 0xFFFF
jmp o109d
c109d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o109e:
cmp byte [tape + r8], 0
jz c109e
sub r8, 2
and r8, 0xFFFF
jmp o109e
c109e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o109c
c109c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o109f:
cmp byte [tape + r8], 0
jz c109f
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o109f
c109f:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o10a0:
cmp byte [tape + r8], 0
jz c10a0
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o10a0
c10a0:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
o10a1:
cmp byte [tape + r8], 0
jz c10a1
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o10a1
c10a1:
add r8, 1
and r8, 0xFFFF
o10a2:
cmp byte [tape + r8], 0
jz c10a2
sub r8, 3
and r8, 0xFFFF
o10a3:
cmp byte [tape + r8], 0
jz c10a3
sub r8, 2
and r8, 0xFFFF
jmp o10a3
c10a3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10a4:
cmp byte [tape + r8], 0
jz c10a4
add r8, 2
and r8, 0xFFFF
jmp o10a4
c10a4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10a2
c10a2:
sub r8, 3
and r8, 0xFFFF
o10a5:
cmp byte [tape + r8], 0
jz c10a5
sub r8, 2
and r8, 0xFFFF
jmp o10a5
c10a5:
add r8, 1
and r8, 0xFFFF
o10a6:
cmp byte [tape + r8], 0
jz c10a6
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10a6
c10a6:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o10a7:
cmp byte [tape + r8], 0
jz c10a7
add r8, 2
and r8, 0xFFFF
jmp o10a7
c10a7:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o10a8:
cmp byte [tape + r8], 0
jz c10a8
sub r8, 2
and r8, 0xFFFF
jmp o10a8
c10a8:
add r8, 1
and r8, 0xFFFF
o10a9:
cmp byte [tape + r8], 0
jz c10a9
add r8, 1
and r8, 0xFFFF
o10aa:
cmp byte [tape + r8], 0
jz c10aa
add r8, 2
and r8, 0xFFFF
jmp o10aa
c10aa:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o10ab:
cmp byte [tape + r8], 0
jz c10ab
sub r8, 2
and r8, 0xFFFF
jmp o10ab
c10ab:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10a9
c10a9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10ac:
cmp byte [tape + r8], 0
jz c10ac
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10ac
c10ac:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o10ad:
cmp byte [tape + r8], 0
jz c10ad
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o10ad
c10ad:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o10ae:
cmp byte [tape + r8], 0
jz c10ae
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o10ae
c10ae:
add r8, 9
and r8, 0xFFFF
o10af:
cmp byte [tape + r8], 0
jz c10af
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10af
c10af:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o10b0:
cmp byte [tape + r8], 0
jz c10b0
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o10b0
c10b0:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o10b1:
cmp byte [tape + r8], 0
jz c10b1
call z
add r8, 8
and r8, 0xFFFF
o10b2:
cmp byte [tape + r8], 0
jz c10b2
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10b2
c10b2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o10b3:
cmp byte [tape + r8], 0
jz c10b3
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o10b3
c10b3:
jmp o10b1
c10b1:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o10b4:
cmp byte [tape + r8], 0
jz c10b4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10b4
c10b4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o10b5:
cmp byte [tape + r8], 0
jz c10b5
add r8, 412
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 421
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o10b5
c10b5:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o108a
c108a:
sub r8, 1
and r8, 0xFFFF
o10b6:
cmp byte [tape + r8], 0
jz c10b6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10b6
c10b6:
add r8, 1
and r8, 0xFFFF
o10b7:
cmp byte [tape + r8], 0
jz c10b7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o10b8:
cmp byte [tape + r8], 0
jz c10b8
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o10b8
c10b8:
add r8, 1
and r8, 0xFFFF
o10b9:
cmp byte [tape + r8], 0
jz c10b9
sub r8, 3
and r8, 0xFFFF
o10ba:
cmp byte [tape + r8], 0
jz c10ba
sub r8, 2
and r8, 0xFFFF
jmp o10ba
c10ba:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10bb:
cmp byte [tape + r8], 0
jz c10bb
add r8, 2
and r8, 0xFFFF
jmp o10bb
c10bb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10b9
c10b9:
sub r8, 3
and r8, 0xFFFF
o10bc:
cmp byte [tape + r8], 0
jz c10bc
sub r8, 2
and r8, 0xFFFF
jmp o10bc
c10bc:
add r8, 1
and r8, 0xFFFF
o10bd:
cmp byte [tape + r8], 0
jz c10bd
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10bd
c10bd:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o10be:
cmp byte [tape + r8], 0
jz c10be
add r8, 2
and r8, 0xFFFF
jmp o10be
c10be:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o10bf:
cmp byte [tape + r8], 0
jz c10bf
sub r8, 2
and r8, 0xFFFF
jmp o10bf
c10bf:
add r8, 1
and r8, 0xFFFF
o10c0:
cmp byte [tape + r8], 0
jz c10c0
add r8, 1
and r8, 0xFFFF
o10c1:
cmp byte [tape + r8], 0
jz c10c1
add r8, 2
and r8, 0xFFFF
jmp o10c1
c10c1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o10c2:
cmp byte [tape + r8], 0
jz c10c2
sub r8, 2
and r8, 0xFFFF
jmp o10c2
c10c2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10c0
c10c0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10c3:
cmp byte [tape + r8], 0
jz c10c3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10c3
c10c3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o10c4:
cmp byte [tape + r8], 0
jz c10c4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o10c4
c10c4:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o10c5:
cmp byte [tape + r8], 0
jz c10c5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10c5
c10c5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o10c6:
cmp byte [tape + r8], 0
jz c10c6
add r8, 413
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 422
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o10c6
c10c6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10b7
c10b7:
sub r8, 1
and r8, 0xFFFF
o10c7:
cmp byte [tape + r8], 0
jz c10c7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10c7
c10c7:
add r8, 1
and r8, 0xFFFF
o10c8:
cmp byte [tape + r8], 0
jz c10c8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o10c9:
cmp byte [tape + r8], 0
jz c10c9
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10c9
c10c9:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o10ca:
cmp byte [tape + r8], 0
jz c10ca
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10ca
c10ca:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 14
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o10cb:
cmp byte [tape + r8], 0
jz c10cb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o10cb
c10cb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o10cc:
cmp byte [tape + r8], 0
jz c10cc
sub r8, 2
and r8, 0xFFFF
jmp o10cc
c10cc:
add r8, 1
and r8, 0xFFFF
o10cd:
cmp byte [tape + r8], 0
jz c10cd
add r8, 1
and r8, 0xFFFF
o10ce:
cmp byte [tape + r8], 0
jz c10ce
add r8, 2
and r8, 0xFFFF
jmp o10ce
c10ce:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o10cf:
cmp byte [tape + r8], 0
jz c10cf
sub r8, 2
and r8, 0xFFFF
jmp o10cf
c10cf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10cd
c10cd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 45
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10c8
c10c8:
add r8, 421
and r8, 0xFFFF
push 1
push 422
call ms
sub r8, 422
and r8, 0xFFFF
o10d0:
cmp byte [tape + r8], 0
jz c10d0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d0
c10d0:
add r8, 1
and r8, 0xFFFF
o10d1:
cmp byte [tape + r8], 0
jz c10d1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o10d2:
cmp byte [tape + r8], 0
jz c10d2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d2
c10d2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d1
c10d1:
add r8, 420
and r8, 0xFFFF
push 1
push 421
call ms
sub r8, 421
and r8, 0xFFFF
o10d3:
cmp byte [tape + r8], 0
jz c10d3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d3
c10d3:
add r8, 1
and r8, 0xFFFF
o10d4:
cmp byte [tape + r8], 0
jz c10d4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o10d5:
cmp byte [tape + r8], 0
jz c10d5
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d5
c10d5:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10d6:
cmp byte [tape + r8], 0
jz c10d6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d6
c10d6:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o10d7:
cmp byte [tape + r8], 0
jz c10d7
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o10d7
c10d7:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o10d8:
cmp byte [tape + r8], 0
jz c10d8
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d8
c10d8:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10d9:
cmp byte [tape + r8], 0
jz c10d9
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d9
c10d9:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o10da:
cmp byte [tape + r8], 0
jz c10da
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o10da
c10da:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o10db:
cmp byte [tape + r8], 0
jz c10db
call z
add r8, 8
and r8, 0xFFFF
o10dc:
cmp byte [tape + r8], 0
jz c10dc
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10dc
c10dc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o10dd:
cmp byte [tape + r8], 0
jz c10dd
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o10dd
c10dd:
jmp o10db
c10db:
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o10de:
cmp byte [tape + r8], 0
jz c10de
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o10de
c10de:
add r8, 1
and r8, 0xFFFF
o10df:
cmp byte [tape + r8], 0
jz c10df
sub r8, 3
and r8, 0xFFFF
o10e0:
cmp byte [tape + r8], 0
jz c10e0
sub r8, 2
and r8, 0xFFFF
jmp o10e0
c10e0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10e1:
cmp byte [tape + r8], 0
jz c10e1
add r8, 2
and r8, 0xFFFF
jmp o10e1
c10e1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10df
c10df:
sub r8, 3
and r8, 0xFFFF
o10e2:
cmp byte [tape + r8], 0
jz c10e2
sub r8, 2
and r8, 0xFFFF
jmp o10e2
c10e2:
add r8, 1
and r8, 0xFFFF
o10e3:
cmp byte [tape + r8], 0
jz c10e3
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10e3
c10e3:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o10e4:
cmp byte [tape + r8], 0
jz c10e4
add r8, 2
and r8, 0xFFFF
jmp o10e4
c10e4:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o10e5:
cmp byte [tape + r8], 0
jz c10e5
sub r8, 2
and r8, 0xFFFF
jmp o10e5
c10e5:
add r8, 1
and r8, 0xFFFF
o10e6:
cmp byte [tape + r8], 0
jz c10e6
add r8, 1
and r8, 0xFFFF
o10e7:
cmp byte [tape + r8], 0
jz c10e7
add r8, 2
and r8, 0xFFFF
jmp o10e7
c10e7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o10e8:
cmp byte [tape + r8], 0
jz c10e8
sub r8, 2
and r8, 0xFFFF
jmp o10e8
c10e8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10e6
c10e6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10e9:
cmp byte [tape + r8], 0
jz c10e9
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10e9
c10e9:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o10ea:
cmp byte [tape + r8], 0
jz c10ea
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o10ea
c10ea:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
o10eb:
cmp byte [tape + r8], 0
jz c10eb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o10eb
c10eb:
add r8, 1
and r8, 0xFFFF
o10ec:
cmp byte [tape + r8], 0
jz c10ec
sub r8, 3
and r8, 0xFFFF
o10ed:
cmp byte [tape + r8], 0
jz c10ed
sub r8, 2
and r8, 0xFFFF
jmp o10ed
c10ed:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10ee:
cmp byte [tape + r8], 0
jz c10ee
add r8, 2
and r8, 0xFFFF
jmp o10ee
c10ee:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10ec
c10ec:
sub r8, 3
and r8, 0xFFFF
o10ef:
cmp byte [tape + r8], 0
jz c10ef
sub r8, 2
and r8, 0xFFFF
jmp o10ef
c10ef:
add r8, 1
and r8, 0xFFFF
o10f0:
cmp byte [tape + r8], 0
jz c10f0
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10f0
c10f0:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o10f1:
cmp byte [tape + r8], 0
jz c10f1
add r8, 2
and r8, 0xFFFF
jmp o10f1
c10f1:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o10f2:
cmp byte [tape + r8], 0
jz c10f2
sub r8, 2
and r8, 0xFFFF
jmp o10f2
c10f2:
add r8, 1
and r8, 0xFFFF
o10f3:
cmp byte [tape + r8], 0
jz c10f3
add r8, 1
and r8, 0xFFFF
o10f4:
cmp byte [tape + r8], 0
jz c10f4
add r8, 2
and r8, 0xFFFF
jmp o10f4
c10f4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o10f5:
cmp byte [tape + r8], 0
jz c10f5
sub r8, 2
and r8, 0xFFFF
jmp o10f5
c10f5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10f3
c10f3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o10f6:
cmp byte [tape + r8], 0
jz c10f6
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10f6
c10f6:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o10f7:
cmp byte [tape + r8], 0
jz c10f7
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o10f7
c10f7:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o10f8:
cmp byte [tape + r8], 0
jz c10f8
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o10f8
c10f8:
add r8, 9
and r8, 0xFFFF
o10f9:
cmp byte [tape + r8], 0
jz c10f9
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10f9
c10f9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o10fa:
cmp byte [tape + r8], 0
jz c10fa
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o10fa
c10fa:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o10fb:
cmp byte [tape + r8], 0
jz c10fb
call z
add r8, 8
and r8, 0xFFFF
o10fc:
cmp byte [tape + r8], 0
jz c10fc
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10fc
c10fc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o10fd:
cmp byte [tape + r8], 0
jz c10fd
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o10fd
c10fd:
jmp o10fb
c10fb:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o10fe:
cmp byte [tape + r8], 0
jz c10fe
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10fe
c10fe:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o10ff:
cmp byte [tape + r8], 0
jz c10ff
add r8, 414
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 423
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o10ff
c10ff:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o10d4
c10d4:
sub r8, 1
and r8, 0xFFFF
o1100:
cmp byte [tape + r8], 0
jz c1100
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1100
c1100:
add r8, 1
and r8, 0xFFFF
o1101:
cmp byte [tape + r8], 0
jz c1101
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o1102:
cmp byte [tape + r8], 0
jz c1102
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1102
c1102:
add r8, 1
and r8, 0xFFFF
o1103:
cmp byte [tape + r8], 0
jz c1103
sub r8, 3
and r8, 0xFFFF
o1104:
cmp byte [tape + r8], 0
jz c1104
sub r8, 2
and r8, 0xFFFF
jmp o1104
c1104:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1105:
cmp byte [tape + r8], 0
jz c1105
add r8, 2
and r8, 0xFFFF
jmp o1105
c1105:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1103
c1103:
sub r8, 3
and r8, 0xFFFF
o1106:
cmp byte [tape + r8], 0
jz c1106
sub r8, 2
and r8, 0xFFFF
jmp o1106
c1106:
add r8, 1
and r8, 0xFFFF
o1107:
cmp byte [tape + r8], 0
jz c1107
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1107
c1107:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1108:
cmp byte [tape + r8], 0
jz c1108
add r8, 2
and r8, 0xFFFF
jmp o1108
c1108:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1109:
cmp byte [tape + r8], 0
jz c1109
sub r8, 2
and r8, 0xFFFF
jmp o1109
c1109:
add r8, 1
and r8, 0xFFFF
o110a:
cmp byte [tape + r8], 0
jz c110a
add r8, 1
and r8, 0xFFFF
o110b:
cmp byte [tape + r8], 0
jz c110b
add r8, 2
and r8, 0xFFFF
jmp o110b
c110b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o110c:
cmp byte [tape + r8], 0
jz c110c
sub r8, 2
and r8, 0xFFFF
jmp o110c
c110c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o110a
c110a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o110d:
cmp byte [tape + r8], 0
jz c110d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o110d
c110d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o110e:
cmp byte [tape + r8], 0
jz c110e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o110e
c110e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o110f:
cmp byte [tape + r8], 0
jz c110f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o110f
c110f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1110:
cmp byte [tape + r8], 0
jz c1110
add r8, 415
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 424
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1110
c1110:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1101
c1101:
sub r8, 1
and r8, 0xFFFF
o1111:
cmp byte [tape + r8], 0
jz c1111
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1111
c1111:
add r8, 1
and r8, 0xFFFF
o1112:
cmp byte [tape + r8], 0
jz c1112
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o1113:
cmp byte [tape + r8], 0
jz c1113
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1113
c1113:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o1114:
cmp byte [tape + r8], 0
jz c1114
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1114
c1114:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 14
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1115:
cmp byte [tape + r8], 0
jz c1115
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1115
c1115:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1116:
cmp byte [tape + r8], 0
jz c1116
sub r8, 2
and r8, 0xFFFF
jmp o1116
c1116:
add r8, 1
and r8, 0xFFFF
o1117:
cmp byte [tape + r8], 0
jz c1117
add r8, 1
and r8, 0xFFFF
o1118:
cmp byte [tape + r8], 0
jz c1118
add r8, 2
and r8, 0xFFFF
jmp o1118
c1118:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1119:
cmp byte [tape + r8], 0
jz c1119
sub r8, 2
and r8, 0xFFFF
jmp o1119
c1119:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1117
c1117:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 45
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1112
c1112:
add r8, 423
and r8, 0xFFFF
push 1
push 424
call ms
sub r8, 424
and r8, 0xFFFF
o111a:
cmp byte [tape + r8], 0
jz c111a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o111a
c111a:
add r8, 1
and r8, 0xFFFF
o111b:
cmp byte [tape + r8], 0
jz c111b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o111c:
cmp byte [tape + r8], 0
jz c111c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o111c
c111c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o111b
c111b:
add r8, 422
and r8, 0xFFFF
push 1
push 423
call ms
sub r8, 423
and r8, 0xFFFF
o111d:
cmp byte [tape + r8], 0
jz c111d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o111d
c111d:
add r8, 1
and r8, 0xFFFF
o111e:
cmp byte [tape + r8], 0
jz c111e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o111f:
cmp byte [tape + r8], 0
jz c111f
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o111f
c111f:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1120:
cmp byte [tape + r8], 0
jz c1120
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1120
c1120:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1121:
cmp byte [tape + r8], 0
jz c1121
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1121
c1121:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o1122:
cmp byte [tape + r8], 0
jz c1122
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1122
c1122:
add r8, 1
and r8, 0xFFFF
o1123:
cmp byte [tape + r8], 0
jz c1123
sub r8, 3
and r8, 0xFFFF
o1124:
cmp byte [tape + r8], 0
jz c1124
sub r8, 2
and r8, 0xFFFF
jmp o1124
c1124:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1125:
cmp byte [tape + r8], 0
jz c1125
add r8, 2
and r8, 0xFFFF
jmp o1125
c1125:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1123
c1123:
sub r8, 3
and r8, 0xFFFF
o1126:
cmp byte [tape + r8], 0
jz c1126
sub r8, 2
and r8, 0xFFFF
jmp o1126
c1126:
add r8, 1
and r8, 0xFFFF
o1127:
cmp byte [tape + r8], 0
jz c1127
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1127
c1127:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1128:
cmp byte [tape + r8], 0
jz c1128
add r8, 2
and r8, 0xFFFF
jmp o1128
c1128:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1129:
cmp byte [tape + r8], 0
jz c1129
sub r8, 2
and r8, 0xFFFF
jmp o1129
c1129:
add r8, 1
and r8, 0xFFFF
o112a:
cmp byte [tape + r8], 0
jz c112a
add r8, 1
and r8, 0xFFFF
o112b:
cmp byte [tape + r8], 0
jz c112b
add r8, 2
and r8, 0xFFFF
jmp o112b
c112b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o112c:
cmp byte [tape + r8], 0
jz c112c
sub r8, 2
and r8, 0xFFFF
jmp o112c
c112c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o112a
c112a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o112d:
cmp byte [tape + r8], 0
jz c112d
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o112d
c112d:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o112e:
cmp byte [tape + r8], 0
jz c112e
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o112e
c112e:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
o112f:
cmp byte [tape + r8], 0
jz c112f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o112f
c112f:
add r8, 1
and r8, 0xFFFF
o1130:
cmp byte [tape + r8], 0
jz c1130
sub r8, 3
and r8, 0xFFFF
o1131:
cmp byte [tape + r8], 0
jz c1131
sub r8, 2
and r8, 0xFFFF
jmp o1131
c1131:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1132:
cmp byte [tape + r8], 0
jz c1132
add r8, 2
and r8, 0xFFFF
jmp o1132
c1132:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1130
c1130:
sub r8, 3
and r8, 0xFFFF
o1133:
cmp byte [tape + r8], 0
jz c1133
sub r8, 2
and r8, 0xFFFF
jmp o1133
c1133:
add r8, 1
and r8, 0xFFFF
o1134:
cmp byte [tape + r8], 0
jz c1134
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1134
c1134:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1135:
cmp byte [tape + r8], 0
jz c1135
add r8, 2
and r8, 0xFFFF
jmp o1135
c1135:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1136:
cmp byte [tape + r8], 0
jz c1136
sub r8, 2
and r8, 0xFFFF
jmp o1136
c1136:
add r8, 1
and r8, 0xFFFF
o1137:
cmp byte [tape + r8], 0
jz c1137
add r8, 1
and r8, 0xFFFF
o1138:
cmp byte [tape + r8], 0
jz c1138
add r8, 2
and r8, 0xFFFF
jmp o1138
c1138:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1139:
cmp byte [tape + r8], 0
jz c1139
sub r8, 2
and r8, 0xFFFF
jmp o1139
c1139:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1137
c1137:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 34
and r8, 0xFFFF
call z
add r8, 25
and r8, 0xFFFF
o113a:
cmp byte [tape + r8], 0
jz c113a
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o113a
c113a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o113b:
cmp byte [tape + r8], 0
jz c113b
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o113b
c113b:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o113c:
cmp byte [tape + r8], 0
jz c113c
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o113c
c113c:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o113d:
cmp byte [tape + r8], 0
jz c113d
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o113d
c113d:
add r8, 9
and r8, 0xFFFF
o113e:
cmp byte [tape + r8], 0
jz c113e
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o113e
c113e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o113f:
cmp byte [tape + r8], 0
jz c113f
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o113f
c113f:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1140:
cmp byte [tape + r8], 0
jz c1140
call z
add r8, 8
and r8, 0xFFFF
o1141:
cmp byte [tape + r8], 0
jz c1141
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1141
c1141:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1142:
cmp byte [tape + r8], 0
jz c1142
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1142
c1142:
jmp o1140
c1140:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1143:
cmp byte [tape + r8], 0
jz c1143
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1143
c1143:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1144:
cmp byte [tape + r8], 0
jz c1144
add r8, 416
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 425
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1144
c1144:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o111e
c111e:
sub r8, 1
and r8, 0xFFFF
o1145:
cmp byte [tape + r8], 0
jz c1145
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1145
c1145:
add r8, 1
and r8, 0xFFFF
o1146:
cmp byte [tape + r8], 0
jz c1146
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o1147:
cmp byte [tape + r8], 0
jz c1147
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1147
c1147:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
o1148:
cmp byte [tape + r8], 0
jz c1148
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1148
c1148:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1149:
cmp byte [tape + r8], 0
jz c1149
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1149
c1149:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o114a:
cmp byte [tape + r8], 0
jz c114a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o114a
c114a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o114b:
cmp byte [tape + r8], 0
jz c114b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o114b
c114b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o114c:
cmp byte [tape + r8], 0
jz c114c
add r8, 417
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 426
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o114c
c114c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1146
c1146:
sub r8, 1
and r8, 0xFFFF
o114d:
cmp byte [tape + r8], 0
jz c114d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o114d
c114d:
add r8, 1
and r8, 0xFFFF
o114e:
cmp byte [tape + r8], 0
jz c114e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o114f:
cmp byte [tape + r8], 0
jz c114f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o114f
c114f:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 425
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 427
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o114e
c114e:
add r8, 425
and r8, 0xFFFF
push 1
push 426
call ms
sub r8, 426
and r8, 0xFFFF
o1150:
cmp byte [tape + r8], 0
jz c1150
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1150
c1150:
add r8, 1
and r8, 0xFFFF
o1151:
cmp byte [tape + r8], 0
jz c1151
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1152:
cmp byte [tape + r8], 0
jz c1152
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1152
c1152:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1151
c1151:
add r8, 426
and r8, 0xFFFF
push 1
push 427
call ms
sub r8, 427
and r8, 0xFFFF
o1153:
cmp byte [tape + r8], 0
jz c1153
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1153
c1153:
add r8, 1
and r8, 0xFFFF
o1154:
cmp byte [tape + r8], 0
jz c1154
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o1155:
cmp byte [tape + r8], 0
jz c1155
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1155
c1155:
add r8, 1
and r8, 0xFFFF
o1156:
cmp byte [tape + r8], 0
jz c1156
sub r8, 3
and r8, 0xFFFF
o1157:
cmp byte [tape + r8], 0
jz c1157
sub r8, 2
and r8, 0xFFFF
jmp o1157
c1157:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1158:
cmp byte [tape + r8], 0
jz c1158
add r8, 2
and r8, 0xFFFF
jmp o1158
c1158:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1156
c1156:
sub r8, 3
and r8, 0xFFFF
o1159:
cmp byte [tape + r8], 0
jz c1159
sub r8, 2
and r8, 0xFFFF
jmp o1159
c1159:
add r8, 1
and r8, 0xFFFF
o115a:
cmp byte [tape + r8], 0
jz c115a
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o115a
c115a:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o115b:
cmp byte [tape + r8], 0
jz c115b
add r8, 2
and r8, 0xFFFF
jmp o115b
c115b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o115c:
cmp byte [tape + r8], 0
jz c115c
sub r8, 2
and r8, 0xFFFF
jmp o115c
c115c:
add r8, 1
and r8, 0xFFFF
o115d:
cmp byte [tape + r8], 0
jz c115d
add r8, 1
and r8, 0xFFFF
o115e:
cmp byte [tape + r8], 0
jz c115e
add r8, 2
and r8, 0xFFFF
jmp o115e
c115e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o115f:
cmp byte [tape + r8], 0
jz c115f
sub r8, 2
and r8, 0xFFFF
jmp o115f
c115f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o115d
c115d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1160:
cmp byte [tape + r8], 0
jz c1160
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1160
c1160:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1161:
cmp byte [tape + r8], 0
jz c1161
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1161
c1161:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1162:
cmp byte [tape + r8], 0
jz c1162
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1162
c1162:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1163:
cmp byte [tape + r8], 0
jz c1163
add r8, 419
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 428
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1163
c1163:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1154
c1154:
sub r8, 1
and r8, 0xFFFF
o1164:
cmp byte [tape + r8], 0
jz c1164
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1164
c1164:
add r8, 1
and r8, 0xFFFF
o1165:
cmp byte [tape + r8], 0
jz c1165
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o1166:
cmp byte [tape + r8], 0
jz c1166
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1166
c1166:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o1167:
cmp byte [tape + r8], 0
jz c1167
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1167
c1167:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1165
c1165:
add r8, 427
and r8, 0xFFFF
push 1
push 428
call ms
sub r8, 428
and r8, 0xFFFF
o1168:
cmp byte [tape + r8], 0
jz c1168
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1168
c1168:
add r8, 1
and r8, 0xFFFF
o1169:
cmp byte [tape + r8], 0
jz c1169
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 11
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o116a:
cmp byte [tape + r8], 0
jz c116a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o116a
c116a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o116b:
cmp byte [tape + r8], 0
jz c116b
sub r8, 2
and r8, 0xFFFF
jmp o116b
c116b:
add r8, 1
and r8, 0xFFFF
o116c:
cmp byte [tape + r8], 0
jz c116c
add r8, 1
and r8, 0xFFFF
o116d:
cmp byte [tape + r8], 0
jz c116d
add r8, 2
and r8, 0xFFFF
jmp o116d
c116d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o116e:
cmp byte [tape + r8], 0
jz c116e
sub r8, 2
and r8, 0xFFFF
jmp o116e
c116e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o116c
c116c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1169
c1169:
add r8, 424
and r8, 0xFFFF
push 1
push 425
call ms
sub r8, 425
and r8, 0xFFFF
o116f:
cmp byte [tape + r8], 0
jz c116f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o116f
c116f:
add r8, 1
and r8, 0xFFFF
o1170:
cmp byte [tape + r8], 0
jz c1170
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1171:
cmp byte [tape + r8], 0
jz c1171
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1171
c1171:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1172:
cmp byte [tape + r8], 0
jz c1172
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1172
c1172:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1173:
cmp byte [tape + r8], 0
jz c1173
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1173
c1173:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o1174:
cmp byte [tape + r8], 0
jz c1174
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1174
c1174:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1175:
cmp byte [tape + r8], 0
jz c1175
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1175
c1175:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1176:
cmp byte [tape + r8], 0
jz c1176
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1176
c1176:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1177:
cmp byte [tape + r8], 0
jz c1177
call z
add r8, 8
and r8, 0xFFFF
o1178:
cmp byte [tape + r8], 0
jz c1178
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1178
c1178:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1179:
cmp byte [tape + r8], 0
jz c1179
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1179
c1179:
jmp o1177
c1177:
add r8, 8
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
o117a:
cmp byte [tape + r8], 0
jz c117a
sub r8, 16
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o117a
c117a:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o117b:
cmp byte [tape + r8], 0
jz c117b
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o117b
c117b:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o117c:
cmp byte [tape + r8], 0
jz c117c
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o117c
c117c:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o117d:
cmp byte [tape + r8], 0
jz c117d
call z
add r8, 8
and r8, 0xFFFF
o117e:
cmp byte [tape + r8], 0
jz c117e
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o117e
c117e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o117f:
cmp byte [tape + r8], 0
jz c117f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o117f
c117f:
jmp o117d
c117d:
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o1180:
cmp byte [tape + r8], 0
jz c1180
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1180
c1180:
add r8, 1
and r8, 0xFFFF
o1181:
cmp byte [tape + r8], 0
jz c1181
sub r8, 3
and r8, 0xFFFF
o1182:
cmp byte [tape + r8], 0
jz c1182
sub r8, 2
and r8, 0xFFFF
jmp o1182
c1182:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1183:
cmp byte [tape + r8], 0
jz c1183
add r8, 2
and r8, 0xFFFF
jmp o1183
c1183:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1181
c1181:
sub r8, 3
and r8, 0xFFFF
o1184:
cmp byte [tape + r8], 0
jz c1184
sub r8, 2
and r8, 0xFFFF
jmp o1184
c1184:
add r8, 1
and r8, 0xFFFF
o1185:
cmp byte [tape + r8], 0
jz c1185
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1185
c1185:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1186:
cmp byte [tape + r8], 0
jz c1186
add r8, 2
and r8, 0xFFFF
jmp o1186
c1186:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1187:
cmp byte [tape + r8], 0
jz c1187
sub r8, 2
and r8, 0xFFFF
jmp o1187
c1187:
add r8, 1
and r8, 0xFFFF
o1188:
cmp byte [tape + r8], 0
jz c1188
add r8, 1
and r8, 0xFFFF
o1189:
cmp byte [tape + r8], 0
jz c1189
add r8, 2
and r8, 0xFFFF
jmp o1189
c1189:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o118a:
cmp byte [tape + r8], 0
jz c118a
sub r8, 2
and r8, 0xFFFF
jmp o118a
c118a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1188
c1188:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o118b:
cmp byte [tape + r8], 0
jz c118b
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o118b
c118b:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o118c:
cmp byte [tape + r8], 0
jz c118c
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o118c
c118c:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
call z
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 35
and r8, 0xFFFF
o118d:
cmp byte [tape + r8], 0
jz c118d
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o118d
c118d:
add r8, 1
and r8, 0xFFFF
o118e:
cmp byte [tape + r8], 0
jz c118e
sub r8, 3
and r8, 0xFFFF
o118f:
cmp byte [tape + r8], 0
jz c118f
sub r8, 2
and r8, 0xFFFF
jmp o118f
c118f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1190:
cmp byte [tape + r8], 0
jz c1190
add r8, 2
and r8, 0xFFFF
jmp o1190
c1190:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o118e
c118e:
sub r8, 3
and r8, 0xFFFF
o1191:
cmp byte [tape + r8], 0
jz c1191
sub r8, 2
and r8, 0xFFFF
jmp o1191
c1191:
add r8, 1
and r8, 0xFFFF
o1192:
cmp byte [tape + r8], 0
jz c1192
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1192
c1192:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1193:
cmp byte [tape + r8], 0
jz c1193
add r8, 2
and r8, 0xFFFF
jmp o1193
c1193:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1194:
cmp byte [tape + r8], 0
jz c1194
sub r8, 2
and r8, 0xFFFF
jmp o1194
c1194:
add r8, 1
and r8, 0xFFFF
o1195:
cmp byte [tape + r8], 0
jz c1195
add r8, 1
and r8, 0xFFFF
o1196:
cmp byte [tape + r8], 0
jz c1196
add r8, 2
and r8, 0xFFFF
jmp o1196
c1196:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1197:
cmp byte [tape + r8], 0
jz c1197
sub r8, 2
and r8, 0xFFFF
jmp o1197
c1197:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1195
c1195:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 34
and r8, 0xFFFF
call z
add r8, 25
and r8, 0xFFFF
o1198:
cmp byte [tape + r8], 0
jz c1198
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1198
c1198:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 9
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1199:
cmp byte [tape + r8], 0
jz c1199
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1199
c1199:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o119a:
cmp byte [tape + r8], 0
jz c119a
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o119a
c119a:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o119b:
cmp byte [tape + r8], 0
jz c119b
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o119b
c119b:
add r8, 9
and r8, 0xFFFF
o119c:
cmp byte [tape + r8], 0
jz c119c
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o119c
c119c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o119d:
cmp byte [tape + r8], 0
jz c119d
add r8, 8
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o119d
c119d:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o119e:
cmp byte [tape + r8], 0
jz c119e
call z
add r8, 8
and r8, 0xFFFF
o119f:
cmp byte [tape + r8], 0
jz c119f
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o119f
c119f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o11a0:
cmp byte [tape + r8], 0
jz c11a0
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o11a0
c11a0:
jmp o119e
c119e:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o11a1:
cmp byte [tape + r8], 0
jz c11a1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a1
c11a1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o11a2:
cmp byte [tape + r8], 0
jz c11a2
add r8, 420
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 429
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o11a2
c11a2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1170
c1170:
sub r8, 1
and r8, 0xFFFF
o11a3:
cmp byte [tape + r8], 0
jz c11a3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a3
c11a3:
add r8, 1
and r8, 0xFFFF
o11a4:
cmp byte [tape + r8], 0
jz c11a4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o11a5:
cmp byte [tape + r8], 0
jz c11a5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a5
c11a5:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a4
c11a4:
add r8, 428
and r8, 0xFFFF
push 1
push 429
call ms
sub r8, 429
and r8, 0xFFFF
o11a6:
cmp byte [tape + r8], 0
jz c11a6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a6
c11a6:
add r8, 1
and r8, 0xFFFF
o11a7:
cmp byte [tape + r8], 0
jz c11a7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
o11a8:
cmp byte [tape + r8], 0
jz c11a8
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a8
c11a8:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11a9:
cmp byte [tape + r8], 0
jz c11a9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a9
c11a9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o11aa:
cmp byte [tape + r8], 0
jz c11aa
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o11aa
c11aa:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o11ab:
cmp byte [tape + r8], 0
jz c11ab
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11ab
c11ab:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o11ac:
cmp byte [tape + r8], 0
jz c11ac
add r8, 421
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 430
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o11ac
c11ac:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11a7
c11a7:
sub r8, 1
and r8, 0xFFFF
o11ad:
cmp byte [tape + r8], 0
jz c11ad
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11ad
c11ad:
add r8, 1
and r8, 0xFFFF
o11ae:
cmp byte [tape + r8], 0
jz c11ae
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 7
call m
add r8, 17
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
call z
add byte [tape + r8], 8
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 7
call m
add r8, 30
and r8, 0xFFFF
call z
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11ae
c11ae:
add r8, 429
and r8, 0xFFFF
push 1
push 430
call ms
sub r8, 15
and r8, 0xFFFF
push 1
push 415
call ms
sub r8, 415
and r8, 0xFFFF
o11af:
cmp byte [tape + r8], 0
jz c11af
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11af
c11af:
add r8, 1
and r8, 0xFFFF
o11b0:
cmp byte [tape + r8], 0
jz c11b0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o11b1:
cmp byte [tape + r8], 0
jz c11b1
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11b1
c11b1:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11b2:
cmp byte [tape + r8], 0
jz c11b2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11b2
c11b2:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o11b3:
cmp byte [tape + r8], 0
jz c11b3
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o11b3
c11b3:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o11b4:
cmp byte [tape + r8], 0
jz c11b4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11b4
c11b4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o11b5:
cmp byte [tape + r8], 0
jz c11b5
add r8, 422
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 431
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o11b5
c11b5:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11b0
c11b0:
sub r8, 1
and r8, 0xFFFF
o11b6:
cmp byte [tape + r8], 0
jz c11b6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11b6
c11b6:
add r8, 1
and r8, 0xFFFF
o11b7:
cmp byte [tape + r8], 0
jz c11b7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
o11b8:
cmp byte [tape + r8], 0
jz c11b8
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11b8
c11b8:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o11b9:
cmp byte [tape + r8], 0
jz c11b9
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o11b9
c11b9:
add r8, 1
and r8, 0xFFFF
o11ba:
cmp byte [tape + r8], 0
jz c11ba
sub r8, 3
and r8, 0xFFFF
o11bb:
cmp byte [tape + r8], 0
jz c11bb
sub r8, 2
and r8, 0xFFFF
jmp o11bb
c11bb:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11bc:
cmp byte [tape + r8], 0
jz c11bc
add r8, 2
and r8, 0xFFFF
jmp o11bc
c11bc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11ba
c11ba:
sub r8, 3
and r8, 0xFFFF
o11bd:
cmp byte [tape + r8], 0
jz c11bd
sub r8, 2
and r8, 0xFFFF
jmp o11bd
c11bd:
add r8, 1
and r8, 0xFFFF
o11be:
cmp byte [tape + r8], 0
jz c11be
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11be
c11be:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o11bf:
cmp byte [tape + r8], 0
jz c11bf
add r8, 2
and r8, 0xFFFF
jmp o11bf
c11bf:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o11c0:
cmp byte [tape + r8], 0
jz c11c0
sub r8, 2
and r8, 0xFFFF
jmp o11c0
c11c0:
add r8, 1
and r8, 0xFFFF
o11c1:
cmp byte [tape + r8], 0
jz c11c1
add r8, 1
and r8, 0xFFFF
o11c2:
cmp byte [tape + r8], 0
jz c11c2
add r8, 2
and r8, 0xFFFF
jmp o11c2
c11c2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o11c3:
cmp byte [tape + r8], 0
jz c11c3
sub r8, 2
and r8, 0xFFFF
jmp o11c3
c11c3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11c1
c11c1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o11c4:
cmp byte [tape + r8], 0
jz c11c4
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11c4
c11c4:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11c5:
cmp byte [tape + r8], 0
jz c11c5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11c5
c11c5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o11c6:
cmp byte [tape + r8], 0
jz c11c6
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o11c6
c11c6:
add r8, 7
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o11c7:
cmp byte [tape + r8], 0
jz c11c7
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 30
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11c7
c11c7:
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
add r8, 1
and r8, 0xFFFF
o11c8:
cmp byte [tape + r8], 0
jz c11c8
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11c8
c11c8:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o11c9:
cmp byte [tape + r8], 0
jz c11c9
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o11c9
c11c9:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o11ca:
cmp byte [tape + r8], 0
jz c11ca
call z
add r8, 8
and r8, 0xFFFF
o11cb:
cmp byte [tape + r8], 0
jz c11cb
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11cb
c11cb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o11cc:
cmp byte [tape + r8], 0
jz c11cc
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o11cc
c11cc:
jmp o11ca
c11ca:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o11cd:
cmp byte [tape + r8], 0
jz c11cd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11cd
c11cd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o11ce:
cmp byte [tape + r8], 0
jz c11ce
add r8, 423
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 432
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o11ce
c11ce:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11b7
c11b7:
sub r8, 1
and r8, 0xFFFF
o11cf:
cmp byte [tape + r8], 0
jz c11cf
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11cf
c11cf:
add r8, 1
and r8, 0xFFFF
o11d0:
cmp byte [tape + r8], 0
jz c11d0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o11d1:
cmp byte [tape + r8], 0
jz c11d1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11d1
c11d1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11d0
c11d0:
add r8, 431
and r8, 0xFFFF
push 1
push 432
call ms
sub r8, 432
and r8, 0xFFFF
o11d2:
cmp byte [tape + r8], 0
jz c11d2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11d2
c11d2:
add r8, 1
and r8, 0xFFFF
o11d3:
cmp byte [tape + r8], 0
jz c11d3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o11d4:
cmp byte [tape + r8], 0
jz c11d4
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11d4
c11d4:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o11d5:
cmp byte [tape + r8], 0
jz c11d5
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o11d5
c11d5:
add r8, 1
and r8, 0xFFFF
o11d6:
cmp byte [tape + r8], 0
jz c11d6
sub r8, 3
and r8, 0xFFFF
o11d7:
cmp byte [tape + r8], 0
jz c11d7
sub r8, 2
and r8, 0xFFFF
jmp o11d7
c11d7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11d8:
cmp byte [tape + r8], 0
jz c11d8
add r8, 2
and r8, 0xFFFF
jmp o11d8
c11d8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11d6
c11d6:
sub r8, 3
and r8, 0xFFFF
o11d9:
cmp byte [tape + r8], 0
jz c11d9
sub r8, 2
and r8, 0xFFFF
jmp o11d9
c11d9:
add r8, 1
and r8, 0xFFFF
o11da:
cmp byte [tape + r8], 0
jz c11da
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11da
c11da:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o11db:
cmp byte [tape + r8], 0
jz c11db
add r8, 2
and r8, 0xFFFF
jmp o11db
c11db:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o11dc:
cmp byte [tape + r8], 0
jz c11dc
sub r8, 2
and r8, 0xFFFF
jmp o11dc
c11dc:
add r8, 1
and r8, 0xFFFF
o11dd:
cmp byte [tape + r8], 0
jz c11dd
add r8, 1
and r8, 0xFFFF
o11de:
cmp byte [tape + r8], 0
jz c11de
add r8, 2
and r8, 0xFFFF
jmp o11de
c11de:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o11df:
cmp byte [tape + r8], 0
jz c11df
sub r8, 2
and r8, 0xFFFF
jmp o11df
c11df:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11dd
c11dd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11e0:
cmp byte [tape + r8], 0
jz c11e0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11e0
c11e0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o11e1:
cmp byte [tape + r8], 0
jz c11e1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o11e1
c11e1:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o11e2:
cmp byte [tape + r8], 0
jz c11e2
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11e2
c11e2:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o11e3:
cmp byte [tape + r8], 0
jz c11e3
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o11e3
c11e3:
add r8, 1
and r8, 0xFFFF
o11e4:
cmp byte [tape + r8], 0
jz c11e4
sub r8, 3
and r8, 0xFFFF
o11e5:
cmp byte [tape + r8], 0
jz c11e5
sub r8, 2
and r8, 0xFFFF
jmp o11e5
c11e5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11e6:
cmp byte [tape + r8], 0
jz c11e6
add r8, 2
and r8, 0xFFFF
jmp o11e6
c11e6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11e4
c11e4:
sub r8, 3
and r8, 0xFFFF
o11e7:
cmp byte [tape + r8], 0
jz c11e7
sub r8, 2
and r8, 0xFFFF
jmp o11e7
c11e7:
add r8, 1
and r8, 0xFFFF
o11e8:
cmp byte [tape + r8], 0
jz c11e8
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11e8
c11e8:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o11e9:
cmp byte [tape + r8], 0
jz c11e9
add r8, 2
and r8, 0xFFFF
jmp o11e9
c11e9:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o11ea:
cmp byte [tape + r8], 0
jz c11ea
sub r8, 2
and r8, 0xFFFF
jmp o11ea
c11ea:
add r8, 1
and r8, 0xFFFF
o11eb:
cmp byte [tape + r8], 0
jz c11eb
add r8, 1
and r8, 0xFFFF
o11ec:
cmp byte [tape + r8], 0
jz c11ec
add r8, 2
and r8, 0xFFFF
jmp o11ec
c11ec:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o11ed:
cmp byte [tape + r8], 0
jz c11ed
sub r8, 2
and r8, 0xFFFF
jmp o11ed
c11ed:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11eb
c11eb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 35
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
o11ee:
cmp byte [tape + r8], 0
jz c11ee
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11ee
c11ee:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11ef:
cmp byte [tape + r8], 0
jz c11ef
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11ef
c11ef:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o11f0:
cmp byte [tape + r8], 0
jz c11f0
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o11f0
c11f0:
add r8, 8
and r8, 0xFFFF
call z
add r8, 21
and r8, 0xFFFF
o11f1:
cmp byte [tape + r8], 0
jz c11f1
sub r8, 21
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 30
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11f1
c11f1:
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
add r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 10
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 10
call m
add r8, 9
and r8, 0xFFFF
push 1
push 8
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o11f2:
cmp byte [tape + r8], 0
jz c11f2
sub r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 10
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11f2
c11f2:
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
add r8, 1
and r8, 0xFFFF
o11f3:
cmp byte [tape + r8], 0
jz c11f3
add r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o11f3
c11f3:
add r8, 7
and r8, 0xFFFF
push 1
push 8
call ms
sub r8, 8
and r8, 0xFFFF
o11f4:
cmp byte [tape + r8], 0
jz c11f4
call z
add r8, 9
and r8, 0xFFFF
o11f5:
cmp byte [tape + r8], 0
jz c11f5
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11f5
c11f5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 1
and r8, 0xFFFF
o11f6:
cmp byte [tape + r8], 0
jz c11f6
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
jmp o11f6
c11f6:
jmp o11f4
c11f4:
add r8, 7
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o11f7:
cmp byte [tape + r8], 0
jz c11f7
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o11f7
c11f7:
add r8, 8
and r8, 0xFFFF
o11f8:
cmp byte [tape + r8], 0
jz c11f8
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11f8
c11f8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o11f9:
cmp byte [tape + r8], 0
jz c11f9
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o11f9
c11f9:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o11fa:
cmp byte [tape + r8], 0
jz c11fa
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11fa
c11fa:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o11fb:
cmp byte [tape + r8], 0
jz c11fb
add r8, 424
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 433
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o11fb
c11fb:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11d3
c11d3:
sub r8, 1
and r8, 0xFFFF
o11fc:
cmp byte [tape + r8], 0
jz c11fc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11fc
c11fc:
add r8, 1
and r8, 0xFFFF
o11fd:
cmp byte [tape + r8], 0
jz c11fd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o11fe:
cmp byte [tape + r8], 0
jz c11fe
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11fe
c11fe:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o11ff:
cmp byte [tape + r8], 0
jz c11ff
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o11ff
c11ff:
add r8, 1
and r8, 0xFFFF
o1200:
cmp byte [tape + r8], 0
jz c1200
sub r8, 3
and r8, 0xFFFF
o1201:
cmp byte [tape + r8], 0
jz c1201
sub r8, 2
and r8, 0xFFFF
jmp o1201
c1201:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1202:
cmp byte [tape + r8], 0
jz c1202
add r8, 2
and r8, 0xFFFF
jmp o1202
c1202:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1200
c1200:
sub r8, 3
and r8, 0xFFFF
o1203:
cmp byte [tape + r8], 0
jz c1203
sub r8, 2
and r8, 0xFFFF
jmp o1203
c1203:
add r8, 1
and r8, 0xFFFF
o1204:
cmp byte [tape + r8], 0
jz c1204
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1204
c1204:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1205:
cmp byte [tape + r8], 0
jz c1205
add r8, 2
and r8, 0xFFFF
jmp o1205
c1205:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1206:
cmp byte [tape + r8], 0
jz c1206
sub r8, 2
and r8, 0xFFFF
jmp o1206
c1206:
add r8, 1
and r8, 0xFFFF
o1207:
cmp byte [tape + r8], 0
jz c1207
add r8, 1
and r8, 0xFFFF
o1208:
cmp byte [tape + r8], 0
jz c1208
add r8, 2
and r8, 0xFFFF
jmp o1208
c1208:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1209:
cmp byte [tape + r8], 0
jz c1209
sub r8, 2
and r8, 0xFFFF
jmp o1209
c1209:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1207
c1207:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o120a:
cmp byte [tape + r8], 0
jz c120a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o120a
c120a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o120b:
cmp byte [tape + r8], 0
jz c120b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o120b
c120b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o120c:
cmp byte [tape + r8], 0
jz c120c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o120c
c120c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o120d:
cmp byte [tape + r8], 0
jz c120d
add r8, 425
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 434
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o120d
c120d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o11fd
c11fd:
sub r8, 1
and r8, 0xFFFF
o120e:
cmp byte [tape + r8], 0
jz c120e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o120e
c120e:
add r8, 1
and r8, 0xFFFF
o120f:
cmp byte [tape + r8], 0
jz c120f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o1210:
cmp byte [tape + r8], 0
jz c1210
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1210
c1210:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o1211:
cmp byte [tape + r8], 0
jz c1211
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1211
c1211:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o120f
c120f:
add r8, 433
and r8, 0xFFFF
push 1
push 434
call ms
sub r8, 434
and r8, 0xFFFF
o1212:
cmp byte [tape + r8], 0
jz c1212
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1212
c1212:
add r8, 1
and r8, 0xFFFF
o1213:
cmp byte [tape + r8], 0
jz c1213
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1214:
cmp byte [tape + r8], 0
jz c1214
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1214
c1214:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 28
and r8, 0xFFFF
o1215:
cmp byte [tape + r8], 0
jz c1215
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1215
c1215:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1216:
cmp byte [tape + r8], 0
jz c1216
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1216
c1216:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1217:
cmp byte [tape + r8], 0
jz c1217
sub r8, 2
and r8, 0xFFFF
jmp o1217
c1217:
add r8, 1
and r8, 0xFFFF
o1218:
cmp byte [tape + r8], 0
jz c1218
add r8, 1
and r8, 0xFFFF
o1219:
cmp byte [tape + r8], 0
jz c1219
add r8, 2
and r8, 0xFFFF
jmp o1219
c1219:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o121a:
cmp byte [tape + r8], 0
jz c121a
sub r8, 2
and r8, 0xFFFF
jmp o121a
c121a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1218
c1218:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 37
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o121b:
cmp byte [tape + r8], 0
jz c121b
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o121b
c121b:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o121c:
cmp byte [tape + r8], 0
jz c121c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o121c
c121c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o121d:
cmp byte [tape + r8], 0
jz c121d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o121d
c121d:
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
o121e:
cmp byte [tape + r8], 0
jz c121e
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o121e
c121e:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o121f:
cmp byte [tape + r8], 0
jz c121f
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o121f
c121f:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1220:
cmp byte [tape + r8], 0
jz c1220
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1220
c1220:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1221:
cmp byte [tape + r8], 0
jz c1221
call z
add r8, 8
and r8, 0xFFFF
o1222:
cmp byte [tape + r8], 0
jz c1222
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1222
c1222:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1223:
cmp byte [tape + r8], 0
jz c1223
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1223
c1223:
jmp o1221
c1221:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1224:
cmp byte [tape + r8], 0
jz c1224
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1224
c1224:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1225:
cmp byte [tape + r8], 0
jz c1225
add r8, 426
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 435
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1225
c1225:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1213
c1213:
sub r8, 1
and r8, 0xFFFF
o1226:
cmp byte [tape + r8], 0
jz c1226
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1226
c1226:
add r8, 1
and r8, 0xFFFF
o1227:
cmp byte [tape + r8], 0
jz c1227
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1227
c1227:
add r8, 434
and r8, 0xFFFF
push 1
push 435
call ms
sub r8, 435
and r8, 0xFFFF
o1228:
cmp byte [tape + r8], 0
jz c1228
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1228
c1228:
add r8, 1
and r8, 0xFFFF
o1229:
cmp byte [tape + r8], 0
jz c1229
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 23
and r8, 0xFFFF
o122a:
cmp byte [tape + r8], 0
jz c122a
sub r8, 23
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 30
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o122a
c122a:
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o122b:
cmp byte [tape + r8], 0
jz c122b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o122b
c122b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o122c:
cmp byte [tape + r8], 0
jz c122c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o122c
c122c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o122d:
cmp byte [tape + r8], 0
jz c122d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o122d
c122d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o122e:
cmp byte [tape + r8], 0
jz c122e
add r8, 427
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 436
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o122e
c122e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1229
c1229:
sub r8, 1
and r8, 0xFFFF
o122f:
cmp byte [tape + r8], 0
jz c122f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o122f
c122f:
add r8, 1
and r8, 0xFFFF
o1230:
cmp byte [tape + r8], 0
jz c1230
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 12
o1231:
cmp byte [tape + r8], 0
jz c1231
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1231
c1231:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 23
and r8, 0xFFFF
call z
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
add r8, 428
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 437
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1230
c1230:
add r8, 435
and r8, 0xFFFF
push 1
push 436
call ms
sub r8, 436
and r8, 0xFFFF
o1232:
cmp byte [tape + r8], 0
jz c1232
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1232
c1232:
add r8, 1
and r8, 0xFFFF
o1233:
cmp byte [tape + r8], 0
jz c1233
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o1234:
cmp byte [tape + r8], 0
jz c1234
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1234
c1234:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1233
c1233:
add r8, 436
and r8, 0xFFFF
push 1
push 437
call ms
sub r8, 437
and r8, 0xFFFF
o1235:
cmp byte [tape + r8], 0
jz c1235
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1235
c1235:
add r8, 1
and r8, 0xFFFF
o1236:
cmp byte [tape + r8], 0
jz c1236
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
o1237:
cmp byte [tape + r8], 0
jz c1237
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1237
c1237:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1238:
cmp byte [tape + r8], 0
jz c1238
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1238
c1238:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1239:
cmp byte [tape + r8], 0
jz c1239
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1239
c1239:
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o123a:
cmp byte [tape + r8], 0
jz c123a
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o123a
c123a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o123b:
cmp byte [tape + r8], 0
jz c123b
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o123b
c123b:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o123c:
cmp byte [tape + r8], 0
jz c123c
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o123c
c123c:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o123d:
cmp byte [tape + r8], 0
jz c123d
call z
add r8, 8
and r8, 0xFFFF
o123e:
cmp byte [tape + r8], 0
jz c123e
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o123e
c123e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o123f:
cmp byte [tape + r8], 0
jz c123f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o123f
c123f:
jmp o123d
c123d:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1240:
cmp byte [tape + r8], 0
jz c1240
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1240
c1240:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1241:
cmp byte [tape + r8], 0
jz c1241
add r8, 429
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 438
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1241
c1241:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1236
c1236:
sub r8, 1
and r8, 0xFFFF
o1242:
cmp byte [tape + r8], 0
jz c1242
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1242
c1242:
add r8, 1
and r8, 0xFFFF
o1243:
cmp byte [tape + r8], 0
jz c1243
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1244:
cmp byte [tape + r8], 0
jz c1244
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1244
c1244:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o1245:
cmp byte [tape + r8], 0
jz c1245
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1245
c1245:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o1246:
cmp byte [tape + r8], 0
jz c1246
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1246
c1246:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1243
c1243:
add r8, 437
and r8, 0xFFFF
push 1
push 438
call ms
sub r8, 5
and r8, 0xFFFF
push 1
push 433
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 431
call ms
sub r8, 431
and r8, 0xFFFF
o1247:
cmp byte [tape + r8], 0
jz c1247
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1247
c1247:
add r8, 1
and r8, 0xFFFF
o1248:
cmp byte [tape + r8], 0
jz c1248
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1249:
cmp byte [tape + r8], 0
jz c1249
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1249
c1249:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o124a:
cmp byte [tape + r8], 0
jz c124a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o124a
c124a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o124b:
cmp byte [tape + r8], 0
jz c124b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o124b
c124b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o124c:
cmp byte [tape + r8], 0
jz c124c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o124c
c124c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o124d:
cmp byte [tape + r8], 0
jz c124d
add r8, 430
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 439
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o124d
c124d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1248
c1248:
sub r8, 1
and r8, 0xFFFF
o124e:
cmp byte [tape + r8], 0
jz c124e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o124e
c124e:
add r8, 1
and r8, 0xFFFF
o124f:
cmp byte [tape + r8], 0
jz c124f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 13
and r8, 0xFFFF
o1250:
cmp byte [tape + r8], 0
jz c1250
sub r8, 13
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 20
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1250
c1250:
sub r8, 20
and r8, 0xFFFF
push 1
push 20
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1251:
cmp byte [tape + r8], 0
jz c1251
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1251
c1251:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1252:
cmp byte [tape + r8], 0
jz c1252
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1252
c1252:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1253:
cmp byte [tape + r8], 0
jz c1253
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1253
c1253:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1254:
cmp byte [tape + r8], 0
jz c1254
add r8, 431
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 440
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1254
c1254:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o124f
c124f:
sub r8, 1
and r8, 0xFFFF
o1255:
cmp byte [tape + r8], 0
jz c1255
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1255
c1255:
add r8, 1
and r8, 0xFFFF
o1256:
cmp byte [tape + r8], 0
jz c1256
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 432
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 441
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1256
c1256:
add r8, 439
and r8, 0xFFFF
push 1
push 440
call ms
sub r8, 440
and r8, 0xFFFF
o1257:
cmp byte [tape + r8], 0
jz c1257
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1257
c1257:
add r8, 1
and r8, 0xFFFF
o1258:
cmp byte [tape + r8], 0
jz c1258
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 13
and r8, 0xFFFF
o1259:
cmp byte [tape + r8], 0
jz c1259
sub r8, 13
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 20
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1259
c1259:
sub r8, 20
and r8, 0xFFFF
push 1
push 20
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1258
c1258:
add r8, 440
and r8, 0xFFFF
push 1
push 441
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 439
call ms
sub r8, 439
and r8, 0xFFFF
o125a:
cmp byte [tape + r8], 0
jz c125a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o125a
c125a:
add r8, 1
and r8, 0xFFFF
o125b:
cmp byte [tape + r8], 0
jz c125b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o125c:
cmp byte [tape + r8], 0
jz c125c
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o125c
c125c:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o125d:
cmp byte [tape + r8], 0
jz c125d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o125d
c125d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o125e:
cmp byte [tape + r8], 0
jz c125e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o125e
c125e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o125f:
cmp byte [tape + r8], 0
jz c125f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o125f
c125f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1260:
cmp byte [tape + r8], 0
jz c1260
add r8, 433
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 442
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1260
c1260:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o125b
c125b:
sub r8, 1
and r8, 0xFFFF
o1261:
cmp byte [tape + r8], 0
jz c1261
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1261
c1261:
add r8, 1
and r8, 0xFFFF
o1262:
cmp byte [tape + r8], 0
jz c1262
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
o1263:
cmp byte [tape + r8], 0
jz c1263
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1263
c1263:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o1264:
cmp byte [tape + r8], 0
jz c1264
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1264
c1264:
add r8, 1
and r8, 0xFFFF
o1265:
cmp byte [tape + r8], 0
jz c1265
sub r8, 3
and r8, 0xFFFF
o1266:
cmp byte [tape + r8], 0
jz c1266
sub r8, 2
and r8, 0xFFFF
jmp o1266
c1266:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1267:
cmp byte [tape + r8], 0
jz c1267
add r8, 2
and r8, 0xFFFF
jmp o1267
c1267:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1265
c1265:
sub r8, 3
and r8, 0xFFFF
o1268:
cmp byte [tape + r8], 0
jz c1268
sub r8, 2
and r8, 0xFFFF
jmp o1268
c1268:
add r8, 1
and r8, 0xFFFF
o1269:
cmp byte [tape + r8], 0
jz c1269
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1269
c1269:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o126a:
cmp byte [tape + r8], 0
jz c126a
add r8, 2
and r8, 0xFFFF
jmp o126a
c126a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o126b:
cmp byte [tape + r8], 0
jz c126b
sub r8, 2
and r8, 0xFFFF
jmp o126b
c126b:
add r8, 1
and r8, 0xFFFF
o126c:
cmp byte [tape + r8], 0
jz c126c
add r8, 1
and r8, 0xFFFF
o126d:
cmp byte [tape + r8], 0
jz c126d
add r8, 2
and r8, 0xFFFF
jmp o126d
c126d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o126e:
cmp byte [tape + r8], 0
jz c126e
sub r8, 2
and r8, 0xFFFF
jmp o126e
c126e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o126c
c126c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o126f:
cmp byte [tape + r8], 0
jz c126f
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o126f
c126f:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1270:
cmp byte [tape + r8], 0
jz c1270
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1270
c1270:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1271:
cmp byte [tape + r8], 0
jz c1271
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1271
c1271:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o1272:
cmp byte [tape + r8], 0
jz c1272
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1272
c1272:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o1273:
cmp byte [tape + r8], 0
jz c1273
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1273
c1273:
add r8, 1
and r8, 0xFFFF
o1274:
cmp byte [tape + r8], 0
jz c1274
sub r8, 3
and r8, 0xFFFF
o1275:
cmp byte [tape + r8], 0
jz c1275
sub r8, 2
and r8, 0xFFFF
jmp o1275
c1275:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1276:
cmp byte [tape + r8], 0
jz c1276
add r8, 2
and r8, 0xFFFF
jmp o1276
c1276:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1274
c1274:
sub r8, 3
and r8, 0xFFFF
o1277:
cmp byte [tape + r8], 0
jz c1277
sub r8, 2
and r8, 0xFFFF
jmp o1277
c1277:
add r8, 1
and r8, 0xFFFF
o1278:
cmp byte [tape + r8], 0
jz c1278
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1278
c1278:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1279:
cmp byte [tape + r8], 0
jz c1279
add r8, 2
and r8, 0xFFFF
jmp o1279
c1279:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o127a:
cmp byte [tape + r8], 0
jz c127a
sub r8, 2
and r8, 0xFFFF
jmp o127a
c127a:
add r8, 1
and r8, 0xFFFF
o127b:
cmp byte [tape + r8], 0
jz c127b
add r8, 1
and r8, 0xFFFF
o127c:
cmp byte [tape + r8], 0
jz c127c
add r8, 2
and r8, 0xFFFF
jmp o127c
c127c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o127d:
cmp byte [tape + r8], 0
jz c127d
sub r8, 2
and r8, 0xFFFF
jmp o127d
c127d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o127b
c127b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o127e:
cmp byte [tape + r8], 0
jz c127e
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o127e
c127e:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o127f:
cmp byte [tape + r8], 0
jz c127f
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o127f
c127f:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1280:
cmp byte [tape + r8], 0
jz c1280
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1280
c1280:
add r8, 8
and r8, 0xFFFF
o1281:
cmp byte [tape + r8], 0
jz c1281
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1281
c1281:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1282:
cmp byte [tape + r8], 0
jz c1282
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1282
c1282:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1283:
cmp byte [tape + r8], 0
jz c1283
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1283
c1283:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1284:
cmp byte [tape + r8], 0
jz c1284
add r8, 434
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 443
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1284
c1284:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1262
c1262:
sub r8, 1
and r8, 0xFFFF
o1285:
cmp byte [tape + r8], 0
jz c1285
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1285
c1285:
add r8, 1
and r8, 0xFFFF
o1286:
cmp byte [tape + r8], 0
jz c1286
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 28
and r8, 0xFFFF
o1287:
cmp byte [tape + r8], 0
jz c1287
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1287
c1287:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1288:
cmp byte [tape + r8], 0
jz c1288
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1288
c1288:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1289:
cmp byte [tape + r8], 0
jz c1289
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1289
c1289:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o128a:
cmp byte [tape + r8], 0
jz c128a
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o128a
c128a:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o128b:
cmp byte [tape + r8], 0
jz c128b
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o128b
c128b:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o128c:
cmp byte [tape + r8], 0
jz c128c
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o128c
c128c:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o128d:
cmp byte [tape + r8], 0
jz c128d
call z
add r8, 8
and r8, 0xFFFF
o128e:
cmp byte [tape + r8], 0
jz c128e
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o128e
c128e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o128f:
cmp byte [tape + r8], 0
jz c128f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o128f
c128f:
jmp o128d
c128d:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1290:
cmp byte [tape + r8], 0
jz c1290
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1290
c1290:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1291:
cmp byte [tape + r8], 0
jz c1291
add r8, 435
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 444
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1291
c1291:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1286
c1286:
sub r8, 1
and r8, 0xFFFF
o1292:
cmp byte [tape + r8], 0
jz c1292
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1292
c1292:
add r8, 1
and r8, 0xFFFF
o1293:
cmp byte [tape + r8], 0
jz c1293
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o1294:
cmp byte [tape + r8], 0
jz c1294
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1294
c1294:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1295:
cmp byte [tape + r8], 0
jz c1295
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1295
c1295:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1296:
cmp byte [tape + r8], 0
jz c1296
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1296
c1296:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1297:
cmp byte [tape + r8], 0
jz c1297
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1297
c1297:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1298:
cmp byte [tape + r8], 0
jz c1298
add r8, 436
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 445
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1298
c1298:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1293
c1293:
sub r8, 1
and r8, 0xFFFF
o1299:
cmp byte [tape + r8], 0
jz c1299
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1299
c1299:
add r8, 1
and r8, 0xFFFF
o129a:
cmp byte [tape + r8], 0
jz c129a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o129b:
cmp byte [tape + r8], 0
jz c129b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o129b
c129b:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o129a
c129a:
add r8, 444
and r8, 0xFFFF
push 1
push 445
call ms
sub r8, 445
and r8, 0xFFFF
o129c:
cmp byte [tape + r8], 0
jz c129c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o129c
c129c:
add r8, 1
and r8, 0xFFFF
o129d:
cmp byte [tape + r8], 0
jz c129d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o129e:
cmp byte [tape + r8], 0
jz c129e
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o129e
c129e:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o129f:
cmp byte [tape + r8], 0
jz c129f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o129f
c129f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12a0:
cmp byte [tape + r8], 0
jz c12a0
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12a0
c12a0:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12a1:
cmp byte [tape + r8], 0
jz c12a1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a1
c12a1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12a2:
cmp byte [tape + r8], 0
jz c12a2
add r8, 437
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 446
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12a2
c12a2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o129d
c129d:
sub r8, 1
and r8, 0xFFFF
o12a3:
cmp byte [tape + r8], 0
jz c12a3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a3
c12a3:
add r8, 1
and r8, 0xFFFF
o12a4:
cmp byte [tape + r8], 0
jz c12a4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
call z
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 10
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 11
o12a5:
cmp byte [tape + r8], 0
jz c12a5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a5
c12a5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a4
c12a4:
add r8, 445
and r8, 0xFFFF
push 1
push 446
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 444
call ms
sub r8, 444
and r8, 0xFFFF
o12a6:
cmp byte [tape + r8], 0
jz c12a6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a6
c12a6:
add r8, 1
and r8, 0xFFFF
o12a7:
cmp byte [tape + r8], 0
jz c12a7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o12a8:
cmp byte [tape + r8], 0
jz c12a8
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a8
c12a8:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 11
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12a9:
cmp byte [tape + r8], 0
jz c12a9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a9
c12a9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12aa:
cmp byte [tape + r8], 0
jz c12aa
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12aa
c12aa:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o12ab:
cmp byte [tape + r8], 0
jz c12ab
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12ab
c12ab:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12ac:
cmp byte [tape + r8], 0
jz c12ac
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12ac
c12ac:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o12ad:
cmp byte [tape + r8], 0
jz c12ad
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o12ad
c12ad:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o12ae:
cmp byte [tape + r8], 0
jz c12ae
call z
add r8, 8
and r8, 0xFFFF
o12af:
cmp byte [tape + r8], 0
jz c12af
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12af
c12af:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o12b0:
cmp byte [tape + r8], 0
jz c12b0
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o12b0
c12b0:
jmp o12ae
c12ae:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12b1:
cmp byte [tape + r8], 0
jz c12b1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12b1
c12b1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12b2:
cmp byte [tape + r8], 0
jz c12b2
add r8, 438
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 447
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12b2
c12b2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12a7
c12a7:
sub r8, 1
and r8, 0xFFFF
o12b3:
cmp byte [tape + r8], 0
jz c12b3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12b3
c12b3:
add r8, 1
and r8, 0xFFFF
o12b4:
cmp byte [tape + r8], 0
jz c12b4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o12b5:
cmp byte [tape + r8], 0
jz c12b5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12b5
c12b5:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12b4
c12b4:
add r8, 446
and r8, 0xFFFF
push 1
push 447
call ms
sub r8, 447
and r8, 0xFFFF
o12b6:
cmp byte [tape + r8], 0
jz c12b6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12b6
c12b6:
add r8, 1
and r8, 0xFFFF
o12b7:
cmp byte [tape + r8], 0
jz c12b7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o12b8:
cmp byte [tape + r8], 0
jz c12b8
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12b8
c12b8:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12b9:
cmp byte [tape + r8], 0
jz c12b9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12b9
c12b9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12ba:
cmp byte [tape + r8], 0
jz c12ba
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12ba
c12ba:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o12bb:
cmp byte [tape + r8], 0
jz c12bb
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12bb
c12bb:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12bc:
cmp byte [tape + r8], 0
jz c12bc
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12bc
c12bc:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o12bd:
cmp byte [tape + r8], 0
jz c12bd
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o12bd
c12bd:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o12be:
cmp byte [tape + r8], 0
jz c12be
call z
add r8, 8
and r8, 0xFFFF
o12bf:
cmp byte [tape + r8], 0
jz c12bf
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12bf
c12bf:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o12c0:
cmp byte [tape + r8], 0
jz c12c0
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o12c0
c12c0:
jmp o12be
c12be:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12c1:
cmp byte [tape + r8], 0
jz c12c1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c1
c12c1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12c2:
cmp byte [tape + r8], 0
jz c12c2
add r8, 439
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 448
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12c2
c12c2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12b7
c12b7:
sub r8, 1
and r8, 0xFFFF
o12c3:
cmp byte [tape + r8], 0
jz c12c3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c3
c12c3:
add r8, 1
and r8, 0xFFFF
o12c4:
cmp byte [tape + r8], 0
jz c12c4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o12c5:
cmp byte [tape + r8], 0
jz c12c5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c5
c12c5:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c4
c12c4:
add r8, 447
and r8, 0xFFFF
push 1
push 448
call ms
sub r8, 448
and r8, 0xFFFF
o12c6:
cmp byte [tape + r8], 0
jz c12c6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c6
c12c6:
add r8, 1
and r8, 0xFFFF
o12c7:
cmp byte [tape + r8], 0
jz c12c7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o12c8:
cmp byte [tape + r8], 0
jz c12c8
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c8
c12c8:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 11
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12c9:
cmp byte [tape + r8], 0
jz c12c9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c9
c12c9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12ca:
cmp byte [tape + r8], 0
jz c12ca
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12ca
c12ca:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o12cb:
cmp byte [tape + r8], 0
jz c12cb
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12cb
c12cb:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12cc:
cmp byte [tape + r8], 0
jz c12cc
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12cc
c12cc:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o12cd:
cmp byte [tape + r8], 0
jz c12cd
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o12cd
c12cd:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o12ce:
cmp byte [tape + r8], 0
jz c12ce
call z
add r8, 8
and r8, 0xFFFF
o12cf:
cmp byte [tape + r8], 0
jz c12cf
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12cf
c12cf:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o12d0:
cmp byte [tape + r8], 0
jz c12d0
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o12d0
c12d0:
jmp o12ce
c12ce:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12d1:
cmp byte [tape + r8], 0
jz c12d1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12d1
c12d1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12d2:
cmp byte [tape + r8], 0
jz c12d2
add r8, 440
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 449
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12d2
c12d2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12c7
c12c7:
sub r8, 1
and r8, 0xFFFF
o12d3:
cmp byte [tape + r8], 0
jz c12d3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12d3
c12d3:
add r8, 1
and r8, 0xFFFF
o12d4:
cmp byte [tape + r8], 0
jz c12d4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
o12d5:
cmp byte [tape + r8], 0
jz c12d5
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12d5
c12d5:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12d6:
cmp byte [tape + r8], 0
jz c12d6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12d6
c12d6:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12d7:
cmp byte [tape + r8], 0
jz c12d7
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12d7
c12d7:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12d8:
cmp byte [tape + r8], 0
jz c12d8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12d8
c12d8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12d9:
cmp byte [tape + r8], 0
jz c12d9
add r8, 441
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 450
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12d9
c12d9:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12d4
c12d4:
sub r8, 1
and r8, 0xFFFF
o12da:
cmp byte [tape + r8], 0
jz c12da
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12da
c12da:
add r8, 1
and r8, 0xFFFF
o12db:
cmp byte [tape + r8], 0
jz c12db
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o12dc:
cmp byte [tape + r8], 0
jz c12dc
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12dc
c12dc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12db
c12db:
add r8, 449
and r8, 0xFFFF
push 1
push 450
call ms
sub r8, 450
and r8, 0xFFFF
o12dd:
cmp byte [tape + r8], 0
jz c12dd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12dd
c12dd:
add r8, 1
and r8, 0xFFFF
o12de:
cmp byte [tape + r8], 0
jz c12de
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
o12df:
cmp byte [tape + r8], 0
jz c12df
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12df
c12df:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12e0:
cmp byte [tape + r8], 0
jz c12e0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12e0
c12e0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12e1:
cmp byte [tape + r8], 0
jz c12e1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12e1
c12e1:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12e2:
cmp byte [tape + r8], 0
jz c12e2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12e2
c12e2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12e3:
cmp byte [tape + r8], 0
jz c12e3
add r8, 442
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 451
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12e3
c12e3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12de
c12de:
sub r8, 1
and r8, 0xFFFF
o12e4:
cmp byte [tape + r8], 0
jz c12e4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12e4
c12e4:
add r8, 1
and r8, 0xFFFF
o12e5:
cmp byte [tape + r8], 0
jz c12e5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 30
and r8, 0xFFFF
call z
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
call z
add r8, 31
and r8, 0xFFFF
o12e6:
cmp byte [tape + r8], 0
jz c12e6
sub r8, 31
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 38
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12e6
c12e6:
sub r8, 38
and r8, 0xFFFF
push 1
push 38
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12e7:
cmp byte [tape + r8], 0
jz c12e7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12e7
c12e7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12e8:
cmp byte [tape + r8], 0
jz c12e8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12e8
c12e8:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12e9:
cmp byte [tape + r8], 0
jz c12e9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12e9
c12e9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12ea:
cmp byte [tape + r8], 0
jz c12ea
add r8, 443
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 452
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12ea
c12ea:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12e5
c12e5:
sub r8, 1
and r8, 0xFFFF
o12eb:
cmp byte [tape + r8], 0
jz c12eb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12eb
c12eb:
add r8, 1
and r8, 0xFFFF
o12ec:
cmp byte [tape + r8], 0
jz c12ec
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12ec
c12ec:
add r8, 451
and r8, 0xFFFF
push 1
push 452
call ms
sub r8, 452
and r8, 0xFFFF
o12ed:
cmp byte [tape + r8], 0
jz c12ed
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12ed
c12ed:
add r8, 1
and r8, 0xFFFF
o12ee:
cmp byte [tape + r8], 0
jz c12ee
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 31
and r8, 0xFFFF
call z
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 11
o12ef:
cmp byte [tape + r8], 0
jz c12ef
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12ef
c12ef:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12ee
c12ee:
add r8, 450
and r8, 0xFFFF
push 1
push 451
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 449
call ms
sub r8, 6
and r8, 0xFFFF
push 1
push 443
call ms
sub r8, 443
and r8, 0xFFFF
o12f0:
cmp byte [tape + r8], 0
jz c12f0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f0
c12f0:
add r8, 1
and r8, 0xFFFF
o12f1:
cmp byte [tape + r8], 0
jz c12f1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
o12f2:
cmp byte [tape + r8], 0
jz c12f2
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f2
c12f2:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12f3:
cmp byte [tape + r8], 0
jz c12f3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f3
c12f3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12f4:
cmp byte [tape + r8], 0
jz c12f4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12f4
c12f4:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12f5:
cmp byte [tape + r8], 0
jz c12f5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f5
c12f5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o12f6:
cmp byte [tape + r8], 0
jz c12f6
add r8, 444
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 453
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o12f6
c12f6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f1
c12f1:
sub r8, 1
and r8, 0xFFFF
o12f7:
cmp byte [tape + r8], 0
jz c12f7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f7
c12f7:
add r8, 1
and r8, 0xFFFF
o12f8:
cmp byte [tape + r8], 0
jz c12f8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o12f9:
cmp byte [tape + r8], 0
jz c12f9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f9
c12f9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 13
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12f8
c12f8:
add r8, 452
and r8, 0xFFFF
push 1
push 453
call ms
sub r8, 11
and r8, 0xFFFF
push 1
push 442
call ms
sub r8, 442
and r8, 0xFFFF
o12fa:
cmp byte [tape + r8], 0
jz c12fa
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12fa
c12fa:
add r8, 1
and r8, 0xFFFF
o12fb:
cmp byte [tape + r8], 0
jz c12fb
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o12fc:
cmp byte [tape + r8], 0
jz c12fc
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12fc
c12fc:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o12fd:
cmp byte [tape + r8], 0
jz c12fd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12fd
c12fd:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o12fe:
cmp byte [tape + r8], 0
jz c12fe
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o12fe
c12fe:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o12ff:
cmp byte [tape + r8], 0
jz c12ff
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12ff
c12ff:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1300:
cmp byte [tape + r8], 0
jz c1300
add r8, 445
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 454
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1300
c1300:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o12fb
c12fb:
sub r8, 1
and r8, 0xFFFF
o1301:
cmp byte [tape + r8], 0
jz c1301
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1301
c1301:
add r8, 1
and r8, 0xFFFF
o1302:
cmp byte [tape + r8], 0
jz c1302
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 28
and r8, 0xFFFF
o1303:
cmp byte [tape + r8], 0
jz c1303
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1303
c1303:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 295
and r8, 0xFFFF
call z
sub r8, 288
and r8, 0xFFFF
push 1
push 288
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1302
c1302:
add r8, 453
and r8, 0xFFFF
push 1
push 454
call ms
sub r8, 454
and r8, 0xFFFF
o1304:
cmp byte [tape + r8], 0
jz c1304
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1304
c1304:
add r8, 1
and r8, 0xFFFF
o1305:
cmp byte [tape + r8], 0
jz c1305
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1306:
cmp byte [tape + r8], 0
jz c1306
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1306
c1306:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 11
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1307:
cmp byte [tape + r8], 0
jz c1307
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1307
c1307:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1308:
cmp byte [tape + r8], 0
jz c1308
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1308
c1308:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1309:
cmp byte [tape + r8], 0
jz c1309
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1309
c1309:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o130a:
cmp byte [tape + r8], 0
jz c130a
add r8, 446
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 455
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o130a
c130a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1305
c1305:
sub r8, 1
and r8, 0xFFFF
o130b:
cmp byte [tape + r8], 0
jz c130b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o130b
c130b:
add r8, 1
and r8, 0xFFFF
o130c:
cmp byte [tape + r8], 0
jz c130c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 28
and r8, 0xFFFF
o130d:
cmp byte [tape + r8], 0
jz c130d
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o130d
c130d:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o130e:
cmp byte [tape + r8], 0
jz c130e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o130e
c130e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o130f:
cmp byte [tape + r8], 0
jz c130f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o130f
c130f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1310:
cmp byte [tape + r8], 0
jz c1310
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1310
c1310:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1311:
cmp byte [tape + r8], 0
jz c1311
add r8, 447
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 456
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1311
c1311:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o130c
c130c:
sub r8, 1
and r8, 0xFFFF
o1312:
cmp byte [tape + r8], 0
jz c1312
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1312
c1312:
add r8, 1
and r8, 0xFFFF
o1313:
cmp byte [tape + r8], 0
jz c1313
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 24
and r8, 0xFFFF
o1314:
cmp byte [tape + r8], 0
jz c1314
sub r8, 24
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 31
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1314
c1314:
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1315:
cmp byte [tape + r8], 0
jz c1315
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1315
c1315:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1316:
cmp byte [tape + r8], 0
jz c1316
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1316
c1316:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1317:
cmp byte [tape + r8], 0
jz c1317
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1317
c1317:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1318:
cmp byte [tape + r8], 0
jz c1318
add r8, 448
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 457
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1318
c1318:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1313
c1313:
sub r8, 1
and r8, 0xFFFF
o1319:
cmp byte [tape + r8], 0
jz c1319
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1319
c1319:
add r8, 1
and r8, 0xFFFF
o131a:
cmp byte [tape + r8], 0
jz c131a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o131b:
cmp byte [tape + r8], 0
jz c131b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o131b
c131b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 456
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 458
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o131a
c131a:
add r8, 456
and r8, 0xFFFF
push 1
push 457
call ms
sub r8, 457
and r8, 0xFFFF
o131c:
cmp byte [tape + r8], 0
jz c131c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o131c
c131c:
add r8, 1
and r8, 0xFFFF
o131d:
cmp byte [tape + r8], 0
jz c131d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o131e:
cmp byte [tape + r8], 0
jz c131e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o131e
c131e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o131d
c131d:
add r8, 457
and r8, 0xFFFF
push 1
push 458
call ms
sub r8, 458
and r8, 0xFFFF
o131f:
cmp byte [tape + r8], 0
jz c131f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o131f
c131f:
add r8, 1
and r8, 0xFFFF
o1320:
cmp byte [tape + r8], 0
jz c1320
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 450
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 459
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1320
c1320:
add r8, 455
and r8, 0xFFFF
push 1
push 456
call ms
sub r8, 456
and r8, 0xFFFF
o1321:
cmp byte [tape + r8], 0
jz c1321
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1321
c1321:
add r8, 1
and r8, 0xFFFF
o1322:
cmp byte [tape + r8], 0
jz c1322
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1323:
cmp byte [tape + r8], 0
jz c1323
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1323
c1323:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1324:
cmp byte [tape + r8], 0
jz c1324
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1324
c1324:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1325:
cmp byte [tape + r8], 0
jz c1325
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1325
c1325:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1326:
cmp byte [tape + r8], 0
jz c1326
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1326
c1326:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1327:
cmp byte [tape + r8], 0
jz c1327
add r8, 451
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 460
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1327
c1327:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1322
c1322:
sub r8, 1
and r8, 0xFFFF
o1328:
cmp byte [tape + r8], 0
jz c1328
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1328
c1328:
add r8, 1
and r8, 0xFFFF
o1329:
cmp byte [tape + r8], 0
jz c1329
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 20
and r8, 0xFFFF
o132a:
cmp byte [tape + r8], 0
jz c132a
sub r8, 20
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o132a
c132a:
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o132b:
cmp byte [tape + r8], 0
jz c132b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o132b
c132b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o132c:
cmp byte [tape + r8], 0
jz c132c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o132c
c132c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o132d:
cmp byte [tape + r8], 0
jz c132d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o132d
c132d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o132e:
cmp byte [tape + r8], 0
jz c132e
add r8, 452
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 461
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o132e
c132e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1329
c1329:
sub r8, 1
and r8, 0xFFFF
o132f:
cmp byte [tape + r8], 0
jz c132f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o132f
c132f:
add r8, 1
and r8, 0xFFFF
o1330:
cmp byte [tape + r8], 0
jz c1330
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o1331:
cmp byte [tape + r8], 0
jz c1331
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1331
c1331:
add r8, 1
and r8, 0xFFFF
o1332:
cmp byte [tape + r8], 0
jz c1332
sub r8, 3
and r8, 0xFFFF
o1333:
cmp byte [tape + r8], 0
jz c1333
sub r8, 2
and r8, 0xFFFF
jmp o1333
c1333:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1334:
cmp byte [tape + r8], 0
jz c1334
add r8, 2
and r8, 0xFFFF
jmp o1334
c1334:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1332
c1332:
sub r8, 3
and r8, 0xFFFF
o1335:
cmp byte [tape + r8], 0
jz c1335
sub r8, 2
and r8, 0xFFFF
jmp o1335
c1335:
add r8, 1
and r8, 0xFFFF
o1336:
cmp byte [tape + r8], 0
jz c1336
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1336
c1336:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1337:
cmp byte [tape + r8], 0
jz c1337
add r8, 2
and r8, 0xFFFF
jmp o1337
c1337:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1338:
cmp byte [tape + r8], 0
jz c1338
sub r8, 2
and r8, 0xFFFF
jmp o1338
c1338:
add r8, 1
and r8, 0xFFFF
o1339:
cmp byte [tape + r8], 0
jz c1339
add r8, 1
and r8, 0xFFFF
o133a:
cmp byte [tape + r8], 0
jz c133a
add r8, 2
and r8, 0xFFFF
jmp o133a
c133a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o133b:
cmp byte [tape + r8], 0
jz c133b
sub r8, 2
and r8, 0xFFFF
jmp o133b
c133b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1339
c1339:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o133c:
cmp byte [tape + r8], 0
jz c133c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o133c
c133c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o133d:
cmp byte [tape + r8], 0
jz c133d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o133d
c133d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o133e:
cmp byte [tape + r8], 0
jz c133e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o133e
c133e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o133f:
cmp byte [tape + r8], 0
jz c133f
add r8, 453
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 462
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o133f
c133f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1330
c1330:
sub r8, 1
and r8, 0xFFFF
o1340:
cmp byte [tape + r8], 0
jz c1340
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1340
c1340:
add r8, 1
and r8, 0xFFFF
o1341:
cmp byte [tape + r8], 0
jz c1341
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 20
and r8, 0xFFFF
call z
sub r8, 20
and r8, 0xFFFF
push 1
push 20
call m
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 15
o1342:
cmp byte [tape + r8], 0
jz c1342
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1342
c1342:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 15
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 10
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1343:
cmp byte [tape + r8], 0
jz c1343
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1343
c1343:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1344:
cmp byte [tape + r8], 0
jz c1344
sub r8, 2
and r8, 0xFFFF
jmp o1344
c1344:
add r8, 1
and r8, 0xFFFF
o1345:
cmp byte [tape + r8], 0
jz c1345
add r8, 1
and r8, 0xFFFF
o1346:
cmp byte [tape + r8], 0
jz c1346
add r8, 2
and r8, 0xFFFF
jmp o1346
c1346:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1347:
cmp byte [tape + r8], 0
jz c1347
sub r8, 2
and r8, 0xFFFF
jmp o1347
c1347:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1345
c1345:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 454
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 463
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1341
c1341:
add r8, 461
and r8, 0xFFFF
push 1
push 462
call ms
sub r8, 462
and r8, 0xFFFF
o1348:
cmp byte [tape + r8], 0
jz c1348
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1348
c1348:
add r8, 1
and r8, 0xFFFF
o1349:
cmp byte [tape + r8], 0
jz c1349
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o134a:
cmp byte [tape + r8], 0
jz c134a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o134a
c134a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1349
c1349:
add r8, 462
and r8, 0xFFFF
push 1
push 463
call ms
sub r8, 463
and r8, 0xFFFF
o134b:
cmp byte [tape + r8], 0
jz c134b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o134b
c134b:
add r8, 1
and r8, 0xFFFF
o134c:
cmp byte [tape + r8], 0
jz c134c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 464
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 464
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o134c
c134c:
add r8, 460
and r8, 0xFFFF
push 1
push 461
call ms
sub r8, 461
and r8, 0xFFFF
o134d:
cmp byte [tape + r8], 0
jz c134d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o134d
c134d:
add r8, 1
and r8, 0xFFFF
o134e:
cmp byte [tape + r8], 0
jz c134e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o134f:
cmp byte [tape + r8], 0
jz c134f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o134f
c134f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o134e
c134e:
add r8, 463
and r8, 0xFFFF
push 1
push 464
call ms
sub r8, 464
and r8, 0xFFFF
o1350:
cmp byte [tape + r8], 0
jz c1350
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1350
c1350:
add r8, 1
and r8, 0xFFFF
o1351:
cmp byte [tape + r8], 0
jz c1351
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 465
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 465
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1351
c1351:
add r8, 459
and r8, 0xFFFF
push 1
push 460
call ms
sub r8, 460
and r8, 0xFFFF
o1352:
cmp byte [tape + r8], 0
jz c1352
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1352
c1352:
add r8, 1
and r8, 0xFFFF
o1353:
cmp byte [tape + r8], 0
jz c1353
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o1354:
cmp byte [tape + r8], 0
jz c1354
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1354
c1354:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1353
c1353:
add r8, 464
and r8, 0xFFFF
push 1
push 465
call ms
sub r8, 6
and r8, 0xFFFF
push 1
push 459
call ms
sub r8, 4
and r8, 0xFFFF
push 1
push 455
call ms
sub r8, 455
and r8, 0xFFFF
o1355:
cmp byte [tape + r8], 0
jz c1355
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1355
c1355:
add r8, 1
and r8, 0xFFFF
o1356:
cmp byte [tape + r8], 0
jz c1356
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1357:
cmp byte [tape + r8], 0
jz c1357
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1357
c1357:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1358:
cmp byte [tape + r8], 0
jz c1358
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1358
c1358:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1359:
cmp byte [tape + r8], 0
jz c1359
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1359
c1359:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o135a:
cmp byte [tape + r8], 0
jz c135a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o135a
c135a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o135b:
cmp byte [tape + r8], 0
jz c135b
add r8, 457
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 466
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o135b
c135b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1356
c1356:
sub r8, 1
and r8, 0xFFFF
o135c:
cmp byte [tape + r8], 0
jz c135c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o135c
c135c:
add r8, 1
and r8, 0xFFFF
o135d:
cmp byte [tape + r8], 0
jz c135d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o135d
c135d:
add r8, 465
and r8, 0xFFFF
push 1
push 466
call ms
sub r8, 466
and r8, 0xFFFF
o135e:
cmp byte [tape + r8], 0
jz c135e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o135e
c135e:
add r8, 1
and r8, 0xFFFF
o135f:
cmp byte [tape + r8], 0
jz c135f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1360:
cmp byte [tape + r8], 0
jz c1360
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1360
c1360:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1361:
cmp byte [tape + r8], 0
jz c1361
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1361
c1361:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1362:
cmp byte [tape + r8], 0
jz c1362
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1362
c1362:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1363:
cmp byte [tape + r8], 0
jz c1363
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1363
c1363:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1364:
cmp byte [tape + r8], 0
jz c1364
add r8, 458
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 467
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1364
c1364:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o135f
c135f:
sub r8, 1
and r8, 0xFFFF
o1365:
cmp byte [tape + r8], 0
jz c1365
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1365
c1365:
add r8, 1
and r8, 0xFFFF
o1366:
cmp byte [tape + r8], 0
jz c1366
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 14
and r8, 0xFFFF
o1367:
cmp byte [tape + r8], 0
jz c1367
sub r8, 14
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 21
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1367
c1367:
sub r8, 21
and r8, 0xFFFF
push 1
push 21
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1368:
cmp byte [tape + r8], 0
jz c1368
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1368
c1368:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1369:
cmp byte [tape + r8], 0
jz c1369
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1369
c1369:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o136a:
cmp byte [tape + r8], 0
jz c136a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o136a
c136a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o136b:
cmp byte [tape + r8], 0
jz c136b
add r8, 459
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 468
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o136b
c136b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1366
c1366:
sub r8, 1
and r8, 0xFFFF
o136c:
cmp byte [tape + r8], 0
jz c136c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o136c
c136c:
add r8, 1
and r8, 0xFFFF
o136d:
cmp byte [tape + r8], 0
jz c136d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 460
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 469
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o136d
c136d:
add r8, 467
and r8, 0xFFFF
push 1
push 468
call ms
sub r8, 468
and r8, 0xFFFF
o136e:
cmp byte [tape + r8], 0
jz c136e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o136e
c136e:
add r8, 1
and r8, 0xFFFF
o136f:
cmp byte [tape + r8], 0
jz c136f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 14
and r8, 0xFFFF
o1370:
cmp byte [tape + r8], 0
jz c1370
sub r8, 14
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 21
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1370
c1370:
sub r8, 21
and r8, 0xFFFF
push 1
push 21
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o136f
c136f:
add r8, 468
and r8, 0xFFFF
push 1
push 469
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 467
call ms
sub r8, 467
and r8, 0xFFFF
o1371:
cmp byte [tape + r8], 0
jz c1371
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1371
c1371:
add r8, 1
and r8, 0xFFFF
o1372:
cmp byte [tape + r8], 0
jz c1372
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1373:
cmp byte [tape + r8], 0
jz c1373
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1373
c1373:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1374:
cmp byte [tape + r8], 0
jz c1374
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1374
c1374:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1375:
cmp byte [tape + r8], 0
jz c1375
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1375
c1375:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1376:
cmp byte [tape + r8], 0
jz c1376
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1376
c1376:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1377:
cmp byte [tape + r8], 0
jz c1377
add r8, 461
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 470
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1377
c1377:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1372
c1372:
sub r8, 1
and r8, 0xFFFF
o1378:
cmp byte [tape + r8], 0
jz c1378
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1378
c1378:
add r8, 1
and r8, 0xFFFF
o1379:
cmp byte [tape + r8], 0
jz c1379
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 28
and r8, 0xFFFF
o137a:
cmp byte [tape + r8], 0
jz c137a
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o137a
c137a:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o137b:
cmp byte [tape + r8], 0
jz c137b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o137b
c137b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o137c:
cmp byte [tape + r8], 0
jz c137c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o137c
c137c:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o137d:
cmp byte [tape + r8], 0
jz c137d
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o137d
c137d:
add r8, 1
and r8, 0xFFFF
o137e:
cmp byte [tape + r8], 0
jz c137e
sub r8, 3
and r8, 0xFFFF
o137f:
cmp byte [tape + r8], 0
jz c137f
sub r8, 2
and r8, 0xFFFF
jmp o137f
c137f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1380:
cmp byte [tape + r8], 0
jz c1380
add r8, 2
and r8, 0xFFFF
jmp o1380
c1380:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o137e
c137e:
sub r8, 3
and r8, 0xFFFF
o1381:
cmp byte [tape + r8], 0
jz c1381
sub r8, 2
and r8, 0xFFFF
jmp o1381
c1381:
add r8, 1
and r8, 0xFFFF
o1382:
cmp byte [tape + r8], 0
jz c1382
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1382
c1382:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1383:
cmp byte [tape + r8], 0
jz c1383
add r8, 2
and r8, 0xFFFF
jmp o1383
c1383:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1384:
cmp byte [tape + r8], 0
jz c1384
sub r8, 2
and r8, 0xFFFF
jmp o1384
c1384:
add r8, 1
and r8, 0xFFFF
o1385:
cmp byte [tape + r8], 0
jz c1385
add r8, 1
and r8, 0xFFFF
o1386:
cmp byte [tape + r8], 0
jz c1386
add r8, 2
and r8, 0xFFFF
jmp o1386
c1386:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1387:
cmp byte [tape + r8], 0
jz c1387
sub r8, 2
and r8, 0xFFFF
jmp o1387
c1387:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1385
c1385:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1388:
cmp byte [tape + r8], 0
jz c1388
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1388
c1388:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1389:
cmp byte [tape + r8], 0
jz c1389
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1389
c1389:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o138a:
cmp byte [tape + r8], 0
jz c138a
call z
add r8, 8
and r8, 0xFFFF
o138b:
cmp byte [tape + r8], 0
jz c138b
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o138b
c138b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o138c:
cmp byte [tape + r8], 0
jz c138c
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o138c
c138c:
jmp o138a
c138a:
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o138d:
cmp byte [tape + r8], 0
jz c138d
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o138d
c138d:
add r8, 1
and r8, 0xFFFF
o138e:
cmp byte [tape + r8], 0
jz c138e
sub r8, 3
and r8, 0xFFFF
o138f:
cmp byte [tape + r8], 0
jz c138f
sub r8, 2
and r8, 0xFFFF
jmp o138f
c138f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1390:
cmp byte [tape + r8], 0
jz c1390
add r8, 2
and r8, 0xFFFF
jmp o1390
c1390:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o138e
c138e:
sub r8, 3
and r8, 0xFFFF
o1391:
cmp byte [tape + r8], 0
jz c1391
sub r8, 2
and r8, 0xFFFF
jmp o1391
c1391:
add r8, 1
and r8, 0xFFFF
o1392:
cmp byte [tape + r8], 0
jz c1392
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1392
c1392:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1393:
cmp byte [tape + r8], 0
jz c1393
add r8, 2
and r8, 0xFFFF
jmp o1393
c1393:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1394:
cmp byte [tape + r8], 0
jz c1394
sub r8, 2
and r8, 0xFFFF
jmp o1394
c1394:
add r8, 1
and r8, 0xFFFF
o1395:
cmp byte [tape + r8], 0
jz c1395
add r8, 1
and r8, 0xFFFF
o1396:
cmp byte [tape + r8], 0
jz c1396
add r8, 2
and r8, 0xFFFF
jmp o1396
c1396:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1397:
cmp byte [tape + r8], 0
jz c1397
sub r8, 2
and r8, 0xFFFF
jmp o1397
c1397:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1395
c1395:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1398:
cmp byte [tape + r8], 0
jz c1398
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1398
c1398:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1399:
cmp byte [tape + r8], 0
jz c1399
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1399
c1399:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o139a:
cmp byte [tape + r8], 0
jz c139a
call z
add r8, 8
and r8, 0xFFFF
o139b:
cmp byte [tape + r8], 0
jz c139b
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o139b
c139b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o139c:
cmp byte [tape + r8], 0
jz c139c
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o139c
c139c:
jmp o139a
c139a:
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o139d:
cmp byte [tape + r8], 0
jz c139d
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o139d
c139d:
add r8, 1
and r8, 0xFFFF
o139e:
cmp byte [tape + r8], 0
jz c139e
sub r8, 3
and r8, 0xFFFF
o139f:
cmp byte [tape + r8], 0
jz c139f
sub r8, 2
and r8, 0xFFFF
jmp o139f
c139f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13a0:
cmp byte [tape + r8], 0
jz c13a0
add r8, 2
and r8, 0xFFFF
jmp o13a0
c13a0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o139e
c139e:
sub r8, 3
and r8, 0xFFFF
o13a1:
cmp byte [tape + r8], 0
jz c13a1
sub r8, 2
and r8, 0xFFFF
jmp o13a1
c13a1:
add r8, 1
and r8, 0xFFFF
o13a2:
cmp byte [tape + r8], 0
jz c13a2
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13a2
c13a2:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o13a3:
cmp byte [tape + r8], 0
jz c13a3
add r8, 2
and r8, 0xFFFF
jmp o13a3
c13a3:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o13a4:
cmp byte [tape + r8], 0
jz c13a4
sub r8, 2
and r8, 0xFFFF
jmp o13a4
c13a4:
add r8, 1
and r8, 0xFFFF
o13a5:
cmp byte [tape + r8], 0
jz c13a5
add r8, 1
and r8, 0xFFFF
o13a6:
cmp byte [tape + r8], 0
jz c13a6
add r8, 2
and r8, 0xFFFF
jmp o13a6
c13a6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o13a7:
cmp byte [tape + r8], 0
jz c13a7
sub r8, 2
and r8, 0xFFFF
jmp o13a7
c13a7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13a5
c13a5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13a8:
cmp byte [tape + r8], 0
jz c13a8
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13a8
c13a8:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o13a9:
cmp byte [tape + r8], 0
jz c13a9
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o13a9
c13a9:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o13aa:
cmp byte [tape + r8], 0
jz c13aa
call z
add r8, 8
and r8, 0xFFFF
o13ab:
cmp byte [tape + r8], 0
jz c13ab
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13ab
c13ab:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o13ac:
cmp byte [tape + r8], 0
jz c13ac
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o13ac
c13ac:
jmp o13aa
c13aa:
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o13ad:
cmp byte [tape + r8], 0
jz c13ad
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o13ad
c13ad:
add r8, 1
and r8, 0xFFFF
o13ae:
cmp byte [tape + r8], 0
jz c13ae
sub r8, 3
and r8, 0xFFFF
o13af:
cmp byte [tape + r8], 0
jz c13af
sub r8, 2
and r8, 0xFFFF
jmp o13af
c13af:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13b0:
cmp byte [tape + r8], 0
jz c13b0
add r8, 2
and r8, 0xFFFF
jmp o13b0
c13b0:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13ae
c13ae:
sub r8, 3
and r8, 0xFFFF
o13b1:
cmp byte [tape + r8], 0
jz c13b1
sub r8, 2
and r8, 0xFFFF
jmp o13b1
c13b1:
add r8, 1
and r8, 0xFFFF
o13b2:
cmp byte [tape + r8], 0
jz c13b2
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13b2
c13b2:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o13b3:
cmp byte [tape + r8], 0
jz c13b3
add r8, 2
and r8, 0xFFFF
jmp o13b3
c13b3:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o13b4:
cmp byte [tape + r8], 0
jz c13b4
sub r8, 2
and r8, 0xFFFF
jmp o13b4
c13b4:
add r8, 1
and r8, 0xFFFF
o13b5:
cmp byte [tape + r8], 0
jz c13b5
add r8, 1
and r8, 0xFFFF
o13b6:
cmp byte [tape + r8], 0
jz c13b6
add r8, 2
and r8, 0xFFFF
jmp o13b6
c13b6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o13b7:
cmp byte [tape + r8], 0
jz c13b7
sub r8, 2
and r8, 0xFFFF
jmp o13b7
c13b7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13b5
c13b5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13b8:
cmp byte [tape + r8], 0
jz c13b8
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13b8
c13b8:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o13b9:
cmp byte [tape + r8], 0
jz c13b9
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o13b9
c13b9:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o13ba:
cmp byte [tape + r8], 0
jz c13ba
call z
add r8, 8
and r8, 0xFFFF
o13bb:
cmp byte [tape + r8], 0
jz c13bb
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13bb
c13bb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o13bc:
cmp byte [tape + r8], 0
jz c13bc
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o13bc
c13bc:
jmp o13ba
c13ba:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o13bd:
cmp byte [tape + r8], 0
jz c13bd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13bd
c13bd:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o13be:
cmp byte [tape + r8], 0
jz c13be
add r8, 462
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 471
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o13be
c13be:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1379
c1379:
sub r8, 1
and r8, 0xFFFF
o13bf:
cmp byte [tape + r8], 0
jz c13bf
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13bf
c13bf:
add r8, 1
and r8, 0xFFFF
o13c0:
cmp byte [tape + r8], 0
jz c13c0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 19
and r8, 0xFFFF
o13c1:
cmp byte [tape + r8], 0
jz c13c1
sub r8, 19
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 26
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c1
c13c1:
sub r8, 26
and r8, 0xFFFF
push 1
push 26
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13c2:
cmp byte [tape + r8], 0
jz c13c2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c2
c13c2:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o13c3:
cmp byte [tape + r8], 0
jz c13c3
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o13c3
c13c3:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o13c4:
cmp byte [tape + r8], 0
jz c13c4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c4
c13c4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o13c5:
cmp byte [tape + r8], 0
jz c13c5
add r8, 463
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 472
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o13c5
c13c5:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c0
c13c0:
sub r8, 1
and r8, 0xFFFF
o13c6:
cmp byte [tape + r8], 0
jz c13c6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c6
c13c6:
add r8, 1
and r8, 0xFFFF
o13c7:
cmp byte [tape + r8], 0
jz c13c7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
call z
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c7
c13c7:
add r8, 471
and r8, 0xFFFF
push 1
push 472
call ms
sub r8, 472
and r8, 0xFFFF
o13c8:
cmp byte [tape + r8], 0
jz c13c8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c8
c13c8:
add r8, 1
and r8, 0xFFFF
o13c9:
cmp byte [tape + r8], 0
jz c13c9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o13ca:
cmp byte [tape + r8], 0
jz c13ca
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13ca
c13ca:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13c9
c13c9:
add r8, 470
and r8, 0xFFFF
push 1
push 471
call ms
sub r8, 471
and r8, 0xFFFF
o13cb:
cmp byte [tape + r8], 0
jz c13cb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13cb
c13cb:
add r8, 1
and r8, 0xFFFF
o13cc:
cmp byte [tape + r8], 0
jz c13cc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o13cd:
cmp byte [tape + r8], 0
jz c13cd
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13cd
c13cd:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13ce:
cmp byte [tape + r8], 0
jz c13ce
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13ce
c13ce:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o13cf:
cmp byte [tape + r8], 0
jz c13cf
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o13cf
c13cf:
add r8, 7
and r8, 0xFFFF
call z
add r8, 11
and r8, 0xFFFF
o13d0:
cmp byte [tape + r8], 0
jz c13d0
sub r8, 11
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13d0
c13d0:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13d1:
cmp byte [tape + r8], 0
jz c13d1
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13d1
c13d1:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o13d2:
cmp byte [tape + r8], 0
jz c13d2
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o13d2
c13d2:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o13d3:
cmp byte [tape + r8], 0
jz c13d3
call z
add r8, 8
and r8, 0xFFFF
o13d4:
cmp byte [tape + r8], 0
jz c13d4
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13d4
c13d4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o13d5:
cmp byte [tape + r8], 0
jz c13d5
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o13d5
c13d5:
jmp o13d3
c13d3:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o13d6:
cmp byte [tape + r8], 0
jz c13d6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13d6
c13d6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o13d7:
cmp byte [tape + r8], 0
jz c13d7
add r8, 464
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 473
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o13d7
c13d7:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13cc
c13cc:
sub r8, 1
and r8, 0xFFFF
o13d8:
cmp byte [tape + r8], 0
jz c13d8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13d8
c13d8:
add r8, 1
and r8, 0xFFFF
o13d9:
cmp byte [tape + r8], 0
jz c13d9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o13da:
cmp byte [tape + r8], 0
jz c13da
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13da
c13da:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 26
and r8, 0xFFFF
o13db:
cmp byte [tape + r8], 0
jz c13db
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 33
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13db
c13db:
sub r8, 33
and r8, 0xFFFF
push 1
push 33
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13dc:
cmp byte [tape + r8], 0
jz c13dc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13dc
c13dc:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o13dd:
cmp byte [tape + r8], 0
jz c13dd
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o13dd
c13dd:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o13de:
cmp byte [tape + r8], 0
jz c13de
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13de
c13de:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o13df:
cmp byte [tape + r8], 0
jz c13df
add r8, 465
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 474
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o13df
c13df:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13d9
c13d9:
sub r8, 1
and r8, 0xFFFF
o13e0:
cmp byte [tape + r8], 0
jz c13e0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13e0
c13e0:
add r8, 1
and r8, 0xFFFF
o13e1:
cmp byte [tape + r8], 0
jz c13e1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o13e2:
cmp byte [tape + r8], 0
jz c13e2
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o13e2
c13e2:
add r8, 1
and r8, 0xFFFF
o13e3:
cmp byte [tape + r8], 0
jz c13e3
sub r8, 3
and r8, 0xFFFF
o13e4:
cmp byte [tape + r8], 0
jz c13e4
sub r8, 2
and r8, 0xFFFF
jmp o13e4
c13e4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13e5:
cmp byte [tape + r8], 0
jz c13e5
add r8, 2
and r8, 0xFFFF
jmp o13e5
c13e5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13e3
c13e3:
sub r8, 3
and r8, 0xFFFF
o13e6:
cmp byte [tape + r8], 0
jz c13e6
sub r8, 2
and r8, 0xFFFF
jmp o13e6
c13e6:
add r8, 1
and r8, 0xFFFF
o13e7:
cmp byte [tape + r8], 0
jz c13e7
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13e7
c13e7:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o13e8:
cmp byte [tape + r8], 0
jz c13e8
add r8, 2
and r8, 0xFFFF
jmp o13e8
c13e8:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o13e9:
cmp byte [tape + r8], 0
jz c13e9
sub r8, 2
and r8, 0xFFFF
jmp o13e9
c13e9:
add r8, 1
and r8, 0xFFFF
o13ea:
cmp byte [tape + r8], 0
jz c13ea
add r8, 1
and r8, 0xFFFF
o13eb:
cmp byte [tape + r8], 0
jz c13eb
add r8, 2
and r8, 0xFFFF
jmp o13eb
c13eb:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o13ec:
cmp byte [tape + r8], 0
jz c13ec
sub r8, 2
and r8, 0xFFFF
jmp o13ec
c13ec:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13ea
c13ea:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o13ed:
cmp byte [tape + r8], 0
jz c13ed
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13ed
c13ed:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o13ee:
cmp byte [tape + r8], 0
jz c13ee
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o13ee
c13ee:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o13ef:
cmp byte [tape + r8], 0
jz c13ef
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13ef
c13ef:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o13f0:
cmp byte [tape + r8], 0
jz c13f0
add r8, 466
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 475
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o13f0
c13f0:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13e1
c13e1:
sub r8, 1
and r8, 0xFFFF
o13f1:
cmp byte [tape + r8], 0
jz c13f1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13f1
c13f1:
add r8, 1
and r8, 0xFFFF
o13f2:
cmp byte [tape + r8], 0
jz c13f2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o13f3:
cmp byte [tape + r8], 0
jz c13f3
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13f3
c13f3:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o13f4:
cmp byte [tape + r8], 0
jz c13f4
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13f4
c13f4:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13f2
c13f2:
add r8, 474
and r8, 0xFFFF
push 1
push 475
call ms
sub r8, 475
and r8, 0xFFFF
o13f5:
cmp byte [tape + r8], 0
jz c13f5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13f5
c13f5:
add r8, 1
and r8, 0xFFFF
o13f6:
cmp byte [tape + r8], 0
jz c13f6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 28
and r8, 0xFFFF
o13f7:
cmp byte [tape + r8], 0
jz c13f7
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13f7
c13f7:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o13f8:
cmp byte [tape + r8], 0
jz c13f8
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o13f8
c13f8:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o13f9:
cmp byte [tape + r8], 0
jz c13f9
sub r8, 2
and r8, 0xFFFF
jmp o13f9
c13f9:
add r8, 1
and r8, 0xFFFF
o13fa:
cmp byte [tape + r8], 0
jz c13fa
add r8, 1
and r8, 0xFFFF
o13fb:
cmp byte [tape + r8], 0
jz c13fb
add r8, 2
and r8, 0xFFFF
jmp o13fb
c13fb:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o13fc:
cmp byte [tape + r8], 0
jz c13fc
sub r8, 2
and r8, 0xFFFF
jmp o13fc
c13fc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13fa
c13fa:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 26
and r8, 0xFFFF
call z
sub r8, 26
and r8, 0xFFFF
push 1
push 26
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 15
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13f6
c13f6:
add r8, 473
and r8, 0xFFFF
push 1
push 474
call ms
sub r8, 474
and r8, 0xFFFF
o13fd:
cmp byte [tape + r8], 0
jz c13fd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13fd
c13fd:
add r8, 1
and r8, 0xFFFF
o13fe:
cmp byte [tape + r8], 0
jz c13fe
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 33
and r8, 0xFFFF
o13ff:
cmp byte [tape + r8], 0
jz c13ff
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13ff
c13ff:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1400:
cmp byte [tape + r8], 0
jz c1400
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1400
c1400:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1401:
cmp byte [tape + r8], 0
jz c1401
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1401
c1401:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o1402:
cmp byte [tape + r8], 0
jz c1402
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1402
c1402:
add r8, 1
and r8, 0xFFFF
o1403:
cmp byte [tape + r8], 0
jz c1403
sub r8, 3
and r8, 0xFFFF
o1404:
cmp byte [tape + r8], 0
jz c1404
sub r8, 2
and r8, 0xFFFF
jmp o1404
c1404:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1405:
cmp byte [tape + r8], 0
jz c1405
add r8, 2
and r8, 0xFFFF
jmp o1405
c1405:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1403
c1403:
sub r8, 3
and r8, 0xFFFF
o1406:
cmp byte [tape + r8], 0
jz c1406
sub r8, 2
and r8, 0xFFFF
jmp o1406
c1406:
add r8, 1
and r8, 0xFFFF
o1407:
cmp byte [tape + r8], 0
jz c1407
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1407
c1407:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1408:
cmp byte [tape + r8], 0
jz c1408
add r8, 2
and r8, 0xFFFF
jmp o1408
c1408:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1409:
cmp byte [tape + r8], 0
jz c1409
sub r8, 2
and r8, 0xFFFF
jmp o1409
c1409:
add r8, 1
and r8, 0xFFFF
o140a:
cmp byte [tape + r8], 0
jz c140a
add r8, 1
and r8, 0xFFFF
o140b:
cmp byte [tape + r8], 0
jz c140b
add r8, 2
and r8, 0xFFFF
jmp o140b
c140b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o140c:
cmp byte [tape + r8], 0
jz c140c
sub r8, 2
and r8, 0xFFFF
jmp o140c
c140c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o140a
c140a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 35
and r8, 0xFFFF
call z
add byte [tape + r8], 11
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o140d:
cmp byte [tape + r8], 0
jz c140d
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o140d
c140d:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o140e:
cmp byte [tape + r8], 0
jz c140e
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o140e
c140e:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o140f:
cmp byte [tape + r8], 0
jz c140f
call z
add r8, 8
and r8, 0xFFFF
o1410:
cmp byte [tape + r8], 0
jz c1410
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1410
c1410:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1411:
cmp byte [tape + r8], 0
jz c1411
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1411
c1411:
jmp o140f
c140f:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1412:
cmp byte [tape + r8], 0
jz c1412
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1412
c1412:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1413:
cmp byte [tape + r8], 0
jz c1413
add r8, 467
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 476
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1413
c1413:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o13fe
c13fe:
sub r8, 1
and r8, 0xFFFF
o1414:
cmp byte [tape + r8], 0
jz c1414
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1414
c1414:
add r8, 1
and r8, 0xFFFF
o1415:
cmp byte [tape + r8], 0
jz c1415
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1416:
cmp byte [tape + r8], 0
jz c1416
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1416
c1416:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1417:
cmp byte [tape + r8], 0
jz c1417
sub r8, 2
and r8, 0xFFFF
jmp o1417
c1417:
add r8, 1
and r8, 0xFFFF
o1418:
cmp byte [tape + r8], 0
jz c1418
add r8, 1
and r8, 0xFFFF
o1419:
cmp byte [tape + r8], 0
jz c1419
add r8, 2
and r8, 0xFFFF
jmp o1419
c1419:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o141a:
cmp byte [tape + r8], 0
jz c141a
sub r8, 2
and r8, 0xFFFF
jmp o141a
c141a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1418
c1418:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
call z
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1415
c1415:
add r8, 475
and r8, 0xFFFF
push 1
push 476
call ms
sub r8, 476
and r8, 0xFFFF
o141b:
cmp byte [tape + r8], 0
jz c141b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o141b
c141b:
add r8, 1
and r8, 0xFFFF
o141c:
cmp byte [tape + r8], 0
jz c141c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 20
and r8, 0xFFFF
o141d:
cmp byte [tape + r8], 0
jz c141d
sub r8, 20
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o141d
c141d:
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o141e:
cmp byte [tape + r8], 0
jz c141e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o141e
c141e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o141f:
cmp byte [tape + r8], 0
jz c141f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o141f
c141f:
sub r8, 1
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o1420:
cmp byte [tape + r8], 0
jz c1420
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1420
c1420:
add r8, 1
and r8, 0xFFFF
o1421:
cmp byte [tape + r8], 0
jz c1421
sub r8, 3
and r8, 0xFFFF
o1422:
cmp byte [tape + r8], 0
jz c1422
sub r8, 2
and r8, 0xFFFF
jmp o1422
c1422:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1423:
cmp byte [tape + r8], 0
jz c1423
add r8, 2
and r8, 0xFFFF
jmp o1423
c1423:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1421
c1421:
sub r8, 3
and r8, 0xFFFF
o1424:
cmp byte [tape + r8], 0
jz c1424
sub r8, 2
and r8, 0xFFFF
jmp o1424
c1424:
add r8, 1
and r8, 0xFFFF
o1425:
cmp byte [tape + r8], 0
jz c1425
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1425
c1425:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1426:
cmp byte [tape + r8], 0
jz c1426
add r8, 2
and r8, 0xFFFF
jmp o1426
c1426:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1427:
cmp byte [tape + r8], 0
jz c1427
sub r8, 2
and r8, 0xFFFF
jmp o1427
c1427:
add r8, 1
and r8, 0xFFFF
o1428:
cmp byte [tape + r8], 0
jz c1428
add r8, 1
and r8, 0xFFFF
o1429:
cmp byte [tape + r8], 0
jz c1429
add r8, 2
and r8, 0xFFFF
jmp o1429
c1429:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o142a:
cmp byte [tape + r8], 0
jz c142a
sub r8, 2
and r8, 0xFFFF
jmp o142a
c142a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1428
c1428:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 35
and r8, 0xFFFF
call z
add byte [tape + r8], 11
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o142b:
cmp byte [tape + r8], 0
jz c142b
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o142b
c142b:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o142c:
cmp byte [tape + r8], 0
jz c142c
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o142c
c142c:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o142d:
cmp byte [tape + r8], 0
jz c142d
call z
add r8, 8
and r8, 0xFFFF
o142e:
cmp byte [tape + r8], 0
jz c142e
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o142e
c142e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o142f:
cmp byte [tape + r8], 0
jz c142f
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o142f
c142f:
jmp o142d
c142d:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1430:
cmp byte [tape + r8], 0
jz c1430
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1430
c1430:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1431:
cmp byte [tape + r8], 0
jz c1431
add r8, 468
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 477
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1431
c1431:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o141c
c141c:
sub r8, 1
and r8, 0xFFFF
o1432:
cmp byte [tape + r8], 0
jz c1432
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1432
c1432:
add r8, 1
and r8, 0xFFFF
o1433:
cmp byte [tape + r8], 0
jz c1433
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add byte [tape + r8], 10
sub r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 7
call m
add r8, 43
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o1434:
cmp byte [tape + r8], 0
jz c1434
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1434
c1434:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1435:
cmp byte [tape + r8], 0
jz c1435
sub r8, 2
and r8, 0xFFFF
jmp o1435
c1435:
add r8, 1
and r8, 0xFFFF
o1436:
cmp byte [tape + r8], 0
jz c1436
add r8, 1
and r8, 0xFFFF
o1437:
cmp byte [tape + r8], 0
jz c1437
add r8, 2
and r8, 0xFFFF
jmp o1437
c1437:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1438:
cmp byte [tape + r8], 0
jz c1438
sub r8, 2
and r8, 0xFFFF
jmp o1438
c1438:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1436
c1436:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 45
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1433
c1433:
add r8, 476
and r8, 0xFFFF
push 1
push 477
call ms
sub r8, 4
and r8, 0xFFFF
push 1
push 473
call ms
sub r8, 473
and r8, 0xFFFF
o1439:
cmp byte [tape + r8], 0
jz c1439
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1439
c1439:
add r8, 1
and r8, 0xFFFF
o143a:
cmp byte [tape + r8], 0
jz c143a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o143b:
cmp byte [tape + r8], 0
jz c143b
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o143b
c143b:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o143c:
cmp byte [tape + r8], 0
jz c143c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o143c
c143c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o143d:
cmp byte [tape + r8], 0
jz c143d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o143d
c143d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o143e:
cmp byte [tape + r8], 0
jz c143e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o143e
c143e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o143f:
cmp byte [tape + r8], 0
jz c143f
add r8, 469
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 478
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o143f
c143f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o143a
c143a:
sub r8, 1
and r8, 0xFFFF
o1440:
cmp byte [tape + r8], 0
jz c1440
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1440
c1440:
add r8, 1
and r8, 0xFFFF
o1441:
cmp byte [tape + r8], 0
jz c1441
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o1442:
cmp byte [tape + r8], 0
jz c1442
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1442
c1442:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1441
c1441:
add r8, 477
and r8, 0xFFFF
push 1
push 478
call ms
sub r8, 478
and r8, 0xFFFF
o1443:
cmp byte [tape + r8], 0
jz c1443
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1443
c1443:
add r8, 1
and r8, 0xFFFF
o1444:
cmp byte [tape + r8], 0
jz c1444
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1445:
cmp byte [tape + r8], 0
jz c1445
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1445
c1445:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1446:
cmp byte [tape + r8], 0
jz c1446
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1446
c1446:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1447:
cmp byte [tape + r8], 0
jz c1447
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1447
c1447:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1448:
cmp byte [tape + r8], 0
jz c1448
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1448
c1448:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1449:
cmp byte [tape + r8], 0
jz c1449
add r8, 470
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 479
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1449
c1449:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1444
c1444:
sub r8, 1
and r8, 0xFFFF
o144a:
cmp byte [tape + r8], 0
jz c144a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o144a
c144a:
add r8, 1
and r8, 0xFFFF
o144b:
cmp byte [tape + r8], 0
jz c144b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 20
and r8, 0xFFFF
o144c:
cmp byte [tape + r8], 0
jz c144c
sub r8, 20
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o144c
c144c:
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o144d:
cmp byte [tape + r8], 0
jz c144d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o144d
c144d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o144e:
cmp byte [tape + r8], 0
jz c144e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o144e
c144e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o144f:
cmp byte [tape + r8], 0
jz c144f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o144f
c144f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1450:
cmp byte [tape + r8], 0
jz c1450
add r8, 471
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 480
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1450
c1450:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o144b
c144b:
sub r8, 1
and r8, 0xFFFF
o1451:
cmp byte [tape + r8], 0
jz c1451
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1451
c1451:
add r8, 1
and r8, 0xFFFF
o1452:
cmp byte [tape + r8], 0
jz c1452
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o1453:
cmp byte [tape + r8], 0
jz c1453
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1453
c1453:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 479
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 481
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1452
c1452:
add r8, 479
and r8, 0xFFFF
push 1
push 480
call ms
sub r8, 480
and r8, 0xFFFF
o1454:
cmp byte [tape + r8], 0
jz c1454
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1454
c1454:
add r8, 1
and r8, 0xFFFF
o1455:
cmp byte [tape + r8], 0
jz c1455
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o1456:
cmp byte [tape + r8], 0
jz c1456
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1456
c1456:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1455
c1455:
add r8, 480
and r8, 0xFFFF
push 1
push 481
call ms
sub r8, 481
and r8, 0xFFFF
o1457:
cmp byte [tape + r8], 0
jz c1457
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1457
c1457:
add r8, 1
and r8, 0xFFFF
o1458:
cmp byte [tape + r8], 0
jz c1458
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1458
c1458:
add r8, 478
and r8, 0xFFFF
push 1
push 479
call ms
sub r8, 479
and r8, 0xFFFF
o1459:
cmp byte [tape + r8], 0
jz c1459
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1459
c1459:
add r8, 1
and r8, 0xFFFF
o145a:
cmp byte [tape + r8], 0
jz c145a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
o145b:
cmp byte [tape + r8], 0
jz c145b
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o145b
c145b:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o145c:
cmp byte [tape + r8], 0
jz c145c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o145c
c145c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o145d:
cmp byte [tape + r8], 0
jz c145d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o145d
c145d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o145e:
cmp byte [tape + r8], 0
jz c145e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o145e
c145e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o145f:
cmp byte [tape + r8], 0
jz c145f
add r8, 473
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 482
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o145f
c145f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o145a
c145a:
sub r8, 1
and r8, 0xFFFF
o1460:
cmp byte [tape + r8], 0
jz c1460
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1460
c1460:
add r8, 1
and r8, 0xFFFF
o1461:
cmp byte [tape + r8], 0
jz c1461
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o1462:
cmp byte [tape + r8], 0
jz c1462
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1462
c1462:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 11
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1461
c1461:
add r8, 481
and r8, 0xFFFF
push 1
push 482
call ms
sub r8, 12
and r8, 0xFFFF
push 1
push 470
call ms
sub r8, 470
and r8, 0xFFFF
o1463:
cmp byte [tape + r8], 0
jz c1463
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1463
c1463:
add r8, 1
and r8, 0xFFFF
o1464:
cmp byte [tape + r8], 0
jz c1464
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1465:
cmp byte [tape + r8], 0
jz c1465
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1465
c1465:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1466:
cmp byte [tape + r8], 0
jz c1466
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1466
c1466:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1467:
cmp byte [tape + r8], 0
jz c1467
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1467
c1467:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1468:
cmp byte [tape + r8], 0
jz c1468
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1468
c1468:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1469:
cmp byte [tape + r8], 0
jz c1469
add r8, 474
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 483
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1469
c1469:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1464
c1464:
sub r8, 1
and r8, 0xFFFF
o146a:
cmp byte [tape + r8], 0
jz c146a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o146a
c146a:
add r8, 1
and r8, 0xFFFF
o146b:
cmp byte [tape + r8], 0
jz c146b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o146b
c146b:
add r8, 483
and r8, 0xFFFF
push 1
push 484
call ms
sub r8, 484
and r8, 0xFFFF
o146c:
cmp byte [tape + r8], 0
jz c146c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o146c
c146c:
add r8, 1
and r8, 0xFFFF
o146d:
cmp byte [tape + r8], 0
jz c146d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o146e:
cmp byte [tape + r8], 0
jz c146e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o146e
c146e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call i
add r8, 105
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
call z
add r8, 105
and r8, 0xFFFF
o146f:
cmp byte [tape + r8], 0
jz c146f
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o146f
c146f:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1470:
cmp byte [tape + r8], 0
jz c1470
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1470
c1470:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1471:
cmp byte [tape + r8], 0
jz c1471
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1471
c1471:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
o1472:
cmp byte [tape + r8], 0
jz c1472
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1472
c1472:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1473:
cmp byte [tape + r8], 0
jz c1473
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1473
c1473:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1474:
cmp byte [tape + r8], 0
jz c1474
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1474
c1474:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1475:
cmp byte [tape + r8], 0
jz c1475
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1475
c1475:
add r8, 8
and r8, 0xFFFF
o1476:
cmp byte [tape + r8], 0
jz c1476
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1476
c1476:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1477:
cmp byte [tape + r8], 0
jz c1477
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1477
c1477:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1478:
cmp byte [tape + r8], 0
jz c1478
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1478
c1478:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1479:
cmp byte [tape + r8], 0
jz c1479
add r8, 476
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 485
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1479
c1479:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o146d
c146d:
sub r8, 1
and r8, 0xFFFF
o147a:
cmp byte [tape + r8], 0
jz c147a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o147a
c147a:
add r8, 1
and r8, 0xFFFF
o147b:
cmp byte [tape + r8], 0
jz c147b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o147b
c147b:
add r8, 484
and r8, 0xFFFF
push 1
push 485
call ms
sub r8, 485
and r8, 0xFFFF
o147c:
cmp byte [tape + r8], 0
jz c147c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o147c
c147c:
add r8, 1
and r8, 0xFFFF
o147d:
cmp byte [tape + r8], 0
jz c147d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o147e:
cmp byte [tape + r8], 0
jz c147e
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o147e
c147e:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o147f:
cmp byte [tape + r8], 0
jz c147f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o147f
c147f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1480:
cmp byte [tape + r8], 0
jz c1480
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1480
c1480:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
o1481:
cmp byte [tape + r8], 0
jz c1481
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1481
c1481:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 6
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1482:
cmp byte [tape + r8], 0
jz c1482
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1482
c1482:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1483:
cmp byte [tape + r8], 0
jz c1483
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1483
c1483:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1484:
cmp byte [tape + r8], 0
jz c1484
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1484
c1484:
add r8, 8
and r8, 0xFFFF
o1485:
cmp byte [tape + r8], 0
jz c1485
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1485
c1485:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1486:
cmp byte [tape + r8], 0
jz c1486
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1486
c1486:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1487:
cmp byte [tape + r8], 0
jz c1487
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1487
c1487:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1488:
cmp byte [tape + r8], 0
jz c1488
add r8, 477
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 486
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1488
c1488:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o147d
c147d:
sub r8, 1
and r8, 0xFFFF
o1489:
cmp byte [tape + r8], 0
jz c1489
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1489
c1489:
add r8, 1
and r8, 0xFFFF
o148a:
cmp byte [tape + r8], 0
jz c148a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o148a
c148a:
add r8, 485
and r8, 0xFFFF
push 1
push 486
call ms
sub r8, 486
and r8, 0xFFFF
o148b:
cmp byte [tape + r8], 0
jz c148b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o148b
c148b:
add r8, 1
and r8, 0xFFFF
o148c:
cmp byte [tape + r8], 0
jz c148c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o148d:
cmp byte [tape + r8], 0
jz c148d
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o148d
c148d:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 1
and r8, 0xFFFF
o148e:
cmp byte [tape + r8], 0
jz c148e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o148e
c148e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o148f:
cmp byte [tape + r8], 0
jz c148f
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o148f
c148f:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
o1490:
cmp byte [tape + r8], 0
jz c1490
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1490
c1490:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
add r8, 1
and r8, 0xFFFF
o1491:
cmp byte [tape + r8], 0
jz c1491
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1491
c1491:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1492:
cmp byte [tape + r8], 0
jz c1492
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1492
c1492:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1493:
cmp byte [tape + r8], 0
jz c1493
call z
add r8, 8
and r8, 0xFFFF
o1494:
cmp byte [tape + r8], 0
jz c1494
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1494
c1494:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1495:
cmp byte [tape + r8], 0
jz c1495
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1495
c1495:
jmp o1493
c1493:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1496:
cmp byte [tape + r8], 0
jz c1496
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1496
c1496:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1497:
cmp byte [tape + r8], 0
jz c1497
add r8, 478
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 487
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1497
c1497:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o148c
c148c:
add r8, 487
and r8, 0xFFFF
push 1
push 488
call ms
sub r8, 488
and r8, 0xFFFF
o1498:
cmp byte [tape + r8], 0
jz c1498
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1498
c1498:
add r8, 1
and r8, 0xFFFF
o1499:
cmp byte [tape + r8], 0
jz c1499
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call i
add r8, 110
and r8, 0xFFFF
call z
sub r8, 110
and r8, 0xFFFF
push 1
push 110
call m
call z
add r8, 110
and r8, 0xFFFF
o149a:
cmp byte [tape + r8], 0
jz c149a
sub r8, 110
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o149a
c149a:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o149b:
cmp byte [tape + r8], 0
jz c149b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o149b
c149b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o149c:
cmp byte [tape + r8], 0
jz c149c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o149c
c149c:
add r8, 7
and r8, 0xFFFF
call z
add r8, 109
and r8, 0xFFFF
o149d:
cmp byte [tape + r8], 0
jz c149d
sub r8, 109
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o149d
c149d:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o149e:
cmp byte [tape + r8], 0
jz c149e
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o149e
c149e:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o149f:
cmp byte [tape + r8], 0
jz c149f
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o149f
c149f:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o14a0:
cmp byte [tape + r8], 0
jz c14a0
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14a0
c14a0:
add r8, 8
and r8, 0xFFFF
o14a1:
cmp byte [tape + r8], 0
jz c14a1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14a1
c14a1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o14a2:
cmp byte [tape + r8], 0
jz c14a2
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14a2
c14a2:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o14a3:
cmp byte [tape + r8], 0
jz c14a3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14a3
c14a3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o14a4:
cmp byte [tape + r8], 0
jz c14a4
add r8, 479
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 488
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o14a4
c14a4:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1499
c1499:
add r8, 486
and r8, 0xFFFF
push 1
push 487
call ms
sub r8, 487
and r8, 0xFFFF
o14a5:
cmp byte [tape + r8], 0
jz c14a5
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14a5
c14a5:
add r8, 1
and r8, 0xFFFF
o14a6:
cmp byte [tape + r8], 0
jz c14a6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o14a7:
cmp byte [tape + r8], 0
jz c14a7
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 34
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14a7
c14a7:
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o14a8:
cmp byte [tape + r8], 0
jz c14a8
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14a8
c14a8:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o14a9:
cmp byte [tape + r8], 0
jz c14a9
add r8, 2
and r8, 0xFFFF
o14aa:
cmp byte [tape + r8], 0
jz c14aa
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14aa
c14aa:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o14ab:
cmp byte [tape + r8], 0
jz c14ab
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o14ab
c14ab:
sub r8, 3
and r8, 0xFFFF
o14ac:
cmp byte [tape + r8], 0
jz c14ac
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14ac
c14ac:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14a9
c14a9:
sub r8, 1
and r8, 0xFFFF
o14ad:
cmp byte [tape + r8], 0
jz c14ad
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o14ad
c14ad:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o14ae:
cmp byte [tape + r8], 0
jz c14ae
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14ae
c14ae:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o14af:
cmp byte [tape + r8], 0
jz c14af
add r8, 475
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 484
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o14af
c14af:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14a6
c14a6:
sub r8, 1
and r8, 0xFFFF
o14b0:
cmp byte [tape + r8], 0
jz c14b0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b0
c14b0:
add r8, 1
and r8, 0xFFFF
o14b1:
cmp byte [tape + r8], 0
jz c14b1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b1
c14b1:
add r8, 482
and r8, 0xFFFF
push 1
push 483
call ms
sub r8, 483
and r8, 0xFFFF
o14b2:
cmp byte [tape + r8], 0
jz c14b2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b2
c14b2:
add r8, 1
and r8, 0xFFFF
o14b3:
cmp byte [tape + r8], 0
jz c14b3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o14b4:
cmp byte [tape + r8], 0
jz c14b4
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b4
c14b4:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14b5:
cmp byte [tape + r8], 0
jz c14b5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b5
c14b5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o14b6:
cmp byte [tape + r8], 0
jz c14b6
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o14b6
c14b6:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o14b7:
cmp byte [tape + r8], 0
jz c14b7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b7
c14b7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o14b8:
cmp byte [tape + r8], 0
jz c14b8
add r8, 480
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 489
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o14b8
c14b8:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b3
c14b3:
sub r8, 1
and r8, 0xFFFF
o14b9:
cmp byte [tape + r8], 0
jz c14b9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14b9
c14b9:
add r8, 1
and r8, 0xFFFF
o14ba:
cmp byte [tape + r8], 0
jz c14ba
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
o14bb:
cmp byte [tape + r8], 0
jz c14bb
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14bb
c14bb:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o14bc:
cmp byte [tape + r8], 0
jz c14bc
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o14bc
c14bc:
add r8, 1
and r8, 0xFFFF
o14bd:
cmp byte [tape + r8], 0
jz c14bd
sub r8, 3
and r8, 0xFFFF
o14be:
cmp byte [tape + r8], 0
jz c14be
sub r8, 2
and r8, 0xFFFF
jmp o14be
c14be:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14bf:
cmp byte [tape + r8], 0
jz c14bf
add r8, 2
and r8, 0xFFFF
jmp o14bf
c14bf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14bd
c14bd:
sub r8, 3
and r8, 0xFFFF
o14c0:
cmp byte [tape + r8], 0
jz c14c0
sub r8, 2
and r8, 0xFFFF
jmp o14c0
c14c0:
add r8, 1
and r8, 0xFFFF
o14c1:
cmp byte [tape + r8], 0
jz c14c1
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14c1
c14c1:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o14c2:
cmp byte [tape + r8], 0
jz c14c2
add r8, 2
and r8, 0xFFFF
jmp o14c2
c14c2:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o14c3:
cmp byte [tape + r8], 0
jz c14c3
sub r8, 2
and r8, 0xFFFF
jmp o14c3
c14c3:
add r8, 1
and r8, 0xFFFF
o14c4:
cmp byte [tape + r8], 0
jz c14c4
add r8, 1
and r8, 0xFFFF
o14c5:
cmp byte [tape + r8], 0
jz c14c5
add r8, 2
and r8, 0xFFFF
jmp o14c5
c14c5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o14c6:
cmp byte [tape + r8], 0
jz c14c6
sub r8, 2
and r8, 0xFFFF
jmp o14c6
c14c6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14c4
c14c4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14c7:
cmp byte [tape + r8], 0
jz c14c7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14c7
c14c7:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o14c8:
cmp byte [tape + r8], 0
jz c14c8
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o14c8
c14c8:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o14c9:
cmp byte [tape + r8], 0
jz c14c9
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14c9
c14c9:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o14ca:
cmp byte [tape + r8], 0
jz c14ca
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o14ca
c14ca:
add r8, 1
and r8, 0xFFFF
o14cb:
cmp byte [tape + r8], 0
jz c14cb
sub r8, 3
and r8, 0xFFFF
o14cc:
cmp byte [tape + r8], 0
jz c14cc
sub r8, 2
and r8, 0xFFFF
jmp o14cc
c14cc:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14cd:
cmp byte [tape + r8], 0
jz c14cd
add r8, 2
and r8, 0xFFFF
jmp o14cd
c14cd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14cb
c14cb:
sub r8, 3
and r8, 0xFFFF
o14ce:
cmp byte [tape + r8], 0
jz c14ce
sub r8, 2
and r8, 0xFFFF
jmp o14ce
c14ce:
add r8, 1
and r8, 0xFFFF
o14cf:
cmp byte [tape + r8], 0
jz c14cf
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14cf
c14cf:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o14d0:
cmp byte [tape + r8], 0
jz c14d0
add r8, 2
and r8, 0xFFFF
jmp o14d0
c14d0:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o14d1:
cmp byte [tape + r8], 0
jz c14d1
sub r8, 2
and r8, 0xFFFF
jmp o14d1
c14d1:
add r8, 1
and r8, 0xFFFF
o14d2:
cmp byte [tape + r8], 0
jz c14d2
add r8, 1
and r8, 0xFFFF
o14d3:
cmp byte [tape + r8], 0
jz c14d3
add r8, 2
and r8, 0xFFFF
jmp o14d3
c14d3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o14d4:
cmp byte [tape + r8], 0
jz c14d4
sub r8, 2
and r8, 0xFFFF
jmp o14d4
c14d4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14d2
c14d2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 35
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
o14d5:
cmp byte [tape + r8], 0
jz c14d5
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14d5
c14d5:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14d6:
cmp byte [tape + r8], 0
jz c14d6
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14d6
c14d6:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o14d7:
cmp byte [tape + r8], 0
jz c14d7
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14d7
c14d7:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o14d8:
cmp byte [tape + r8], 0
jz c14d8
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14d8
c14d8:
add r8, 8
and r8, 0xFFFF
o14d9:
cmp byte [tape + r8], 0
jz c14d9
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14d9
c14d9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o14da:
cmp byte [tape + r8], 0
jz c14da
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14da
c14da:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o14db:
cmp byte [tape + r8], 0
jz c14db
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14db
c14db:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o14dc:
cmp byte [tape + r8], 0
jz c14dc
add r8, 481
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 490
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o14dc
c14dc:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14ba
c14ba:
sub r8, 1
and r8, 0xFFFF
o14dd:
cmp byte [tape + r8], 0
jz c14dd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14dd
c14dd:
add r8, 1
and r8, 0xFFFF
o14de:
cmp byte [tape + r8], 0
jz c14de
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o14df:
cmp byte [tape + r8], 0
jz c14df
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14df
c14df:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14e0:
cmp byte [tape + r8], 0
jz c14e0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14e0
c14e0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o14e1:
cmp byte [tape + r8], 0
jz c14e1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o14e1
c14e1:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o14e2:
cmp byte [tape + r8], 0
jz c14e2
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14e2
c14e2:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14e3:
cmp byte [tape + r8], 0
jz c14e3
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14e3
c14e3:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o14e4:
cmp byte [tape + r8], 0
jz c14e4
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14e4
c14e4:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o14e5:
cmp byte [tape + r8], 0
jz c14e5
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14e5
c14e5:
add r8, 8
and r8, 0xFFFF
o14e6:
cmp byte [tape + r8], 0
jz c14e6
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14e6
c14e6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o14e7:
cmp byte [tape + r8], 0
jz c14e7
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14e7
c14e7:
add r8, 8
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o14e8:
cmp byte [tape + r8], 0
jz c14e8
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14e8
c14e8:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14e9:
cmp byte [tape + r8], 0
jz c14e9
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14e9
c14e9:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o14ea:
cmp byte [tape + r8], 0
jz c14ea
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14ea
c14ea:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o14eb:
cmp byte [tape + r8], 0
jz c14eb
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14eb
c14eb:
add r8, 8
and r8, 0xFFFF
o14ec:
cmp byte [tape + r8], 0
jz c14ec
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14ec
c14ec:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o14ed:
cmp byte [tape + r8], 0
jz c14ed
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o14ed
c14ed:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o14ee:
cmp byte [tape + r8], 0
jz c14ee
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14ee
c14ee:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o14ef:
cmp byte [tape + r8], 0
jz c14ef
add r8, 482
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 491
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o14ef
c14ef:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14de
c14de:
sub r8, 1
and r8, 0xFFFF
o14f0:
cmp byte [tape + r8], 0
jz c14f0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f0
c14f0:
add r8, 1
and r8, 0xFFFF
o14f1:
cmp byte [tape + r8], 0
jz c14f1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f1
c14f1:
add r8, 490
and r8, 0xFFFF
push 1
push 491
call ms
sub r8, 491
and r8, 0xFFFF
o14f2:
cmp byte [tape + r8], 0
jz c14f2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f2
c14f2:
add r8, 1
and r8, 0xFFFF
o14f3:
cmp byte [tape + r8], 0
jz c14f3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o14f4:
cmp byte [tape + r8], 0
jz c14f4
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f4
c14f4:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14f5:
cmp byte [tape + r8], 0
jz c14f5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f5
c14f5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o14f6:
cmp byte [tape + r8], 0
jz c14f6
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o14f6
c14f6:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o14f7:
cmp byte [tape + r8], 0
jz c14f7
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f7
c14f7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o14f8:
cmp byte [tape + r8], 0
jz c14f8
add r8, 483
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 492
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o14f8
c14f8:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f3
c14f3:
sub r8, 1
and r8, 0xFFFF
o14f9:
cmp byte [tape + r8], 0
jz c14f9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14f9
c14f9:
add r8, 1
and r8, 0xFFFF
o14fa:
cmp byte [tape + r8], 0
jz c14fa
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o14fb:
cmp byte [tape + r8], 0
jz c14fb
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14fb
c14fb:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14fa
c14fa:
add r8, 491
and r8, 0xFFFF
push 1
push 492
call ms
sub r8, 492
and r8, 0xFFFF
o14fc:
cmp byte [tape + r8], 0
jz c14fc
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14fc
c14fc:
add r8, 1
and r8, 0xFFFF
o14fd:
cmp byte [tape + r8], 0
jz c14fd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o14fe:
cmp byte [tape + r8], 0
jz c14fe
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14fe
c14fe:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o14ff:
cmp byte [tape + r8], 0
jz c14ff
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14ff
c14ff:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1500:
cmp byte [tape + r8], 0
jz c1500
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1500
c1500:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1501:
cmp byte [tape + r8], 0
jz c1501
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1501
c1501:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1502:
cmp byte [tape + r8], 0
jz c1502
add r8, 484
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 493
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1502
c1502:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o14fd
c14fd:
sub r8, 1
and r8, 0xFFFF
o1503:
cmp byte [tape + r8], 0
jz c1503
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1503
c1503:
add r8, 1
and r8, 0xFFFF
o1504:
cmp byte [tape + r8], 0
jz c1504
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
o1505:
cmp byte [tape + r8], 0
jz c1505
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1505
c1505:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1506:
cmp byte [tape + r8], 0
jz c1506
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1506
c1506:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1507:
cmp byte [tape + r8], 0
jz c1507
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1507
c1507:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1508:
cmp byte [tape + r8], 0
jz c1508
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1508
c1508:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1509:
cmp byte [tape + r8], 0
jz c1509
add r8, 485
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 494
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1509
c1509:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1504
c1504:
sub r8, 1
and r8, 0xFFFF
o150a:
cmp byte [tape + r8], 0
jz c150a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o150a
c150a:
add r8, 1
and r8, 0xFFFF
o150b:
cmp byte [tape + r8], 0
jz c150b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o150c:
cmp byte [tape + r8], 0
jz c150c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o150c
c150c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 5
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 492
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 495
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o150b
c150b:
add r8, 493
and r8, 0xFFFF
push 1
push 494
call ms
sub r8, 494
and r8, 0xFFFF
o150d:
cmp byte [tape + r8], 0
jz c150d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o150d
c150d:
add r8, 1
and r8, 0xFFFF
o150e:
cmp byte [tape + r8], 0
jz c150e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o150f:
cmp byte [tape + r8], 0
jz c150f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o150f
c150f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o150e
c150e:
add r8, 494
and r8, 0xFFFF
push 1
push 495
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 493
call ms
sub r8, 493
and r8, 0xFFFF
o1510:
cmp byte [tape + r8], 0
jz c1510
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1510
c1510:
add r8, 1
and r8, 0xFFFF
o1511:
cmp byte [tape + r8], 0
jz c1511
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1512:
cmp byte [tape + r8], 0
jz c1512
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1512
c1512:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1513:
cmp byte [tape + r8], 0
jz c1513
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1513
c1513:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1514:
cmp byte [tape + r8], 0
jz c1514
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1514
c1514:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o1515:
cmp byte [tape + r8], 0
jz c1515
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1515
c1515:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1516:
cmp byte [tape + r8], 0
jz c1516
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1516
c1516:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1517:
cmp byte [tape + r8], 0
jz c1517
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1517
c1517:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1518:
cmp byte [tape + r8], 0
jz c1518
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1518
c1518:
add r8, 8
and r8, 0xFFFF
o1519:
cmp byte [tape + r8], 0
jz c1519
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1519
c1519:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o151a:
cmp byte [tape + r8], 0
jz c151a
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o151a
c151a:
add r8, 8
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o151b:
cmp byte [tape + r8], 0
jz c151b
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o151b
c151b:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o151c:
cmp byte [tape + r8], 0
jz c151c
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o151c
c151c:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o151d:
cmp byte [tape + r8], 0
jz c151d
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o151d
c151d:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o151e:
cmp byte [tape + r8], 0
jz c151e
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o151e
c151e:
add r8, 8
and r8, 0xFFFF
o151f:
cmp byte [tape + r8], 0
jz c151f
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o151f
c151f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1520:
cmp byte [tape + r8], 0
jz c1520
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1520
c1520:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1521:
cmp byte [tape + r8], 0
jz c1521
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1521
c1521:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1522:
cmp byte [tape + r8], 0
jz c1522
add r8, 487
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 496
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1522
c1522:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1511
c1511:
sub r8, 1
and r8, 0xFFFF
o1523:
cmp byte [tape + r8], 0
jz c1523
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1523
c1523:
add r8, 1
and r8, 0xFFFF
o1524:
cmp byte [tape + r8], 0
jz c1524
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o1525:
cmp byte [tape + r8], 0
jz c1525
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1525
c1525:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o1526:
cmp byte [tape + r8], 0
jz c1526
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1526
c1526:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1524
c1524:
add r8, 495
and r8, 0xFFFF
push 1
push 496
call ms
sub r8, 496
and r8, 0xFFFF
o1527:
cmp byte [tape + r8], 0
jz c1527
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1527
c1527:
add r8, 1
and r8, 0xFFFF
o1528:
cmp byte [tape + r8], 0
jz c1528
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1529:
cmp byte [tape + r8], 0
jz c1529
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1529
c1529:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o152a:
cmp byte [tape + r8], 0
jz c152a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o152a
c152a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o152b:
cmp byte [tape + r8], 0
jz c152b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o152b
c152b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o152c:
cmp byte [tape + r8], 0
jz c152c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o152c
c152c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o152d:
cmp byte [tape + r8], 0
jz c152d
add r8, 488
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 497
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o152d
c152d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1528
c1528:
sub r8, 1
and r8, 0xFFFF
o152e:
cmp byte [tape + r8], 0
jz c152e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o152e
c152e:
add r8, 1
and r8, 0xFFFF
o152f:
cmp byte [tape + r8], 0
jz c152f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o1530:
cmp byte [tape + r8], 0
jz c1530
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1530
c1530:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o1531:
cmp byte [tape + r8], 0
jz c1531
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1531
c1531:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o152f
c152f:
add r8, 496
and r8, 0xFFFF
push 1
push 497
call ms
sub r8, 497
and r8, 0xFFFF
o1532:
cmp byte [tape + r8], 0
jz c1532
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1532
c1532:
add r8, 1
and r8, 0xFFFF
o1533:
cmp byte [tape + r8], 0
jz c1533
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1534:
cmp byte [tape + r8], 0
jz c1534
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1534
c1534:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1535:
cmp byte [tape + r8], 0
jz c1535
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1535
c1535:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1536:
cmp byte [tape + r8], 0
jz c1536
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1536
c1536:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1537:
cmp byte [tape + r8], 0
jz c1537
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1537
c1537:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1538:
cmp byte [tape + r8], 0
jz c1538
add r8, 489
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1538
c1538:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1533
c1533:
sub r8, 1
and r8, 0xFFFF
o1539:
cmp byte [tape + r8], 0
jz c1539
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1539
c1539:
add r8, 1
and r8, 0xFFFF
o153a:
cmp byte [tape + r8], 0
jz c153a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
o153b:
cmp byte [tape + r8], 0
jz c153b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o153b
c153b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 14
o153c:
cmp byte [tape + r8], 0
jz c153c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o153c
c153c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o153d:
cmp byte [tape + r8], 0
jz c153d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o153d
c153d:
add r8, 1
and r8, 0xFFFF
call o
call o
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o153a
c153a:
add r8, 497
and r8, 0xFFFF
push 1
push 498
call ms
sub r8, 498
and r8, 0xFFFF
o153e:
cmp byte [tape + r8], 0
jz c153e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o153e
c153e:
add r8, 1
and r8, 0xFFFF
o153f:
cmp byte [tape + r8], 0
jz c153f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
o1540:
cmp byte [tape + r8], 0
jz c1540
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1540
c1540:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1541:
cmp byte [tape + r8], 0
jz c1541
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1541
c1541:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1542:
cmp byte [tape + r8], 0
jz c1542
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1542
c1542:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1543:
cmp byte [tape + r8], 0
jz c1543
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1543
c1543:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1544:
cmp byte [tape + r8], 0
jz c1544
add r8, 490
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 499
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1544
c1544:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o153f
c153f:
sub r8, 1
and r8, 0xFFFF
o1545:
cmp byte [tape + r8], 0
jz c1545
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1545
c1545:
add r8, 1
and r8, 0xFFFF
o1546:
cmp byte [tape + r8], 0
jz c1546
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o1547:
cmp byte [tape + r8], 0
jz c1547
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1547
c1547:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1546
c1546:
add r8, 498
and r8, 0xFFFF
push 1
push 499
call ms
sub r8, 499
and r8, 0xFFFF
o1548:
cmp byte [tape + r8], 0
jz c1548
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1548
c1548:
add r8, 1
and r8, 0xFFFF
o1549:
cmp byte [tape + r8], 0
jz c1549
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
push 9
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1549
c1549:
add r8, 489
and r8, 0xFFFF
push 1
push 490
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 489
call ms
sub r8, 489
and r8, 0xFFFF
o154a:
cmp byte [tape + r8], 0
jz c154a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o154a
c154a:
add r8, 1
and r8, 0xFFFF
o154b:
cmp byte [tape + r8], 0
jz c154b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o154c:
cmp byte [tape + r8], 0
jz c154c
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o154c
c154c:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o154d:
cmp byte [tape + r8], 0
jz c154d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o154d
c154d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o154e:
cmp byte [tape + r8], 0
jz c154e
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o154e
c154e:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o154f:
cmp byte [tape + r8], 0
jz c154f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o154f
c154f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1550:
cmp byte [tape + r8], 0
jz c1550
add r8, 491
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 500
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1550
c1550:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o154b
c154b:
sub r8, 1
and r8, 0xFFFF
o1551:
cmp byte [tape + r8], 0
jz c1551
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1551
c1551:
add r8, 1
and r8, 0xFFFF
o1552:
cmp byte [tape + r8], 0
jz c1552
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 15
and r8, 0xFFFF
o1553:
cmp byte [tape + r8], 0
jz c1553
sub r8, 15
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 22
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1553
c1553:
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1554:
cmp byte [tape + r8], 0
jz c1554
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1554
c1554:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1555:
cmp byte [tape + r8], 0
jz c1555
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1555
c1555:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1556:
cmp byte [tape + r8], 0
jz c1556
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1556
c1556:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1557:
cmp byte [tape + r8], 0
jz c1557
add r8, 492
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 501
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1557
c1557:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1552
c1552:
sub r8, 1
and r8, 0xFFFF
o1558:
cmp byte [tape + r8], 0
jz c1558
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1558
c1558:
add r8, 1
and r8, 0xFFFF
o1559:
cmp byte [tape + r8], 0
jz c1559
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 493
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 502
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1559
c1559:
add r8, 500
and r8, 0xFFFF
push 1
push 501
call ms
sub r8, 501
and r8, 0xFFFF
o155a:
cmp byte [tape + r8], 0
jz c155a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o155a
c155a:
add r8, 1
and r8, 0xFFFF
o155b:
cmp byte [tape + r8], 0
jz c155b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 15
and r8, 0xFFFF
o155c:
cmp byte [tape + r8], 0
jz c155c
sub r8, 15
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 22
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o155c
c155c:
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o155b
c155b:
add r8, 501
and r8, 0xFFFF
push 1
push 502
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 500
call ms
sub r8, 500
and r8, 0xFFFF
o155d:
cmp byte [tape + r8], 0
jz c155d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o155d
c155d:
add r8, 1
and r8, 0xFFFF
o155e:
cmp byte [tape + r8], 0
jz c155e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o155f:
cmp byte [tape + r8], 0
jz c155f
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o155f
c155f:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1560:
cmp byte [tape + r8], 0
jz c1560
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1560
c1560:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1561:
cmp byte [tape + r8], 0
jz c1561
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1561
c1561:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1562:
cmp byte [tape + r8], 0
jz c1562
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1562
c1562:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1563:
cmp byte [tape + r8], 0
jz c1563
add r8, 494
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 503
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1563
c1563:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o155e
c155e:
sub r8, 1
and r8, 0xFFFF
o1564:
cmp byte [tape + r8], 0
jz c1564
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1564
c1564:
add r8, 1
and r8, 0xFFFF
o1565:
cmp byte [tape + r8], 0
jz c1565
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
o1566:
cmp byte [tape + r8], 0
jz c1566
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1566
c1566:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o1567:
cmp byte [tape + r8], 0
jz c1567
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1567
c1567:
add r8, 1
and r8, 0xFFFF
o1568:
cmp byte [tape + r8], 0
jz c1568
sub r8, 3
and r8, 0xFFFF
o1569:
cmp byte [tape + r8], 0
jz c1569
sub r8, 2
and r8, 0xFFFF
jmp o1569
c1569:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o156a:
cmp byte [tape + r8], 0
jz c156a
add r8, 2
and r8, 0xFFFF
jmp o156a
c156a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1568
c1568:
sub r8, 3
and r8, 0xFFFF
o156b:
cmp byte [tape + r8], 0
jz c156b
sub r8, 2
and r8, 0xFFFF
jmp o156b
c156b:
add r8, 1
and r8, 0xFFFF
o156c:
cmp byte [tape + r8], 0
jz c156c
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o156c
c156c:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o156d:
cmp byte [tape + r8], 0
jz c156d
add r8, 2
and r8, 0xFFFF
jmp o156d
c156d:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o156e:
cmp byte [tape + r8], 0
jz c156e
sub r8, 2
and r8, 0xFFFF
jmp o156e
c156e:
add r8, 1
and r8, 0xFFFF
o156f:
cmp byte [tape + r8], 0
jz c156f
add r8, 1
and r8, 0xFFFF
o1570:
cmp byte [tape + r8], 0
jz c1570
add r8, 2
and r8, 0xFFFF
jmp o1570
c1570:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1571:
cmp byte [tape + r8], 0
jz c1571
sub r8, 2
and r8, 0xFFFF
jmp o1571
c1571:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o156f
c156f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1572:
cmp byte [tape + r8], 0
jz c1572
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1572
c1572:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1573:
cmp byte [tape + r8], 0
jz c1573
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1573
c1573:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1574:
cmp byte [tape + r8], 0
jz c1574
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1574
c1574:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1575:
cmp byte [tape + r8], 0
jz c1575
add r8, 495
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 504
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1575
c1575:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1565
c1565:
sub r8, 1
and r8, 0xFFFF
o1576:
cmp byte [tape + r8], 0
jz c1576
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1576
c1576:
add r8, 1
and r8, 0xFFFF
o1577:
cmp byte [tape + r8], 0
jz c1577
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1578:
cmp byte [tape + r8], 0
jz c1578
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1578
c1578:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1577
c1577:
add r8, 503
and r8, 0xFFFF
push 1
push 504
call ms
sub r8, 504
and r8, 0xFFFF
o1579:
cmp byte [tape + r8], 0
jz c1579
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1579
c1579:
add r8, 1
and r8, 0xFFFF
o157a:
cmp byte [tape + r8], 0
jz c157a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o157b:
cmp byte [tape + r8], 0
jz c157b
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o157b
c157b:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o157c:
cmp byte [tape + r8], 0
jz c157c
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o157c
c157c:
add r8, 1
and r8, 0xFFFF
o157d:
cmp byte [tape + r8], 0
jz c157d
sub r8, 3
and r8, 0xFFFF
o157e:
cmp byte [tape + r8], 0
jz c157e
sub r8, 2
and r8, 0xFFFF
jmp o157e
c157e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o157f:
cmp byte [tape + r8], 0
jz c157f
add r8, 2
and r8, 0xFFFF
jmp o157f
c157f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o157d
c157d:
sub r8, 3
and r8, 0xFFFF
o1580:
cmp byte [tape + r8], 0
jz c1580
sub r8, 2
and r8, 0xFFFF
jmp o1580
c1580:
add r8, 1
and r8, 0xFFFF
o1581:
cmp byte [tape + r8], 0
jz c1581
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1581
c1581:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1582:
cmp byte [tape + r8], 0
jz c1582
add r8, 2
and r8, 0xFFFF
jmp o1582
c1582:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1583:
cmp byte [tape + r8], 0
jz c1583
sub r8, 2
and r8, 0xFFFF
jmp o1583
c1583:
add r8, 1
and r8, 0xFFFF
o1584:
cmp byte [tape + r8], 0
jz c1584
add r8, 1
and r8, 0xFFFF
o1585:
cmp byte [tape + r8], 0
jz c1585
add r8, 2
and r8, 0xFFFF
jmp o1585
c1585:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1586:
cmp byte [tape + r8], 0
jz c1586
sub r8, 2
and r8, 0xFFFF
jmp o1586
c1586:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1584
c1584:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o1587:
cmp byte [tape + r8], 0
jz c1587
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1587
c1587:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1588:
cmp byte [tape + r8], 0
jz c1588
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1588
c1588:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1589:
cmp byte [tape + r8], 0
jz c1589
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1589
c1589:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o158a:
cmp byte [tape + r8], 0
jz c158a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o158a
c158a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o158b:
cmp byte [tape + r8], 0
jz c158b
add r8, 496
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 505
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o158b
c158b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o157a
c157a:
sub r8, 1
and r8, 0xFFFF
o158c:
cmp byte [tape + r8], 0
jz c158c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o158c
c158c:
add r8, 1
and r8, 0xFFFF
o158d:
cmp byte [tape + r8], 0
jz c158d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o158e:
cmp byte [tape + r8], 0
jz c158e
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o158e
c158e:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o158f:
cmp byte [tape + r8], 0
jz c158f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o158f
c158f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1590:
cmp byte [tape + r8], 0
jz c1590
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1590
c1590:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1591:
cmp byte [tape + r8], 0
jz c1591
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1591
c1591:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1592:
cmp byte [tape + r8], 0
jz c1592
add r8, 497
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 506
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1592
c1592:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o158d
c158d:
sub r8, 1
and r8, 0xFFFF
o1593:
cmp byte [tape + r8], 0
jz c1593
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1593
c1593:
add r8, 1
and r8, 0xFFFF
o1594:
cmp byte [tape + r8], 0
jz c1594
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1595:
cmp byte [tape + r8], 0
jz c1595
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1595
c1595:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1594
c1594:
add r8, 505
and r8, 0xFFFF
push 1
push 506
call ms
sub r8, 506
and r8, 0xFFFF
o1596:
cmp byte [tape + r8], 0
jz c1596
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1596
c1596:
add r8, 1
and r8, 0xFFFF
o1597:
cmp byte [tape + r8], 0
jz c1597
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o1598:
cmp byte [tape + r8], 0
jz c1598
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1598
c1598:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1599:
cmp byte [tape + r8], 0
jz c1599
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1599
c1599:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o159a:
cmp byte [tape + r8], 0
jz c159a
add r8, 2
and r8, 0xFFFF
o159b:
cmp byte [tape + r8], 0
jz c159b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o159b
c159b:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o159c:
cmp byte [tape + r8], 0
jz c159c
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o159c
c159c:
sub r8, 3
and r8, 0xFFFF
o159d:
cmp byte [tape + r8], 0
jz c159d
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o159d
c159d:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o159a
c159a:
sub r8, 1
and r8, 0xFFFF
o159e:
cmp byte [tape + r8], 0
jz c159e
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o159e
c159e:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o159f:
cmp byte [tape + r8], 0
jz c159f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o159f
c159f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o15a0:
cmp byte [tape + r8], 0
jz c15a0
add r8, 498
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 507
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o15a0
c15a0:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1597
c1597:
sub r8, 1
and r8, 0xFFFF
o15a1:
cmp byte [tape + r8], 0
jz c15a1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15a1
c15a1:
add r8, 1
and r8, 0xFFFF
o15a2:
cmp byte [tape + r8], 0
jz c15a2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o15a3:
cmp byte [tape + r8], 0
jz c15a3
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15a3
c15a3:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o15a4:
cmp byte [tape + r8], 0
jz c15a4
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o15a4
c15a4:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o15a5:
cmp byte [tape + r8], 0
jz c15a5
sub r8, 2
and r8, 0xFFFF
jmp o15a5
c15a5:
add r8, 1
and r8, 0xFFFF
o15a6:
cmp byte [tape + r8], 0
jz c15a6
add r8, 1
and r8, 0xFFFF
o15a7:
cmp byte [tape + r8], 0
jz c15a7
add r8, 2
and r8, 0xFFFF
jmp o15a7
c15a7:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o15a8:
cmp byte [tape + r8], 0
jz c15a8
sub r8, 2
and r8, 0xFFFF
jmp o15a8
c15a8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15a6
c15a6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 37
and r8, 0xFFFF
call z
add r8, 22
and r8, 0xFFFF
o15a9:
cmp byte [tape + r8], 0
jz c15a9
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15a9
c15a9:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
o15aa:
cmp byte [tape + r8], 0
jz c15aa
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15aa
c15aa:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 12
o15ab:
cmp byte [tape + r8], 0
jz c15ab
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15ab
c15ab:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o15ac:
cmp byte [tape + r8], 0
jz c15ac
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15ac
c15ac:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 90
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 82
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o15ad:
cmp byte [tape + r8], 0
jz c15ad
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o15ad
c15ad:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o15ae:
cmp byte [tape + r8], 0
jz c15ae
sub r8, 2
and r8, 0xFFFF
jmp o15ae
c15ae:
add r8, 1
and r8, 0xFFFF
o15af:
cmp byte [tape + r8], 0
jz c15af
add r8, 1
and r8, 0xFFFF
o15b0:
cmp byte [tape + r8], 0
jz c15b0
add r8, 2
and r8, 0xFFFF
jmp o15b0
c15b0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o15b1:
cmp byte [tape + r8], 0
jz c15b1
sub r8, 2
and r8, 0xFFFF
jmp o15b1
c15b1:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15af
c15af:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 83
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o15b2:
cmp byte [tape + r8], 0
jz c15b2
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15b2
c15b2:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15b3:
cmp byte [tape + r8], 0
jz c15b3
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15b3
c15b3:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o15b4:
cmp byte [tape + r8], 0
jz c15b4
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o15b4
c15b4:
add r8, 7
and r8, 0xFFFF
call z
add r8, 4
and r8, 0xFFFF
o15b5:
cmp byte [tape + r8], 0
jz c15b5
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15b5
c15b5:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 9
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15b6:
cmp byte [tape + r8], 0
jz c15b6
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15b6
c15b6:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o15b7:
cmp byte [tape + r8], 0
jz c15b7
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o15b7
c15b7:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o15b8:
cmp byte [tape + r8], 0
jz c15b8
call z
add r8, 8
and r8, 0xFFFF
o15b9:
cmp byte [tape + r8], 0
jz c15b9
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15b9
c15b9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o15ba:
cmp byte [tape + r8], 0
jz c15ba
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o15ba
c15ba:
jmp o15b8
c15b8:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o15bb:
cmp byte [tape + r8], 0
jz c15bb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15bb
c15bb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o15bc:
cmp byte [tape + r8], 0
jz c15bc
add r8, 499
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 508
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o15bc
c15bc:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15a2
c15a2:
sub r8, 1
and r8, 0xFFFF
o15bd:
cmp byte [tape + r8], 0
jz c15bd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15bd
c15bd:
add r8, 1
and r8, 0xFFFF
o15be:
cmp byte [tape + r8], 0
jz c15be
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 25
and r8, 0xFFFF
o15bf:
cmp byte [tape + r8], 0
jz c15bf
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 32
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15bf
c15bf:
sub r8, 32
and r8, 0xFFFF
push 1
push 32
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15c0:
cmp byte [tape + r8], 0
jz c15c0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15c0
c15c0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o15c1:
cmp byte [tape + r8], 0
jz c15c1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o15c1
c15c1:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o15c2:
cmp byte [tape + r8], 0
jz c15c2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15c2
c15c2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o15c3:
cmp byte [tape + r8], 0
jz c15c3
add r8, 500
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 509
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o15c3
c15c3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15be
c15be:
sub r8, 1
and r8, 0xFFFF
o15c4:
cmp byte [tape + r8], 0
jz c15c4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15c4
c15c4:
add r8, 1
and r8, 0xFFFF
o15c5:
cmp byte [tape + r8], 0
jz c15c5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 25
and r8, 0xFFFF
call z
sub r8, 25
and r8, 0xFFFF
push 1
push 25
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15c5
c15c5:
add r8, 508
and r8, 0xFFFF
push 1
push 509
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 508
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 507
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 505
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 503
call ms
sub r8, 503
and r8, 0xFFFF
o15c6:
cmp byte [tape + r8], 0
jz c15c6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15c6
c15c6:
add r8, 1
and r8, 0xFFFF
o15c7:
cmp byte [tape + r8], 0
jz c15c7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o15c8:
cmp byte [tape + r8], 0
jz c15c8
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15c8
c15c8:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15c9:
cmp byte [tape + r8], 0
jz c15c9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15c9
c15c9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o15ca:
cmp byte [tape + r8], 0
jz c15ca
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o15ca
c15ca:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o15cb:
cmp byte [tape + r8], 0
jz c15cb
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15cb
c15cb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o15cc:
cmp byte [tape + r8], 0
jz c15cc
add r8, 501
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 510
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o15cc
c15cc:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15c7
c15c7:
sub r8, 1
and r8, 0xFFFF
o15cd:
cmp byte [tape + r8], 0
jz c15cd
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15cd
c15cd:
add r8, 1
and r8, 0xFFFF
o15ce:
cmp byte [tape + r8], 0
jz c15ce
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 16
and r8, 0xFFFF
o15cf:
cmp byte [tape + r8], 0
jz c15cf
sub r8, 16
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 23
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15cf
c15cf:
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15d0:
cmp byte [tape + r8], 0
jz c15d0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d0
c15d0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o15d1:
cmp byte [tape + r8], 0
jz c15d1
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o15d1
c15d1:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o15d2:
cmp byte [tape + r8], 0
jz c15d2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d2
c15d2:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o15d3:
cmp byte [tape + r8], 0
jz c15d3
add r8, 502
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 511
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o15d3
c15d3:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15ce
c15ce:
sub r8, 1
and r8, 0xFFFF
o15d4:
cmp byte [tape + r8], 0
jz c15d4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d4
c15d4:
add r8, 1
and r8, 0xFFFF
o15d5:
cmp byte [tape + r8], 0
jz c15d5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 503
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 512
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d5
c15d5:
add r8, 510
and r8, 0xFFFF
push 1
push 511
call ms
sub r8, 511
and r8, 0xFFFF
o15d6:
cmp byte [tape + r8], 0
jz c15d6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d6
c15d6:
add r8, 1
and r8, 0xFFFF
o15d7:
cmp byte [tape + r8], 0
jz c15d7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 16
and r8, 0xFFFF
o15d8:
cmp byte [tape + r8], 0
jz c15d8
sub r8, 16
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 23
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d8
c15d8:
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d7
c15d7:
add r8, 511
and r8, 0xFFFF
push 1
push 512
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 510
call ms
sub r8, 510
and r8, 0xFFFF
o15d9:
cmp byte [tape + r8], 0
jz c15d9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15d9
c15d9:
add r8, 1
and r8, 0xFFFF
o15da:
cmp byte [tape + r8], 0
jz c15da
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o15db:
cmp byte [tape + r8], 0
jz c15db
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15db
c15db:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15dc:
cmp byte [tape + r8], 0
jz c15dc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15dc
c15dc:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o15dd:
cmp byte [tape + r8], 0
jz c15dd
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o15dd
c15dd:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o15de:
cmp byte [tape + r8], 0
jz c15de
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15de
c15de:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o15df:
cmp byte [tape + r8], 0
jz c15df
add r8, 504
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 513
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o15df
c15df:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15da
c15da:
sub r8, 1
and r8, 0xFFFF
o15e0:
cmp byte [tape + r8], 0
jz c15e0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15e0
c15e0:
add r8, 1
and r8, 0xFFFF
o15e1:
cmp byte [tape + r8], 0
jz c15e1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 290
and r8, 0xFFFF
o15e2:
cmp byte [tape + r8], 0
jz c15e2
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15e2
c15e2:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o15e3:
cmp byte [tape + r8], 0
jz c15e3
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o15e3
c15e3:
add r8, 1
and r8, 0xFFFF
o15e4:
cmp byte [tape + r8], 0
jz c15e4
sub r8, 3
and r8, 0xFFFF
o15e5:
cmp byte [tape + r8], 0
jz c15e5
sub r8, 2
and r8, 0xFFFF
jmp o15e5
c15e5:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15e6:
cmp byte [tape + r8], 0
jz c15e6
add r8, 2
and r8, 0xFFFF
jmp o15e6
c15e6:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15e4
c15e4:
sub r8, 3
and r8, 0xFFFF
o15e7:
cmp byte [tape + r8], 0
jz c15e7
sub r8, 2
and r8, 0xFFFF
jmp o15e7
c15e7:
add r8, 1
and r8, 0xFFFF
o15e8:
cmp byte [tape + r8], 0
jz c15e8
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15e8
c15e8:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o15e9:
cmp byte [tape + r8], 0
jz c15e9
add r8, 2
and r8, 0xFFFF
jmp o15e9
c15e9:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o15ea:
cmp byte [tape + r8], 0
jz c15ea
sub r8, 2
and r8, 0xFFFF
jmp o15ea
c15ea:
add r8, 1
and r8, 0xFFFF
o15eb:
cmp byte [tape + r8], 0
jz c15eb
add r8, 1
and r8, 0xFFFF
o15ec:
cmp byte [tape + r8], 0
jz c15ec
add r8, 2
and r8, 0xFFFF
jmp o15ec
c15ec:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o15ed:
cmp byte [tape + r8], 0
jz c15ed
sub r8, 2
and r8, 0xFFFF
jmp o15ed
c15ed:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15eb
c15eb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15ee:
cmp byte [tape + r8], 0
jz c15ee
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15ee
c15ee:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o15ef:
cmp byte [tape + r8], 0
jz c15ef
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o15ef
c15ef:
add r8, 7
and r8, 0xFFFF
call z
add r8, 289
and r8, 0xFFFF
o15f0:
cmp byte [tape + r8], 0
jz c15f0
sub r8, 289
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15f0
c15f0:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 44
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o15f1:
cmp byte [tape + r8], 0
jz c15f1
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o15f1
c15f1:
add r8, 1
and r8, 0xFFFF
o15f2:
cmp byte [tape + r8], 0
jz c15f2
sub r8, 3
and r8, 0xFFFF
o15f3:
cmp byte [tape + r8], 0
jz c15f3
sub r8, 2
and r8, 0xFFFF
jmp o15f3
c15f3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15f4:
cmp byte [tape + r8], 0
jz c15f4
add r8, 2
and r8, 0xFFFF
jmp o15f4
c15f4:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15f2
c15f2:
sub r8, 3
and r8, 0xFFFF
o15f5:
cmp byte [tape + r8], 0
jz c15f5
sub r8, 2
and r8, 0xFFFF
jmp o15f5
c15f5:
add r8, 1
and r8, 0xFFFF
o15f6:
cmp byte [tape + r8], 0
jz c15f6
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15f6
c15f6:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o15f7:
cmp byte [tape + r8], 0
jz c15f7
add r8, 2
and r8, 0xFFFF
jmp o15f7
c15f7:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o15f8:
cmp byte [tape + r8], 0
jz c15f8
sub r8, 2
and r8, 0xFFFF
jmp o15f8
c15f8:
add r8, 1
and r8, 0xFFFF
o15f9:
cmp byte [tape + r8], 0
jz c15f9
add r8, 1
and r8, 0xFFFF
o15fa:
cmp byte [tape + r8], 0
jz c15fa
add r8, 2
and r8, 0xFFFF
jmp o15fa
c15fa:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o15fb:
cmp byte [tape + r8], 0
jz c15fb
sub r8, 2
and r8, 0xFFFF
jmp o15fb
c15fb:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15f9
c15f9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 35
and r8, 0xFFFF
call z
add r8, 26
and r8, 0xFFFF
o15fc:
cmp byte [tape + r8], 0
jz c15fc
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15fc
c15fc:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o15fd:
cmp byte [tape + r8], 0
jz c15fd
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15fd
c15fd:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o15fe:
cmp byte [tape + r8], 0
jz c15fe
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o15fe
c15fe:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o15ff:
cmp byte [tape + r8], 0
jz c15ff
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o15ff
c15ff:
add r8, 8
and r8, 0xFFFF
o1600:
cmp byte [tape + r8], 0
jz c1600
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1600
c1600:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1601:
cmp byte [tape + r8], 0
jz c1601
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1601
c1601:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1602:
cmp byte [tape + r8], 0
jz c1602
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1602
c1602:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1603:
cmp byte [tape + r8], 0
jz c1603
add r8, 505
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 514
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1603
c1603:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o15e1
c15e1:
sub r8, 1
and r8, 0xFFFF
o1604:
cmp byte [tape + r8], 0
jz c1604
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1604
c1604:
add r8, 1
and r8, 0xFFFF
o1605:
cmp byte [tape + r8], 0
jz c1605
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o1606:
cmp byte [tape + r8], 0
jz c1606
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1606
c1606:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1607:
cmp byte [tape + r8], 0
jz c1607
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1607
c1607:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1608:
cmp byte [tape + r8], 0
jz c1608
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1608
c1608:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1609:
cmp byte [tape + r8], 0
jz c1609
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1609
c1609:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o160a:
cmp byte [tape + r8], 0
jz c160a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o160a
c160a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o160b:
cmp byte [tape + r8], 0
jz c160b
add r8, 506
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 515
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o160b
c160b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1605
c1605:
sub r8, 1
and r8, 0xFFFF
o160c:
cmp byte [tape + r8], 0
jz c160c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o160c
c160c:
add r8, 1
and r8, 0xFFFF
o160d:
cmp byte [tape + r8], 0
jz c160d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o160e:
cmp byte [tape + r8], 0
jz c160e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o160e
c160e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o160f:
cmp byte [tape + r8], 0
jz c160f
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o160f
c160f:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1610:
cmp byte [tape + r8], 0
jz c1610
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1610
c1610:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1611:
cmp byte [tape + r8], 0
jz c1611
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1611
c1611:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1612:
cmp byte [tape + r8], 0
jz c1612
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1612
c1612:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1613:
cmp byte [tape + r8], 0
jz c1613
add r8, 507
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 516
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1613
c1613:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o160d
c160d:
sub r8, 1
and r8, 0xFFFF
o1614:
cmp byte [tape + r8], 0
jz c1614
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1614
c1614:
add r8, 1
and r8, 0xFFFF
o1615:
cmp byte [tape + r8], 0
jz c1615
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o1616:
cmp byte [tape + r8], 0
jz c1616
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1616
c1616:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1615
c1615:
add r8, 515
and r8, 0xFFFF
push 1
push 516
call ms
sub r8, 516
and r8, 0xFFFF
o1617:
cmp byte [tape + r8], 0
jz c1617
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1617
c1617:
add r8, 1
and r8, 0xFFFF
o1618:
cmp byte [tape + r8], 0
jz c1618
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 17
and r8, 0xFFFF
o1619:
cmp byte [tape + r8], 0
jz c1619
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1619
c1619:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o161a:
cmp byte [tape + r8], 0
jz c161a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o161a
c161a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o161b:
cmp byte [tape + r8], 0
jz c161b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o161b
c161b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o161c:
cmp byte [tape + r8], 0
jz c161c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o161c
c161c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o161d:
cmp byte [tape + r8], 0
jz c161d
add r8, 508
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 517
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o161d
c161d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1618
c1618:
sub r8, 1
and r8, 0xFFFF
o161e:
cmp byte [tape + r8], 0
jz c161e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o161e
c161e:
add r8, 1
and r8, 0xFFFF
o161f:
cmp byte [tape + r8], 0
jz c161f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o1620:
cmp byte [tape + r8], 0
jz c1620
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1620
c1620:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o161f
c161f:
add r8, 516
and r8, 0xFFFF
push 1
push 517
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 515
call ms
sub r8, 515
and r8, 0xFFFF
o1621:
cmp byte [tape + r8], 0
jz c1621
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1621
c1621:
add r8, 1
and r8, 0xFFFF
o1622:
cmp byte [tape + r8], 0
jz c1622
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1623:
cmp byte [tape + r8], 0
jz c1623
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1623
c1623:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1624:
cmp byte [tape + r8], 0
jz c1624
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1624
c1624:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1625:
cmp byte [tape + r8], 0
jz c1625
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1625
c1625:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1626:
cmp byte [tape + r8], 0
jz c1626
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1626
c1626:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1627:
cmp byte [tape + r8], 0
jz c1627
add r8, 509
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 518
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1627
c1627:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1622
c1622:
sub r8, 1
and r8, 0xFFFF
o1628:
cmp byte [tape + r8], 0
jz c1628
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1628
c1628:
add r8, 1
and r8, 0xFFFF
o1629:
cmp byte [tape + r8], 0
jz c1629
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o162a:
cmp byte [tape + r8], 0
jz c162a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o162a
c162a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1629
c1629:
add r8, 517
and r8, 0xFFFF
push 1
push 518
call ms
sub r8, 518
and r8, 0xFFFF
o162b:
cmp byte [tape + r8], 0
jz c162b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o162b
c162b:
add r8, 1
and r8, 0xFFFF
o162c:
cmp byte [tape + r8], 0
jz c162c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o162d:
cmp byte [tape + r8], 0
jz c162d
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o162d
c162d:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o162e:
cmp byte [tape + r8], 0
jz c162e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o162e
c162e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o162f:
cmp byte [tape + r8], 0
jz c162f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o162f
c162f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1630:
cmp byte [tape + r8], 0
jz c1630
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1630
c1630:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1631:
cmp byte [tape + r8], 0
jz c1631
add r8, 510
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 519
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1631
c1631:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o162c
c162c:
sub r8, 1
and r8, 0xFFFF
o1632:
cmp byte [tape + r8], 0
jz c1632
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1632
c1632:
add r8, 1
and r8, 0xFFFF
o1633:
cmp byte [tape + r8], 0
jz c1633
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
o1634:
cmp byte [tape + r8], 0
jz c1634
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1634
c1634:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1635:
cmp byte [tape + r8], 0
jz c1635
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1635
c1635:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1636:
cmp byte [tape + r8], 0
jz c1636
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1636
c1636:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1637:
cmp byte [tape + r8], 0
jz c1637
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1637
c1637:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1638:
cmp byte [tape + r8], 0
jz c1638
add r8, 511
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 520
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1638
c1638:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1633
c1633:
sub r8, 1
and r8, 0xFFFF
o1639:
cmp byte [tape + r8], 0
jz c1639
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1639
c1639:
add r8, 1
and r8, 0xFFFF
o163a:
cmp byte [tape + r8], 0
jz c163a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o163b:
cmp byte [tape + r8], 0
jz c163b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o163b
c163b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 518
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o163a
c163a:
add r8, 519
and r8, 0xFFFF
push 1
push 520
call ms
sub r8, 520
and r8, 0xFFFF
o163c:
cmp byte [tape + r8], 0
jz c163c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o163c
c163c:
add r8, 1
and r8, 0xFFFF
o163d:
cmp byte [tape + r8], 0
jz c163d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o163e:
cmp byte [tape + r8], 0
jz c163e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o163e
c163e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 13
call o
add byte [tape + r8], 12
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o163d
c163d:
add r8, 520
and r8, 0xFFFF
push 1
push 521
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 519
call ms
sub r8, 519
and r8, 0xFFFF
o163f:
cmp byte [tape + r8], 0
jz c163f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o163f
c163f:
add r8, 1
and r8, 0xFFFF
o1640:
cmp byte [tape + r8], 0
jz c1640
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1641:
cmp byte [tape + r8], 0
jz c1641
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1641
c1641:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1642:
cmp byte [tape + r8], 0
jz c1642
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1642
c1642:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1643:
cmp byte [tape + r8], 0
jz c1643
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1643
c1643:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1644:
cmp byte [tape + r8], 0
jz c1644
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1644
c1644:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1645:
cmp byte [tape + r8], 0
jz c1645
add r8, 513
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 522
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1645
c1645:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1640
c1640:
sub r8, 1
and r8, 0xFFFF
o1646:
cmp byte [tape + r8], 0
jz c1646
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1646
c1646:
add r8, 1
and r8, 0xFFFF
o1647:
cmp byte [tape + r8], 0
jz c1647
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1648:
cmp byte [tape + r8], 0
jz c1648
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1648
c1648:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 8
call o
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1647
c1647:
add r8, 521
and r8, 0xFFFF
push 1
push 522
call ms
sub r8, 522
and r8, 0xFFFF
o1649:
cmp byte [tape + r8], 0
jz c1649
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1649
c1649:
add r8, 1
and r8, 0xFFFF
o164a:
cmp byte [tape + r8], 0
jz c164a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o164b:
cmp byte [tape + r8], 0
jz c164b
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o164b
c164b:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o164c:
cmp byte [tape + r8], 0
jz c164c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o164c
c164c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o164d:
cmp byte [tape + r8], 0
jz c164d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o164d
c164d:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o164e:
cmp byte [tape + r8], 0
jz c164e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o164e
c164e:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o164f:
cmp byte [tape + r8], 0
jz c164f
add r8, 514
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 523
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o164f
c164f:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o164a
c164a:
sub r8, 1
and r8, 0xFFFF
o1650:
cmp byte [tape + r8], 0
jz c1650
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1650
c1650:
add r8, 1
and r8, 0xFFFF
o1651:
cmp byte [tape + r8], 0
jz c1651
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
o1652:
cmp byte [tape + r8], 0
jz c1652
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1652
c1652:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1651
c1651:
add r8, 522
and r8, 0xFFFF
push 1
push 523
call ms
sub r8, 523
and r8, 0xFFFF
o1653:
cmp byte [tape + r8], 0
jz c1653
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1653
c1653:
add r8, 1
and r8, 0xFFFF
o1654:
cmp byte [tape + r8], 0
jz c1654
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1655:
cmp byte [tape + r8], 0
jz c1655
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1655
c1655:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1656:
cmp byte [tape + r8], 0
jz c1656
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1656
c1656:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1657:
cmp byte [tape + r8], 0
jz c1657
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1657
c1657:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1658:
cmp byte [tape + r8], 0
jz c1658
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1658
c1658:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1659:
cmp byte [tape + r8], 0
jz c1659
add r8, 515
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 524
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1659
c1659:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1654
c1654:
sub r8, 1
and r8, 0xFFFF
o165a:
cmp byte [tape + r8], 0
jz c165a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o165a
c165a:
add r8, 1
and r8, 0xFFFF
o165b:
cmp byte [tape + r8], 0
jz c165b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o165c:
cmp byte [tape + r8], 0
jz c165c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o165c
c165c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o165b
c165b:
add r8, 523
and r8, 0xFFFF
push 1
push 524
call ms
sub r8, 524
and r8, 0xFFFF
o165d:
cmp byte [tape + r8], 0
jz c165d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o165d
c165d:
add r8, 1
and r8, 0xFFFF
o165e:
cmp byte [tape + r8], 0
jz c165e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o165f:
cmp byte [tape + r8], 0
jz c165f
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o165f
c165f:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1660:
cmp byte [tape + r8], 0
jz c1660
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1660
c1660:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1661:
cmp byte [tape + r8], 0
jz c1661
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1661
c1661:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1662:
cmp byte [tape + r8], 0
jz c1662
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1662
c1662:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1663:
cmp byte [tape + r8], 0
jz c1663
add r8, 516
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 525
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1663
c1663:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o165e
c165e:
sub r8, 1
and r8, 0xFFFF
o1664:
cmp byte [tape + r8], 0
jz c1664
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1664
c1664:
add r8, 1
and r8, 0xFFFF
o1665:
cmp byte [tape + r8], 0
jz c1665
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1666:
cmp byte [tape + r8], 0
jz c1666
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1666
c1666:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1665
c1665:
add r8, 524
and r8, 0xFFFF
push 1
push 525
call ms
sub r8, 525
and r8, 0xFFFF
o1667:
cmp byte [tape + r8], 0
jz c1667
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1667
c1667:
add r8, 1
and r8, 0xFFFF
o1668:
cmp byte [tape + r8], 0
jz c1668
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1669:
cmp byte [tape + r8], 0
jz c1669
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1669
c1669:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o166a:
cmp byte [tape + r8], 0
jz c166a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o166a
c166a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o166b:
cmp byte [tape + r8], 0
jz c166b
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o166b
c166b:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o166c:
cmp byte [tape + r8], 0
jz c166c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o166c
c166c:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o166d:
cmp byte [tape + r8], 0
jz c166d
add r8, 517
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 526
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o166d
c166d:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1668
c1668:
sub r8, 1
and r8, 0xFFFF
o166e:
cmp byte [tape + r8], 0
jz c166e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o166e
c166e:
add r8, 1
and r8, 0xFFFF
o166f:
cmp byte [tape + r8], 0
jz c166f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1670:
cmp byte [tape + r8], 0
jz c1670
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1670
c1670:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 14
call o
add byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o166f
c166f:
add r8, 525
and r8, 0xFFFF
push 1
push 526
call ms
sub r8, 526
and r8, 0xFFFF
o1671:
cmp byte [tape + r8], 0
jz c1671
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1671
c1671:
add r8, 1
and r8, 0xFFFF
o1672:
cmp byte [tape + r8], 0
jz c1672
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o1673:
cmp byte [tape + r8], 0
jz c1673
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1673
c1673:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1674:
cmp byte [tape + r8], 0
jz c1674
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1674
c1674:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1675:
cmp byte [tape + r8], 0
jz c1675
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1675
c1675:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1676:
cmp byte [tape + r8], 0
jz c1676
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1676
c1676:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1677:
cmp byte [tape + r8], 0
jz c1677
add r8, 518
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 527
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1677
c1677:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1672
c1672:
sub r8, 1
and r8, 0xFFFF
o1678:
cmp byte [tape + r8], 0
jz c1678
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1678
c1678:
add r8, 1
and r8, 0xFFFF
o1679:
cmp byte [tape + r8], 0
jz c1679
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o167a:
cmp byte [tape + r8], 0
jz c167a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o167a
c167a:
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 13
call o
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1679
c1679:
add r8, 526
and r8, 0xFFFF
push 1
push 527
call ms
sub r8, 527
and r8, 0xFFFF
o167b:
cmp byte [tape + r8], 0
jz c167b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o167b
c167b:
add r8, 1
and r8, 0xFFFF
o167c:
cmp byte [tape + r8], 0
jz c167c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o167d:
cmp byte [tape + r8], 0
jz c167d
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o167d
c167d:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o167e:
cmp byte [tape + r8], 0
jz c167e
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o167e
c167e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o167f:
cmp byte [tape + r8], 0
jz c167f
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o167f
c167f:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1680:
cmp byte [tape + r8], 0
jz c1680
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1680
c1680:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1681:
cmp byte [tape + r8], 0
jz c1681
add r8, 519
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 528
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1681
c1681:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o167c
c167c:
sub r8, 1
and r8, 0xFFFF
o1682:
cmp byte [tape + r8], 0
jz c1682
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1682
c1682:
add r8, 1
and r8, 0xFFFF
o1683:
cmp byte [tape + r8], 0
jz c1683
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1684:
cmp byte [tape + r8], 0
jz c1684
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1684
c1684:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 30
and r8, 0xFFFF
o1685:
cmp byte [tape + r8], 0
jz c1685
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1685
c1685:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1686:
cmp byte [tape + r8], 0
jz c1686
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1686
c1686:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1687:
cmp byte [tape + r8], 0
jz c1687
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1687
c1687:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1688:
cmp byte [tape + r8], 0
jz c1688
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1688
c1688:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1689:
cmp byte [tape + r8], 0
jz c1689
add r8, 520
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 529
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1689
c1689:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1683
c1683:
sub r8, 1
and r8, 0xFFFF
o168a:
cmp byte [tape + r8], 0
jz c168a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o168a
c168a:
add r8, 1
and r8, 0xFFFF
o168b:
cmp byte [tape + r8], 0
jz c168b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o168c:
cmp byte [tape + r8], 0
jz c168c
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o168c
c168c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 3
call o
call o
sub byte [tape + r8], 7
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o168b
c168b:
add r8, 528
and r8, 0xFFFF
push 1
push 529
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 528
call ms
sub r8, 528
and r8, 0xFFFF
o168d:
cmp byte [tape + r8], 0
jz c168d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o168d
c168d:
add r8, 1
and r8, 0xFFFF
o168e:
cmp byte [tape + r8], 0
jz c168e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
push 9
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o168e
c168e:
add r8, 513
and r8, 0xFFFF
push 1
push 514
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 513
call ms
sub r8, 513
and r8, 0xFFFF
o168f:
cmp byte [tape + r8], 0
jz c168f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o168f
c168f:
add r8, 1
and r8, 0xFFFF
o1690:
cmp byte [tape + r8], 0
jz c1690
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1691:
cmp byte [tape + r8], 0
jz c1691
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1691
c1691:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1692:
cmp byte [tape + r8], 0
jz c1692
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1692
c1692:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1693:
cmp byte [tape + r8], 0
jz c1693
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1693
c1693:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1694:
cmp byte [tape + r8], 0
jz c1694
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1694
c1694:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1695:
cmp byte [tape + r8], 0
jz c1695
add r8, 521
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 530
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1695
c1695:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1690
c1690:
sub r8, 1
and r8, 0xFFFF
o1696:
cmp byte [tape + r8], 0
jz c1696
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1696
c1696:
add r8, 1
and r8, 0xFFFF
o1697:
cmp byte [tape + r8], 0
jz c1697
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
o1698:
cmp byte [tape + r8], 0
jz c1698
sub r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 13
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1698
c1698:
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1699:
cmp byte [tape + r8], 0
jz c1699
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1699
c1699:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o169a:
cmp byte [tape + r8], 0
jz c169a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o169a
c169a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o169b:
cmp byte [tape + r8], 0
jz c169b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o169b
c169b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o169c:
cmp byte [tape + r8], 0
jz c169c
add r8, 522
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 531
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o169c
c169c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1697
c1697:
sub r8, 1
and r8, 0xFFFF
o169d:
cmp byte [tape + r8], 0
jz c169d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o169d
c169d:
add r8, 1
and r8, 0xFFFF
o169e:
cmp byte [tape + r8], 0
jz c169e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o169f:
cmp byte [tape + r8], 0
jz c169f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o169f
c169f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 523
and r8, 0xFFFF
o16a0:
cmp byte [tape + r8], 0
jz c16a0
sub r8, 523
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 530
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a0
c16a0:
sub r8, 530
and r8, 0xFFFF
push 1
push 530
call m
add r8, 15
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
call z
add r8, 524
and r8, 0xFFFF
o16a1:
cmp byte [tape + r8], 0
jz c16a1
sub r8, 524
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 531
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a1
c16a1:
sub r8, 531
and r8, 0xFFFF
push 1
push 531
call m
add r8, 11
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
call z
add r8, 525
and r8, 0xFFFF
o16a2:
cmp byte [tape + r8], 0
jz c16a2
sub r8, 525
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 532
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a2
c16a2:
sub r8, 532
and r8, 0xFFFF
push 1
push 532
call m
add r8, 17
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
call z
add r8, 526
and r8, 0xFFFF
o16a3:
cmp byte [tape + r8], 0
jz c16a3
sub r8, 526
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 533
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a3
c16a3:
sub r8, 533
and r8, 0xFFFF
push 1
push 533
call m
add r8, 16
and r8, 0xFFFF
call z
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
call z
add r8, 527
and r8, 0xFFFF
o16a4:
cmp byte [tape + r8], 0
jz c16a4
sub r8, 527
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 534
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a4
c16a4:
sub r8, 534
and r8, 0xFFFF
push 1
push 534
call m
add r8, 232
and r8, 0xFFFF
call z
sub r8, 225
and r8, 0xFFFF
push 1
push 225
call m
call z
add r8, 528
and r8, 0xFFFF
o16a5:
cmp byte [tape + r8], 0
jz c16a5
sub r8, 528
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 535
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a5
c16a5:
sub r8, 535
and r8, 0xFFFF
push 1
push 535
call m
add r8, 19
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 529
and r8, 0xFFFF
o16a6:
cmp byte [tape + r8], 0
jz c16a6
sub r8, 529
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 536
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a6
c16a6:
sub r8, 536
and r8, 0xFFFF
push 1
push 536
call m
add r8, 20
and r8, 0xFFFF
call z
sub r8, 13
and r8, 0xFFFF
push 1
push 13
call m
call z
add r8, 530
and r8, 0xFFFF
o16a7:
cmp byte [tape + r8], 0
jz c16a7
sub r8, 530
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 537
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a7
c16a7:
sub r8, 537
and r8, 0xFFFF
push 1
push 537
call m
add r8, 21
and r8, 0xFFFF
call z
sub r8, 14
and r8, 0xFFFF
push 1
push 14
call m
call z
add r8, 531
and r8, 0xFFFF
o16a8:
cmp byte [tape + r8], 0
jz c16a8
sub r8, 531
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 538
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a8
c16a8:
sub r8, 538
and r8, 0xFFFF
push 1
push 538
call m
add r8, 22
and r8, 0xFFFF
call z
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add r8, 532
and r8, 0xFFFF
o16a9:
cmp byte [tape + r8], 0
jz c16a9
sub r8, 532
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 539
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16a9
c16a9:
sub r8, 539
and r8, 0xFFFF
push 1
push 539
call m
add r8, 23
and r8, 0xFFFF
call z
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
call z
add r8, 533
and r8, 0xFFFF
o16aa:
cmp byte [tape + r8], 0
jz c16aa
sub r8, 533
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 540
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16aa
c16aa:
sub r8, 540
and r8, 0xFFFF
push 1
push 540
call m
add r8, 24
and r8, 0xFFFF
call z
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
call z
add r8, 534
and r8, 0xFFFF
o16ab:
cmp byte [tape + r8], 0
jz c16ab
sub r8, 534
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 541
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16ab
c16ab:
sub r8, 541
and r8, 0xFFFF
push 1
push 541
call m
add r8, 25
and r8, 0xFFFF
call z
sub r8, 18
and r8, 0xFFFF
push 1
push 18
call m
call z
add r8, 535
and r8, 0xFFFF
o16ac:
cmp byte [tape + r8], 0
jz c16ac
sub r8, 535
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 542
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16ac
c16ac:
sub r8, 542
and r8, 0xFFFF
push 1
push 542
call m
add r8, 26
and r8, 0xFFFF
call z
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 536
and r8, 0xFFFF
o16ad:
cmp byte [tape + r8], 0
jz c16ad
sub r8, 536
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 543
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16ad
c16ad:
sub r8, 543
and r8, 0xFFFF
push 1
push 543
call m
add r8, 12
and r8, 0xFFFF
call z
sub r8, 5
and r8, 0xFFFF
push 1
push 5
call m
call z
add r8, 537
and r8, 0xFFFF
o16ae:
cmp byte [tape + r8], 0
jz c16ae
sub r8, 537
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 544
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16ae
c16ae:
sub r8, 544
and r8, 0xFFFF
push 1
push 544
call m
add r8, 27
and r8, 0xFFFF
call z
sub r8, 20
and r8, 0xFFFF
push 1
push 20
call m
call z
add r8, 538
and r8, 0xFFFF
o16af:
cmp byte [tape + r8], 0
jz c16af
sub r8, 538
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 545
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16af
c16af:
sub r8, 545
and r8, 0xFFFF
push 1
push 545
call m
add r8, 28
and r8, 0xFFFF
call z
sub r8, 21
and r8, 0xFFFF
push 1
push 21
call m
call z
add r8, 539
and r8, 0xFFFF
o16b0:
cmp byte [tape + r8], 0
jz c16b0
sub r8, 539
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 546
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b0
c16b0:
sub r8, 546
and r8, 0xFFFF
push 1
push 546
call m
add r8, 297
and r8, 0xFFFF
call z
sub r8, 290
and r8, 0xFFFF
push 1
push 290
call m
call z
add r8, 540
and r8, 0xFFFF
o16b1:
cmp byte [tape + r8], 0
jz c16b1
sub r8, 540
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 547
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b1
c16b1:
sub r8, 547
and r8, 0xFFFF
push 1
push 547
call m
add r8, 29
and r8, 0xFFFF
call z
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
call z
add r8, 541
and r8, 0xFFFF
o16b2:
cmp byte [tape + r8], 0
jz c16b2
sub r8, 541
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 548
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b2
c16b2:
sub r8, 548
and r8, 0xFFFF
push 1
push 548
call m
add r8, 30
and r8, 0xFFFF
call z
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
call z
add r8, 542
and r8, 0xFFFF
o16b3:
cmp byte [tape + r8], 0
jz c16b3
sub r8, 542
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 549
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b3
c16b3:
sub r8, 549
and r8, 0xFFFF
push 1
push 549
call m
add r8, 31
and r8, 0xFFFF
call z
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
call z
add r8, 543
and r8, 0xFFFF
o16b4:
cmp byte [tape + r8], 0
jz c16b4
sub r8, 543
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 550
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b4
c16b4:
sub r8, 550
and r8, 0xFFFF
push 1
push 550
call m
add r8, 32
and r8, 0xFFFF
call z
sub r8, 25
and r8, 0xFFFF
push 1
push 25
call m
call z
add r8, 544
and r8, 0xFFFF
o16b5:
cmp byte [tape + r8], 0
jz c16b5
sub r8, 544
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 551
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b5
c16b5:
sub r8, 551
and r8, 0xFFFF
push 1
push 551
call m
add r8, 33
and r8, 0xFFFF
call z
sub r8, 26
and r8, 0xFFFF
push 1
push 26
call m
call z
add r8, 545
and r8, 0xFFFF
o16b6:
cmp byte [tape + r8], 0
jz c16b6
sub r8, 545
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 552
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b6
c16b6:
sub r8, 552
and r8, 0xFFFF
push 1
push 552
call m
add r8, 34
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
call z
add r8, 546
and r8, 0xFFFF
o16b7:
cmp byte [tape + r8], 0
jz c16b7
sub r8, 546
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 553
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b7
c16b7:
sub r8, 553
and r8, 0xFFFF
push 1
push 553
call m
add r8, 35
and r8, 0xFFFF
call z
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
call z
add r8, 547
and r8, 0xFFFF
o16b8:
cmp byte [tape + r8], 0
jz c16b8
sub r8, 547
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 554
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b8
c16b8:
sub r8, 554
and r8, 0xFFFF
push 1
push 554
call m
add r8, 36
and r8, 0xFFFF
call z
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
call z
add r8, 548
and r8, 0xFFFF
o16b9:
cmp byte [tape + r8], 0
jz c16b9
sub r8, 548
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 555
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16b9
c16b9:
sub r8, 555
and r8, 0xFFFF
push 1
push 555
call m
add r8, 117
and r8, 0xFFFF
call z
sub r8, 110
and r8, 0xFFFF
push 1
push 110
call m
call z
add r8, 549
and r8, 0xFFFF
o16ba:
cmp byte [tape + r8], 0
jz c16ba
sub r8, 549
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 556
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16ba
c16ba:
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 37
and r8, 0xFFFF
call z
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
call z
add r8, 550
and r8, 0xFFFF
o16bb:
cmp byte [tape + r8], 0
jz c16bb
sub r8, 550
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 557
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16bb
c16bb:
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 38
and r8, 0xFFFF
call z
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
call z
add r8, 551
and r8, 0xFFFF
o16bc:
cmp byte [tape + r8], 0
jz c16bc
sub r8, 551
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 558
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16bc
c16bc:
sub r8, 558
and r8, 0xFFFF
push 1
push 558
call m
add r8, 39
and r8, 0xFFFF
call z
sub r8, 32
and r8, 0xFFFF
push 1
push 32
call m
call z
add r8, 552
and r8, 0xFFFF
o16bd:
cmp byte [tape + r8], 0
jz c16bd
sub r8, 552
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 559
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16bd
c16bd:
sub r8, 559
and r8, 0xFFFF
push 1
push 559
call m
add r8, 40
and r8, 0xFFFF
call z
sub r8, 33
and r8, 0xFFFF
push 1
push 33
call m
call z
add r8, 553
and r8, 0xFFFF
o16be:
cmp byte [tape + r8], 0
jz c16be
sub r8, 553
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 560
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16be
c16be:
sub r8, 560
and r8, 0xFFFF
push 1
push 560
call m
add r8, 112
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
call z
add r8, 554
and r8, 0xFFFF
o16bf:
cmp byte [tape + r8], 0
jz c16bf
sub r8, 554
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 561
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16bf
c16bf:
sub r8, 561
and r8, 0xFFFF
push 1
push 561
call m
add r8, 41
and r8, 0xFFFF
call z
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o16c0:
cmp byte [tape + r8], 0
jz c16c0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o16c0
c16c0:
add r8, 1
and r8, 0xFFFF
o16c1:
cmp byte [tape + r8], 0
jz c16c1
sub r8, 3
and r8, 0xFFFF
o16c2:
cmp byte [tape + r8], 0
jz c16c2
sub r8, 2
and r8, 0xFFFF
jmp o16c2
c16c2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o16c3:
cmp byte [tape + r8], 0
jz c16c3
add r8, 2
and r8, 0xFFFF
jmp o16c3
c16c3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16c1
c16c1:
sub r8, 3
and r8, 0xFFFF
o16c4:
cmp byte [tape + r8], 0
jz c16c4
sub r8, 2
and r8, 0xFFFF
jmp o16c4
c16c4:
add r8, 1
and r8, 0xFFFF
o16c5:
cmp byte [tape + r8], 0
jz c16c5
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16c5
c16c5:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o16c6:
cmp byte [tape + r8], 0
jz c16c6
add r8, 2
and r8, 0xFFFF
jmp o16c6
c16c6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16c7:
cmp byte [tape + r8], 0
jz c16c7
sub r8, 2
and r8, 0xFFFF
jmp o16c7
c16c7:
add r8, 1
and r8, 0xFFFF
o16c8:
cmp byte [tape + r8], 0
jz c16c8
add r8, 1
and r8, 0xFFFF
o16c9:
cmp byte [tape + r8], 0
jz c16c9
add r8, 2
and r8, 0xFFFF
jmp o16c9
c16c9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o16ca:
cmp byte [tape + r8], 0
jz c16ca
sub r8, 2
and r8, 0xFFFF
jmp o16ca
c16ca:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16c8
c16c8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o16cb:
cmp byte [tape + r8], 0
jz c16cb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o16cb
c16cb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16cc:
cmp byte [tape + r8], 0
jz c16cc
sub r8, 2
and r8, 0xFFFF
jmp o16cc
c16cc:
add r8, 1
and r8, 0xFFFF
o16cd:
cmp byte [tape + r8], 0
jz c16cd
add r8, 1
and r8, 0xFFFF
o16ce:
cmp byte [tape + r8], 0
jz c16ce
add r8, 2
and r8, 0xFFFF
jmp o16ce
c16ce:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o16cf:
cmp byte [tape + r8], 0
jz c16cf
sub r8, 2
and r8, 0xFFFF
jmp o16cf
c16cf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16cd
c16cd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o16d0:
cmp byte [tape + r8], 0
jz c16d0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o16d0
c16d0:
add r8, 1
and r8, 0xFFFF
o16d1:
cmp byte [tape + r8], 0
jz c16d1
sub r8, 3
and r8, 0xFFFF
o16d2:
cmp byte [tape + r8], 0
jz c16d2
sub r8, 2
and r8, 0xFFFF
jmp o16d2
c16d2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o16d3:
cmp byte [tape + r8], 0
jz c16d3
add r8, 2
and r8, 0xFFFF
jmp o16d3
c16d3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16d1
c16d1:
sub r8, 3
and r8, 0xFFFF
o16d4:
cmp byte [tape + r8], 0
jz c16d4
sub r8, 2
and r8, 0xFFFF
jmp o16d4
c16d4:
add r8, 1
and r8, 0xFFFF
o16d5:
cmp byte [tape + r8], 0
jz c16d5
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16d5
c16d5:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o16d6:
cmp byte [tape + r8], 0
jz c16d6
add r8, 2
and r8, 0xFFFF
jmp o16d6
c16d6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16d7:
cmp byte [tape + r8], 0
jz c16d7
sub r8, 2
and r8, 0xFFFF
jmp o16d7
c16d7:
add r8, 1
and r8, 0xFFFF
o16d8:
cmp byte [tape + r8], 0
jz c16d8
add r8, 1
and r8, 0xFFFF
o16d9:
cmp byte [tape + r8], 0
jz c16d9
add r8, 2
and r8, 0xFFFF
jmp o16d9
c16d9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o16da:
cmp byte [tape + r8], 0
jz c16da
sub r8, 2
and r8, 0xFFFF
jmp o16da
c16da:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16d8
c16d8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o16db:
cmp byte [tape + r8], 0
jz c16db
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o16db
c16db:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16dc:
cmp byte [tape + r8], 0
jz c16dc
sub r8, 2
and r8, 0xFFFF
jmp o16dc
c16dc:
add r8, 1
and r8, 0xFFFF
o16dd:
cmp byte [tape + r8], 0
jz c16dd
add r8, 1
and r8, 0xFFFF
o16de:
cmp byte [tape + r8], 0
jz c16de
add r8, 2
and r8, 0xFFFF
jmp o16de
c16de:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o16df:
cmp byte [tape + r8], 0
jz c16df
sub r8, 2
and r8, 0xFFFF
jmp o16df
c16df:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16dd
c16dd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o16e0:
cmp byte [tape + r8], 0
jz c16e0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o16e0
c16e0:
add r8, 1
and r8, 0xFFFF
o16e1:
cmp byte [tape + r8], 0
jz c16e1
sub r8, 3
and r8, 0xFFFF
o16e2:
cmp byte [tape + r8], 0
jz c16e2
sub r8, 2
and r8, 0xFFFF
jmp o16e2
c16e2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o16e3:
cmp byte [tape + r8], 0
jz c16e3
add r8, 2
and r8, 0xFFFF
jmp o16e3
c16e3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16e1
c16e1:
sub r8, 3
and r8, 0xFFFF
o16e4:
cmp byte [tape + r8], 0
jz c16e4
sub r8, 2
and r8, 0xFFFF
jmp o16e4
c16e4:
add r8, 1
and r8, 0xFFFF
o16e5:
cmp byte [tape + r8], 0
jz c16e5
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16e5
c16e5:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o16e6:
cmp byte [tape + r8], 0
jz c16e6
add r8, 2
and r8, 0xFFFF
jmp o16e6
c16e6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16e7:
cmp byte [tape + r8], 0
jz c16e7
sub r8, 2
and r8, 0xFFFF
jmp o16e7
c16e7:
add r8, 1
and r8, 0xFFFF
o16e8:
cmp byte [tape + r8], 0
jz c16e8
add r8, 1
and r8, 0xFFFF
o16e9:
cmp byte [tape + r8], 0
jz c16e9
add r8, 2
and r8, 0xFFFF
jmp o16e9
c16e9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o16ea:
cmp byte [tape + r8], 0
jz c16ea
sub r8, 2
and r8, 0xFFFF
jmp o16ea
c16ea:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16e8
c16e8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o16eb:
cmp byte [tape + r8], 0
jz c16eb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o16eb
c16eb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16ec:
cmp byte [tape + r8], 0
jz c16ec
sub r8, 2
and r8, 0xFFFF
jmp o16ec
c16ec:
add r8, 1
and r8, 0xFFFF
o16ed:
cmp byte [tape + r8], 0
jz c16ed
add r8, 1
and r8, 0xFFFF
o16ee:
cmp byte [tape + r8], 0
jz c16ee
add r8, 2
and r8, 0xFFFF
jmp o16ee
c16ee:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o16ef:
cmp byte [tape + r8], 0
jz c16ef
sub r8, 2
and r8, 0xFFFF
jmp o16ef
c16ef:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16ed
c16ed:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o16f0:
cmp byte [tape + r8], 0
jz c16f0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o16f0
c16f0:
add r8, 1
and r8, 0xFFFF
o16f1:
cmp byte [tape + r8], 0
jz c16f1
sub r8, 3
and r8, 0xFFFF
o16f2:
cmp byte [tape + r8], 0
jz c16f2
sub r8, 2
and r8, 0xFFFF
jmp o16f2
c16f2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o16f3:
cmp byte [tape + r8], 0
jz c16f3
add r8, 2
and r8, 0xFFFF
jmp o16f3
c16f3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16f1
c16f1:
sub r8, 3
and r8, 0xFFFF
o16f4:
cmp byte [tape + r8], 0
jz c16f4
sub r8, 2
and r8, 0xFFFF
jmp o16f4
c16f4:
add r8, 1
and r8, 0xFFFF
o16f5:
cmp byte [tape + r8], 0
jz c16f5
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16f5
c16f5:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o16f6:
cmp byte [tape + r8], 0
jz c16f6
add r8, 2
and r8, 0xFFFF
jmp o16f6
c16f6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16f7:
cmp byte [tape + r8], 0
jz c16f7
sub r8, 2
and r8, 0xFFFF
jmp o16f7
c16f7:
add r8, 1
and r8, 0xFFFF
o16f8:
cmp byte [tape + r8], 0
jz c16f8
add r8, 1
and r8, 0xFFFF
o16f9:
cmp byte [tape + r8], 0
jz c16f9
add r8, 2
and r8, 0xFFFF
jmp o16f9
c16f9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o16fa:
cmp byte [tape + r8], 0
jz c16fa
sub r8, 2
and r8, 0xFFFF
jmp o16fa
c16fa:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16f8
c16f8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o16fb:
cmp byte [tape + r8], 0
jz c16fb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o16fb
c16fb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o16fc:
cmp byte [tape + r8], 0
jz c16fc
sub r8, 2
and r8, 0xFFFF
jmp o16fc
c16fc:
add r8, 1
and r8, 0xFFFF
o16fd:
cmp byte [tape + r8], 0
jz c16fd
add r8, 1
and r8, 0xFFFF
o16fe:
cmp byte [tape + r8], 0
jz c16fe
add r8, 2
and r8, 0xFFFF
jmp o16fe
c16fe:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o16ff:
cmp byte [tape + r8], 0
jz c16ff
sub r8, 2
and r8, 0xFFFF
jmp o16ff
c16ff:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o16fd
c16fd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o1700:
cmp byte [tape + r8], 0
jz c1700
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1700
c1700:
add r8, 1
and r8, 0xFFFF
o1701:
cmp byte [tape + r8], 0
jz c1701
sub r8, 3
and r8, 0xFFFF
o1702:
cmp byte [tape + r8], 0
jz c1702
sub r8, 2
and r8, 0xFFFF
jmp o1702
c1702:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1703:
cmp byte [tape + r8], 0
jz c1703
add r8, 2
and r8, 0xFFFF
jmp o1703
c1703:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1701
c1701:
sub r8, 3
and r8, 0xFFFF
o1704:
cmp byte [tape + r8], 0
jz c1704
sub r8, 2
and r8, 0xFFFF
jmp o1704
c1704:
add r8, 1
and r8, 0xFFFF
o1705:
cmp byte [tape + r8], 0
jz c1705
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1705
c1705:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o1706:
cmp byte [tape + r8], 0
jz c1706
add r8, 2
and r8, 0xFFFF
jmp o1706
c1706:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1707:
cmp byte [tape + r8], 0
jz c1707
sub r8, 2
and r8, 0xFFFF
jmp o1707
c1707:
add r8, 1
and r8, 0xFFFF
o1708:
cmp byte [tape + r8], 0
jz c1708
add r8, 1
and r8, 0xFFFF
o1709:
cmp byte [tape + r8], 0
jz c1709
add r8, 2
and r8, 0xFFFF
jmp o1709
c1709:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o170a:
cmp byte [tape + r8], 0
jz c170a
sub r8, 2
and r8, 0xFFFF
jmp o170a
c170a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1708
c1708:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o170b:
cmp byte [tape + r8], 0
jz c170b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o170b
c170b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o170c:
cmp byte [tape + r8], 0
jz c170c
sub r8, 2
and r8, 0xFFFF
jmp o170c
c170c:
add r8, 1
and r8, 0xFFFF
o170d:
cmp byte [tape + r8], 0
jz c170d
add r8, 1
and r8, 0xFFFF
o170e:
cmp byte [tape + r8], 0
jz c170e
add r8, 2
and r8, 0xFFFF
jmp o170e
c170e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o170f:
cmp byte [tape + r8], 0
jz c170f
sub r8, 2
and r8, 0xFFFF
jmp o170f
c170f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o170d
c170d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o1710:
cmp byte [tape + r8], 0
jz c1710
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1710
c1710:
add r8, 1
and r8, 0xFFFF
o1711:
cmp byte [tape + r8], 0
jz c1711
sub r8, 3
and r8, 0xFFFF
o1712:
cmp byte [tape + r8], 0
jz c1712
sub r8, 2
and r8, 0xFFFF
jmp o1712
c1712:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1713:
cmp byte [tape + r8], 0
jz c1713
add r8, 2
and r8, 0xFFFF
jmp o1713
c1713:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1711
c1711:
sub r8, 3
and r8, 0xFFFF
o1714:
cmp byte [tape + r8], 0
jz c1714
sub r8, 2
and r8, 0xFFFF
jmp o1714
c1714:
add r8, 1
and r8, 0xFFFF
o1715:
cmp byte [tape + r8], 0
jz c1715
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1715
c1715:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o1716:
cmp byte [tape + r8], 0
jz c1716
add r8, 2
and r8, 0xFFFF
jmp o1716
c1716:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1717:
cmp byte [tape + r8], 0
jz c1717
sub r8, 2
and r8, 0xFFFF
jmp o1717
c1717:
add r8, 1
and r8, 0xFFFF
o1718:
cmp byte [tape + r8], 0
jz c1718
add r8, 1
and r8, 0xFFFF
o1719:
cmp byte [tape + r8], 0
jz c1719
add r8, 2
and r8, 0xFFFF
jmp o1719
c1719:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o171a:
cmp byte [tape + r8], 0
jz c171a
sub r8, 2
and r8, 0xFFFF
jmp o171a
c171a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1718
c1718:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o171b:
cmp byte [tape + r8], 0
jz c171b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o171b
c171b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o171c:
cmp byte [tape + r8], 0
jz c171c
sub r8, 2
and r8, 0xFFFF
jmp o171c
c171c:
add r8, 1
and r8, 0xFFFF
o171d:
cmp byte [tape + r8], 0
jz c171d
add r8, 1
and r8, 0xFFFF
o171e:
cmp byte [tape + r8], 0
jz c171e
add r8, 2
and r8, 0xFFFF
jmp o171e
c171e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o171f:
cmp byte [tape + r8], 0
jz c171f
sub r8, 2
and r8, 0xFFFF
jmp o171f
c171f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o171d
c171d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o1720:
cmp byte [tape + r8], 0
jz c1720
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1720
c1720:
add r8, 1
and r8, 0xFFFF
o1721:
cmp byte [tape + r8], 0
jz c1721
sub r8, 3
and r8, 0xFFFF
o1722:
cmp byte [tape + r8], 0
jz c1722
sub r8, 2
and r8, 0xFFFF
jmp o1722
c1722:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1723:
cmp byte [tape + r8], 0
jz c1723
add r8, 2
and r8, 0xFFFF
jmp o1723
c1723:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1721
c1721:
sub r8, 3
and r8, 0xFFFF
o1724:
cmp byte [tape + r8], 0
jz c1724
sub r8, 2
and r8, 0xFFFF
jmp o1724
c1724:
add r8, 1
and r8, 0xFFFF
o1725:
cmp byte [tape + r8], 0
jz c1725
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1725
c1725:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o1726:
cmp byte [tape + r8], 0
jz c1726
add r8, 2
and r8, 0xFFFF
jmp o1726
c1726:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1727:
cmp byte [tape + r8], 0
jz c1727
sub r8, 2
and r8, 0xFFFF
jmp o1727
c1727:
add r8, 1
and r8, 0xFFFF
o1728:
cmp byte [tape + r8], 0
jz c1728
add r8, 1
and r8, 0xFFFF
o1729:
cmp byte [tape + r8], 0
jz c1729
add r8, 2
and r8, 0xFFFF
jmp o1729
c1729:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o172a:
cmp byte [tape + r8], 0
jz c172a
sub r8, 2
and r8, 0xFFFF
jmp o172a
c172a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1728
c1728:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o172b:
cmp byte [tape + r8], 0
jz c172b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o172b
c172b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o172c:
cmp byte [tape + r8], 0
jz c172c
sub r8, 2
and r8, 0xFFFF
jmp o172c
c172c:
add r8, 1
and r8, 0xFFFF
o172d:
cmp byte [tape + r8], 0
jz c172d
add r8, 1
and r8, 0xFFFF
o172e:
cmp byte [tape + r8], 0
jz c172e
add r8, 2
and r8, 0xFFFF
jmp o172e
c172e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o172f:
cmp byte [tape + r8], 0
jz c172f
sub r8, 2
and r8, 0xFFFF
jmp o172f
c172f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o172d
c172d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o1730:
cmp byte [tape + r8], 0
jz c1730
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1730
c1730:
add r8, 1
and r8, 0xFFFF
o1731:
cmp byte [tape + r8], 0
jz c1731
sub r8, 3
and r8, 0xFFFF
o1732:
cmp byte [tape + r8], 0
jz c1732
sub r8, 2
and r8, 0xFFFF
jmp o1732
c1732:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1733:
cmp byte [tape + r8], 0
jz c1733
add r8, 2
and r8, 0xFFFF
jmp o1733
c1733:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1731
c1731:
sub r8, 3
and r8, 0xFFFF
o1734:
cmp byte [tape + r8], 0
jz c1734
sub r8, 2
and r8, 0xFFFF
jmp o1734
c1734:
add r8, 1
and r8, 0xFFFF
o1735:
cmp byte [tape + r8], 0
jz c1735
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1735
c1735:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o1736:
cmp byte [tape + r8], 0
jz c1736
add r8, 2
and r8, 0xFFFF
jmp o1736
c1736:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1737:
cmp byte [tape + r8], 0
jz c1737
sub r8, 2
and r8, 0xFFFF
jmp o1737
c1737:
add r8, 1
and r8, 0xFFFF
o1738:
cmp byte [tape + r8], 0
jz c1738
add r8, 1
and r8, 0xFFFF
o1739:
cmp byte [tape + r8], 0
jz c1739
add r8, 2
and r8, 0xFFFF
jmp o1739
c1739:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o173a:
cmp byte [tape + r8], 0
jz c173a
sub r8, 2
and r8, 0xFFFF
jmp o173a
c173a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1738
c1738:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o173b:
cmp byte [tape + r8], 0
jz c173b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o173b
c173b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o173c:
cmp byte [tape + r8], 0
jz c173c
sub r8, 2
and r8, 0xFFFF
jmp o173c
c173c:
add r8, 1
and r8, 0xFFFF
o173d:
cmp byte [tape + r8], 0
jz c173d
add r8, 1
and r8, 0xFFFF
o173e:
cmp byte [tape + r8], 0
jz c173e
add r8, 2
and r8, 0xFFFF
jmp o173e
c173e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o173f:
cmp byte [tape + r8], 0
jz c173f
sub r8, 2
and r8, 0xFFFF
jmp o173f
c173f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o173d
c173d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o1740:
cmp byte [tape + r8], 0
jz c1740
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1740
c1740:
add r8, 1
and r8, 0xFFFF
o1741:
cmp byte [tape + r8], 0
jz c1741
sub r8, 3
and r8, 0xFFFF
o1742:
cmp byte [tape + r8], 0
jz c1742
sub r8, 2
and r8, 0xFFFF
jmp o1742
c1742:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1743:
cmp byte [tape + r8], 0
jz c1743
add r8, 2
and r8, 0xFFFF
jmp o1743
c1743:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1741
c1741:
sub r8, 3
and r8, 0xFFFF
o1744:
cmp byte [tape + r8], 0
jz c1744
sub r8, 2
and r8, 0xFFFF
jmp o1744
c1744:
add r8, 1
and r8, 0xFFFF
o1745:
cmp byte [tape + r8], 0
jz c1745
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1745
c1745:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o1746:
cmp byte [tape + r8], 0
jz c1746
add r8, 2
and r8, 0xFFFF
jmp o1746
c1746:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1747:
cmp byte [tape + r8], 0
jz c1747
sub r8, 2
and r8, 0xFFFF
jmp o1747
c1747:
add r8, 1
and r8, 0xFFFF
o1748:
cmp byte [tape + r8], 0
jz c1748
add r8, 1
and r8, 0xFFFF
o1749:
cmp byte [tape + r8], 0
jz c1749
add r8, 2
and r8, 0xFFFF
jmp o1749
c1749:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o174a:
cmp byte [tape + r8], 0
jz c174a
sub r8, 2
and r8, 0xFFFF
jmp o174a
c174a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1748
c1748:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o174b:
cmp byte [tape + r8], 0
jz c174b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o174b
c174b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o174c:
cmp byte [tape + r8], 0
jz c174c
sub r8, 2
and r8, 0xFFFF
jmp o174c
c174c:
add r8, 1
and r8, 0xFFFF
o174d:
cmp byte [tape + r8], 0
jz c174d
add r8, 1
and r8, 0xFFFF
o174e:
cmp byte [tape + r8], 0
jz c174e
add r8, 2
and r8, 0xFFFF
jmp o174e
c174e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o174f:
cmp byte [tape + r8], 0
jz c174f
sub r8, 2
and r8, 0xFFFF
jmp o174f
c174f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o174d
c174d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
add r8, 557
and r8, 0xFFFF
o1750:
cmp byte [tape + r8], 0
jz c1750
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1750
c1750:
add r8, 1
and r8, 0xFFFF
o1751:
cmp byte [tape + r8], 0
jz c1751
sub r8, 3
and r8, 0xFFFF
o1752:
cmp byte [tape + r8], 0
jz c1752
sub r8, 2
and r8, 0xFFFF
jmp o1752
c1752:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1753:
cmp byte [tape + r8], 0
jz c1753
add r8, 2
and r8, 0xFFFF
jmp o1753
c1753:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1751
c1751:
sub r8, 3
and r8, 0xFFFF
o1754:
cmp byte [tape + r8], 0
jz c1754
sub r8, 2
and r8, 0xFFFF
jmp o1754
c1754:
add r8, 1
and r8, 0xFFFF
o1755:
cmp byte [tape + r8], 0
jz c1755
sub r8, 556
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 563
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1755
c1755:
sub r8, 563
and r8, 0xFFFF
push 1
push 563
call m
add r8, 564
and r8, 0xFFFF
o1756:
cmp byte [tape + r8], 0
jz c1756
add r8, 2
and r8, 0xFFFF
jmp o1756
c1756:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1757:
cmp byte [tape + r8], 0
jz c1757
sub r8, 2
and r8, 0xFFFF
jmp o1757
c1757:
add r8, 1
and r8, 0xFFFF
o1758:
cmp byte [tape + r8], 0
jz c1758
add r8, 1
and r8, 0xFFFF
o1759:
cmp byte [tape + r8], 0
jz c1759
add r8, 2
and r8, 0xFFFF
jmp o1759
c1759:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o175a:
cmp byte [tape + r8], 0
jz c175a
sub r8, 2
and r8, 0xFFFF
jmp o175a
c175a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1758
c1758:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 521
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 37
and r8, 0xFFFF
o175b:
cmp byte [tape + r8], 0
jz c175b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o175b
c175b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o175c:
cmp byte [tape + r8], 0
jz c175c
sub r8, 2
and r8, 0xFFFF
jmp o175c
c175c:
add r8, 1
and r8, 0xFFFF
o175d:
cmp byte [tape + r8], 0
jz c175d
add r8, 1
and r8, 0xFFFF
o175e:
cmp byte [tape + r8], 0
jz c175e
add r8, 2
and r8, 0xFFFF
jmp o175e
c175e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o175f:
cmp byte [tape + r8], 0
jz c175f
sub r8, 2
and r8, 0xFFFF
jmp o175f
c175f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o175d
c175d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o1760:
cmp byte [tape + r8], 0
jz c1760
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1760
c1760:
add r8, 1
and r8, 0xFFFF
o1761:
cmp byte [tape + r8], 0
jz c1761
sub r8, 3
and r8, 0xFFFF
o1762:
cmp byte [tape + r8], 0
jz c1762
sub r8, 2
and r8, 0xFFFF
jmp o1762
c1762:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1763:
cmp byte [tape + r8], 0
jz c1763
add r8, 2
and r8, 0xFFFF
jmp o1763
c1763:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1761
c1761:
sub r8, 3
and r8, 0xFFFF
o1764:
cmp byte [tape + r8], 0
jz c1764
sub r8, 2
and r8, 0xFFFF
jmp o1764
c1764:
add r8, 1
and r8, 0xFFFF
o1765:
cmp byte [tape + r8], 0
jz c1765
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1765
c1765:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o1766:
cmp byte [tape + r8], 0
jz c1766
add r8, 2
and r8, 0xFFFF
jmp o1766
c1766:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1767:
cmp byte [tape + r8], 0
jz c1767
sub r8, 2
and r8, 0xFFFF
jmp o1767
c1767:
add r8, 1
and r8, 0xFFFF
o1768:
cmp byte [tape + r8], 0
jz c1768
add r8, 1
and r8, 0xFFFF
o1769:
cmp byte [tape + r8], 0
jz c1769
add r8, 2
and r8, 0xFFFF
jmp o1769
c1769:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o176a:
cmp byte [tape + r8], 0
jz c176a
sub r8, 2
and r8, 0xFFFF
jmp o176a
c176a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1768
c1768:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o176b:
cmp byte [tape + r8], 0
jz c176b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o176b
c176b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o176c:
cmp byte [tape + r8], 0
jz c176c
sub r8, 2
and r8, 0xFFFF
jmp o176c
c176c:
add r8, 1
and r8, 0xFFFF
o176d:
cmp byte [tape + r8], 0
jz c176d
add r8, 1
and r8, 0xFFFF
o176e:
cmp byte [tape + r8], 0
jz c176e
add r8, 2
and r8, 0xFFFF
jmp o176e
c176e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o176f:
cmp byte [tape + r8], 0
jz c176f
sub r8, 2
and r8, 0xFFFF
jmp o176f
c176f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o176d
c176d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o1770:
cmp byte [tape + r8], 0
jz c1770
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1770
c1770:
add r8, 1
and r8, 0xFFFF
o1771:
cmp byte [tape + r8], 0
jz c1771
sub r8, 3
and r8, 0xFFFF
o1772:
cmp byte [tape + r8], 0
jz c1772
sub r8, 2
and r8, 0xFFFF
jmp o1772
c1772:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1773:
cmp byte [tape + r8], 0
jz c1773
add r8, 2
and r8, 0xFFFF
jmp o1773
c1773:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1771
c1771:
sub r8, 3
and r8, 0xFFFF
o1774:
cmp byte [tape + r8], 0
jz c1774
sub r8, 2
and r8, 0xFFFF
jmp o1774
c1774:
add r8, 1
and r8, 0xFFFF
o1775:
cmp byte [tape + r8], 0
jz c1775
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1775
c1775:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o1776:
cmp byte [tape + r8], 0
jz c1776
add r8, 2
and r8, 0xFFFF
jmp o1776
c1776:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1777:
cmp byte [tape + r8], 0
jz c1777
sub r8, 2
and r8, 0xFFFF
jmp o1777
c1777:
add r8, 1
and r8, 0xFFFF
o1778:
cmp byte [tape + r8], 0
jz c1778
add r8, 1
and r8, 0xFFFF
o1779:
cmp byte [tape + r8], 0
jz c1779
add r8, 2
and r8, 0xFFFF
jmp o1779
c1779:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o177a:
cmp byte [tape + r8], 0
jz c177a
sub r8, 2
and r8, 0xFFFF
jmp o177a
c177a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1778
c1778:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o177b:
cmp byte [tape + r8], 0
jz c177b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o177b
c177b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o177c:
cmp byte [tape + r8], 0
jz c177c
sub r8, 2
and r8, 0xFFFF
jmp o177c
c177c:
add r8, 1
and r8, 0xFFFF
o177d:
cmp byte [tape + r8], 0
jz c177d
add r8, 1
and r8, 0xFFFF
o177e:
cmp byte [tape + r8], 0
jz c177e
add r8, 2
and r8, 0xFFFF
jmp o177e
c177e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o177f:
cmp byte [tape + r8], 0
jz c177f
sub r8, 2
and r8, 0xFFFF
jmp o177f
c177f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o177d
c177d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o1780:
cmp byte [tape + r8], 0
jz c1780
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1780
c1780:
add r8, 1
and r8, 0xFFFF
o1781:
cmp byte [tape + r8], 0
jz c1781
sub r8, 3
and r8, 0xFFFF
o1782:
cmp byte [tape + r8], 0
jz c1782
sub r8, 2
and r8, 0xFFFF
jmp o1782
c1782:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1783:
cmp byte [tape + r8], 0
jz c1783
add r8, 2
and r8, 0xFFFF
jmp o1783
c1783:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1781
c1781:
sub r8, 3
and r8, 0xFFFF
o1784:
cmp byte [tape + r8], 0
jz c1784
sub r8, 2
and r8, 0xFFFF
jmp o1784
c1784:
add r8, 1
and r8, 0xFFFF
o1785:
cmp byte [tape + r8], 0
jz c1785
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1785
c1785:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o1786:
cmp byte [tape + r8], 0
jz c1786
add r8, 2
and r8, 0xFFFF
jmp o1786
c1786:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1787:
cmp byte [tape + r8], 0
jz c1787
sub r8, 2
and r8, 0xFFFF
jmp o1787
c1787:
add r8, 1
and r8, 0xFFFF
o1788:
cmp byte [tape + r8], 0
jz c1788
add r8, 1
and r8, 0xFFFF
o1789:
cmp byte [tape + r8], 0
jz c1789
add r8, 2
and r8, 0xFFFF
jmp o1789
c1789:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o178a:
cmp byte [tape + r8], 0
jz c178a
sub r8, 2
and r8, 0xFFFF
jmp o178a
c178a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1788
c1788:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o178b:
cmp byte [tape + r8], 0
jz c178b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o178b
c178b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o178c:
cmp byte [tape + r8], 0
jz c178c
sub r8, 2
and r8, 0xFFFF
jmp o178c
c178c:
add r8, 1
and r8, 0xFFFF
o178d:
cmp byte [tape + r8], 0
jz c178d
add r8, 1
and r8, 0xFFFF
o178e:
cmp byte [tape + r8], 0
jz c178e
add r8, 2
and r8, 0xFFFF
jmp o178e
c178e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o178f:
cmp byte [tape + r8], 0
jz c178f
sub r8, 2
and r8, 0xFFFF
jmp o178f
c178f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o178d
c178d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o1790:
cmp byte [tape + r8], 0
jz c1790
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1790
c1790:
add r8, 1
and r8, 0xFFFF
o1791:
cmp byte [tape + r8], 0
jz c1791
sub r8, 3
and r8, 0xFFFF
o1792:
cmp byte [tape + r8], 0
jz c1792
sub r8, 2
and r8, 0xFFFF
jmp o1792
c1792:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1793:
cmp byte [tape + r8], 0
jz c1793
add r8, 2
and r8, 0xFFFF
jmp o1793
c1793:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1791
c1791:
sub r8, 3
and r8, 0xFFFF
o1794:
cmp byte [tape + r8], 0
jz c1794
sub r8, 2
and r8, 0xFFFF
jmp o1794
c1794:
add r8, 1
and r8, 0xFFFF
o1795:
cmp byte [tape + r8], 0
jz c1795
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1795
c1795:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o1796:
cmp byte [tape + r8], 0
jz c1796
add r8, 2
and r8, 0xFFFF
jmp o1796
c1796:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1797:
cmp byte [tape + r8], 0
jz c1797
sub r8, 2
and r8, 0xFFFF
jmp o1797
c1797:
add r8, 1
and r8, 0xFFFF
o1798:
cmp byte [tape + r8], 0
jz c1798
add r8, 1
and r8, 0xFFFF
o1799:
cmp byte [tape + r8], 0
jz c1799
add r8, 2
and r8, 0xFFFF
jmp o1799
c1799:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o179a:
cmp byte [tape + r8], 0
jz c179a
sub r8, 2
and r8, 0xFFFF
jmp o179a
c179a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1798
c1798:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o179b:
cmp byte [tape + r8], 0
jz c179b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o179b
c179b:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o179c:
cmp byte [tape + r8], 0
jz c179c
sub r8, 2
and r8, 0xFFFF
jmp o179c
c179c:
add r8, 1
and r8, 0xFFFF
o179d:
cmp byte [tape + r8], 0
jz c179d
add r8, 1
and r8, 0xFFFF
o179e:
cmp byte [tape + r8], 0
jz c179e
add r8, 2
and r8, 0xFFFF
jmp o179e
c179e:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o179f:
cmp byte [tape + r8], 0
jz c179f
sub r8, 2
and r8, 0xFFFF
jmp o179f
c179f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o179d
c179d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o17a0:
cmp byte [tape + r8], 0
jz c17a0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17a0
c17a0:
add r8, 1
and r8, 0xFFFF
o17a1:
cmp byte [tape + r8], 0
jz c17a1
sub r8, 3
and r8, 0xFFFF
o17a2:
cmp byte [tape + r8], 0
jz c17a2
sub r8, 2
and r8, 0xFFFF
jmp o17a2
c17a2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o17a3:
cmp byte [tape + r8], 0
jz c17a3
add r8, 2
and r8, 0xFFFF
jmp o17a3
c17a3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17a1
c17a1:
sub r8, 3
and r8, 0xFFFF
o17a4:
cmp byte [tape + r8], 0
jz c17a4
sub r8, 2
and r8, 0xFFFF
jmp o17a4
c17a4:
add r8, 1
and r8, 0xFFFF
o17a5:
cmp byte [tape + r8], 0
jz c17a5
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17a5
c17a5:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o17a6:
cmp byte [tape + r8], 0
jz c17a6
add r8, 2
and r8, 0xFFFF
jmp o17a6
c17a6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17a7:
cmp byte [tape + r8], 0
jz c17a7
sub r8, 2
and r8, 0xFFFF
jmp o17a7
c17a7:
add r8, 1
and r8, 0xFFFF
o17a8:
cmp byte [tape + r8], 0
jz c17a8
add r8, 1
and r8, 0xFFFF
o17a9:
cmp byte [tape + r8], 0
jz c17a9
add r8, 2
and r8, 0xFFFF
jmp o17a9
c17a9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17aa:
cmp byte [tape + r8], 0
jz c17aa
sub r8, 2
and r8, 0xFFFF
jmp o17aa
c17aa:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17a8
c17a8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o17ab:
cmp byte [tape + r8], 0
jz c17ab
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17ab
c17ab:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17ac:
cmp byte [tape + r8], 0
jz c17ac
sub r8, 2
and r8, 0xFFFF
jmp o17ac
c17ac:
add r8, 1
and r8, 0xFFFF
o17ad:
cmp byte [tape + r8], 0
jz c17ad
add r8, 1
and r8, 0xFFFF
o17ae:
cmp byte [tape + r8], 0
jz c17ae
add r8, 2
and r8, 0xFFFF
jmp o17ae
c17ae:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17af:
cmp byte [tape + r8], 0
jz c17af
sub r8, 2
and r8, 0xFFFF
jmp o17af
c17af:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17ad
c17ad:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o17b0:
cmp byte [tape + r8], 0
jz c17b0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17b0
c17b0:
add r8, 1
and r8, 0xFFFF
o17b1:
cmp byte [tape + r8], 0
jz c17b1
sub r8, 3
and r8, 0xFFFF
o17b2:
cmp byte [tape + r8], 0
jz c17b2
sub r8, 2
and r8, 0xFFFF
jmp o17b2
c17b2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o17b3:
cmp byte [tape + r8], 0
jz c17b3
add r8, 2
and r8, 0xFFFF
jmp o17b3
c17b3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17b1
c17b1:
sub r8, 3
and r8, 0xFFFF
o17b4:
cmp byte [tape + r8], 0
jz c17b4
sub r8, 2
and r8, 0xFFFF
jmp o17b4
c17b4:
add r8, 1
and r8, 0xFFFF
o17b5:
cmp byte [tape + r8], 0
jz c17b5
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17b5
c17b5:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o17b6:
cmp byte [tape + r8], 0
jz c17b6
add r8, 2
and r8, 0xFFFF
jmp o17b6
c17b6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17b7:
cmp byte [tape + r8], 0
jz c17b7
sub r8, 2
and r8, 0xFFFF
jmp o17b7
c17b7:
add r8, 1
and r8, 0xFFFF
o17b8:
cmp byte [tape + r8], 0
jz c17b8
add r8, 1
and r8, 0xFFFF
o17b9:
cmp byte [tape + r8], 0
jz c17b9
add r8, 2
and r8, 0xFFFF
jmp o17b9
c17b9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17ba:
cmp byte [tape + r8], 0
jz c17ba
sub r8, 2
and r8, 0xFFFF
jmp o17ba
c17ba:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17b8
c17b8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o17bb:
cmp byte [tape + r8], 0
jz c17bb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17bb
c17bb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17bc:
cmp byte [tape + r8], 0
jz c17bc
sub r8, 2
and r8, 0xFFFF
jmp o17bc
c17bc:
add r8, 1
and r8, 0xFFFF
o17bd:
cmp byte [tape + r8], 0
jz c17bd
add r8, 1
and r8, 0xFFFF
o17be:
cmp byte [tape + r8], 0
jz c17be
add r8, 2
and r8, 0xFFFF
jmp o17be
c17be:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17bf:
cmp byte [tape + r8], 0
jz c17bf
sub r8, 2
and r8, 0xFFFF
jmp o17bf
c17bf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17bd
c17bd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o17c0:
cmp byte [tape + r8], 0
jz c17c0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17c0
c17c0:
add r8, 1
and r8, 0xFFFF
o17c1:
cmp byte [tape + r8], 0
jz c17c1
sub r8, 3
and r8, 0xFFFF
o17c2:
cmp byte [tape + r8], 0
jz c17c2
sub r8, 2
and r8, 0xFFFF
jmp o17c2
c17c2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o17c3:
cmp byte [tape + r8], 0
jz c17c3
add r8, 2
and r8, 0xFFFF
jmp o17c3
c17c3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17c1
c17c1:
sub r8, 3
and r8, 0xFFFF
o17c4:
cmp byte [tape + r8], 0
jz c17c4
sub r8, 2
and r8, 0xFFFF
jmp o17c4
c17c4:
add r8, 1
and r8, 0xFFFF
o17c5:
cmp byte [tape + r8], 0
jz c17c5
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17c5
c17c5:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o17c6:
cmp byte [tape + r8], 0
jz c17c6
add r8, 2
and r8, 0xFFFF
jmp o17c6
c17c6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17c7:
cmp byte [tape + r8], 0
jz c17c7
sub r8, 2
and r8, 0xFFFF
jmp o17c7
c17c7:
add r8, 1
and r8, 0xFFFF
o17c8:
cmp byte [tape + r8], 0
jz c17c8
add r8, 1
and r8, 0xFFFF
o17c9:
cmp byte [tape + r8], 0
jz c17c9
add r8, 2
and r8, 0xFFFF
jmp o17c9
c17c9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17ca:
cmp byte [tape + r8], 0
jz c17ca
sub r8, 2
and r8, 0xFFFF
jmp o17ca
c17ca:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17c8
c17c8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o17cb:
cmp byte [tape + r8], 0
jz c17cb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17cb
c17cb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17cc:
cmp byte [tape + r8], 0
jz c17cc
sub r8, 2
and r8, 0xFFFF
jmp o17cc
c17cc:
add r8, 1
and r8, 0xFFFF
o17cd:
cmp byte [tape + r8], 0
jz c17cd
add r8, 1
and r8, 0xFFFF
o17ce:
cmp byte [tape + r8], 0
jz c17ce
add r8, 2
and r8, 0xFFFF
jmp o17ce
c17ce:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17cf:
cmp byte [tape + r8], 0
jz c17cf
sub r8, 2
and r8, 0xFFFF
jmp o17cf
c17cf:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17cd
c17cd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o17d0:
cmp byte [tape + r8], 0
jz c17d0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17d0
c17d0:
add r8, 1
and r8, 0xFFFF
o17d1:
cmp byte [tape + r8], 0
jz c17d1
sub r8, 3
and r8, 0xFFFF
o17d2:
cmp byte [tape + r8], 0
jz c17d2
sub r8, 2
and r8, 0xFFFF
jmp o17d2
c17d2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o17d3:
cmp byte [tape + r8], 0
jz c17d3
add r8, 2
and r8, 0xFFFF
jmp o17d3
c17d3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17d1
c17d1:
sub r8, 3
and r8, 0xFFFF
o17d4:
cmp byte [tape + r8], 0
jz c17d4
sub r8, 2
and r8, 0xFFFF
jmp o17d4
c17d4:
add r8, 1
and r8, 0xFFFF
o17d5:
cmp byte [tape + r8], 0
jz c17d5
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17d5
c17d5:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o17d6:
cmp byte [tape + r8], 0
jz c17d6
add r8, 2
and r8, 0xFFFF
jmp o17d6
c17d6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17d7:
cmp byte [tape + r8], 0
jz c17d7
sub r8, 2
and r8, 0xFFFF
jmp o17d7
c17d7:
add r8, 1
and r8, 0xFFFF
o17d8:
cmp byte [tape + r8], 0
jz c17d8
add r8, 1
and r8, 0xFFFF
o17d9:
cmp byte [tape + r8], 0
jz c17d9
add r8, 2
and r8, 0xFFFF
jmp o17d9
c17d9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17da:
cmp byte [tape + r8], 0
jz c17da
sub r8, 2
and r8, 0xFFFF
jmp o17da
c17da:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17d8
c17d8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o17db:
cmp byte [tape + r8], 0
jz c17db
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17db
c17db:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17dc:
cmp byte [tape + r8], 0
jz c17dc
sub r8, 2
and r8, 0xFFFF
jmp o17dc
c17dc:
add r8, 1
and r8, 0xFFFF
o17dd:
cmp byte [tape + r8], 0
jz c17dd
add r8, 1
and r8, 0xFFFF
o17de:
cmp byte [tape + r8], 0
jz c17de
add r8, 2
and r8, 0xFFFF
jmp o17de
c17de:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17df:
cmp byte [tape + r8], 0
jz c17df
sub r8, 2
and r8, 0xFFFF
jmp o17df
c17df:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17dd
c17dd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o17e0:
cmp byte [tape + r8], 0
jz c17e0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17e0
c17e0:
add r8, 1
and r8, 0xFFFF
o17e1:
cmp byte [tape + r8], 0
jz c17e1
sub r8, 3
and r8, 0xFFFF
o17e2:
cmp byte [tape + r8], 0
jz c17e2
sub r8, 2
and r8, 0xFFFF
jmp o17e2
c17e2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o17e3:
cmp byte [tape + r8], 0
jz c17e3
add r8, 2
and r8, 0xFFFF
jmp o17e3
c17e3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17e1
c17e1:
sub r8, 3
and r8, 0xFFFF
o17e4:
cmp byte [tape + r8], 0
jz c17e4
sub r8, 2
and r8, 0xFFFF
jmp o17e4
c17e4:
add r8, 1
and r8, 0xFFFF
o17e5:
cmp byte [tape + r8], 0
jz c17e5
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17e5
c17e5:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o17e6:
cmp byte [tape + r8], 0
jz c17e6
add r8, 2
and r8, 0xFFFF
jmp o17e6
c17e6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17e7:
cmp byte [tape + r8], 0
jz c17e7
sub r8, 2
and r8, 0xFFFF
jmp o17e7
c17e7:
add r8, 1
and r8, 0xFFFF
o17e8:
cmp byte [tape + r8], 0
jz c17e8
add r8, 1
and r8, 0xFFFF
o17e9:
cmp byte [tape + r8], 0
jz c17e9
add r8, 2
and r8, 0xFFFF
jmp o17e9
c17e9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17ea:
cmp byte [tape + r8], 0
jz c17ea
sub r8, 2
and r8, 0xFFFF
jmp o17ea
c17ea:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17e8
c17e8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o17eb:
cmp byte [tape + r8], 0
jz c17eb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17eb
c17eb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17ec:
cmp byte [tape + r8], 0
jz c17ec
sub r8, 2
and r8, 0xFFFF
jmp o17ec
c17ec:
add r8, 1
and r8, 0xFFFF
o17ed:
cmp byte [tape + r8], 0
jz c17ed
add r8, 1
and r8, 0xFFFF
o17ee:
cmp byte [tape + r8], 0
jz c17ee
add r8, 2
and r8, 0xFFFF
jmp o17ee
c17ee:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17ef:
cmp byte [tape + r8], 0
jz c17ef
sub r8, 2
and r8, 0xFFFF
jmp o17ef
c17ef:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17ed
c17ed:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 90
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
add r8, 580
and r8, 0xFFFF
o17f0:
cmp byte [tape + r8], 0
jz c17f0
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17f0
c17f0:
add r8, 1
and r8, 0xFFFF
o17f1:
cmp byte [tape + r8], 0
jz c17f1
sub r8, 3
and r8, 0xFFFF
o17f2:
cmp byte [tape + r8], 0
jz c17f2
sub r8, 2
and r8, 0xFFFF
jmp o17f2
c17f2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o17f3:
cmp byte [tape + r8], 0
jz c17f3
add r8, 2
and r8, 0xFFFF
jmp o17f3
c17f3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17f1
c17f1:
sub r8, 3
and r8, 0xFFFF
o17f4:
cmp byte [tape + r8], 0
jz c17f4
sub r8, 2
and r8, 0xFFFF
jmp o17f4
c17f4:
add r8, 1
and r8, 0xFFFF
o17f5:
cmp byte [tape + r8], 0
jz c17f5
sub r8, 579
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 586
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17f5
c17f5:
sub r8, 586
and r8, 0xFFFF
push 1
push 586
call m
add r8, 587
and r8, 0xFFFF
o17f6:
cmp byte [tape + r8], 0
jz c17f6
add r8, 2
and r8, 0xFFFF
jmp o17f6
c17f6:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17f7:
cmp byte [tape + r8], 0
jz c17f7
sub r8, 2
and r8, 0xFFFF
jmp o17f7
c17f7:
add r8, 1
and r8, 0xFFFF
o17f8:
cmp byte [tape + r8], 0
jz c17f8
add r8, 1
and r8, 0xFFFF
o17f9:
cmp byte [tape + r8], 0
jz c17f9
add r8, 2
and r8, 0xFFFF
jmp o17f9
c17f9:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17fa:
cmp byte [tape + r8], 0
jz c17fa
sub r8, 2
and r8, 0xFFFF
jmp o17fa
c17fa:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17f8
c17f8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 498
and r8, 0xFFFF
call z
sub r8, 82
and r8, 0xFFFF
push 1
push 82
call m
add r8, 83
and r8, 0xFFFF
o17fb:
cmp byte [tape + r8], 0
jz c17fb
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o17fb
c17fb:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o17fc:
cmp byte [tape + r8], 0
jz c17fc
sub r8, 2
and r8, 0xFFFF
jmp o17fc
c17fc:
add r8, 1
and r8, 0xFFFF
o17fd:
cmp byte [tape + r8], 0
jz c17fd
add r8, 1
and r8, 0xFFFF
o17fe:
cmp byte [tape + r8], 0
jz c17fe
add r8, 2
and r8, 0xFFFF
jmp o17fe
c17fe:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o17ff:
cmp byte [tape + r8], 0
jz c17ff
sub r8, 2
and r8, 0xFFFF
jmp o17ff
c17ff:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o17fd
c17fd:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 518
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 610
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o169e
c169e:
add r8, 530
and r8, 0xFFFF
push 1
push 531
call ms
sub r8, 531
and r8, 0xFFFF
o1800:
cmp byte [tape + r8], 0
jz c1800
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1800
c1800:
add r8, 1
and r8, 0xFFFF
o1801:
cmp byte [tape + r8], 0
jz c1801
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1802:
cmp byte [tape + r8], 0
jz c1802
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1802
c1802:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1801
c1801:
add r8, 609
and r8, 0xFFFF
push 1
push 610
call ms
sub r8, 610
and r8, 0xFFFF
o1803:
cmp byte [tape + r8], 0
jz c1803
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1803
c1803:
add r8, 1
and r8, 0xFFFF
o1804:
cmp byte [tape + r8], 0
jz c1804
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
call z
sub r8, 10
and r8, 0xFFFF
push 1
push 10
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1804
c1804:
add r8, 529
and r8, 0xFFFF
push 1
push 530
call ms
sub r8, 530
and r8, 0xFFFF
o1805:
cmp byte [tape + r8], 0
jz c1805
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1805
c1805:
add r8, 1
and r8, 0xFFFF
o1806:
cmp byte [tape + r8], 0
jz c1806
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1807:
cmp byte [tape + r8], 0
jz c1807
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1807
c1807:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1808:
cmp byte [tape + r8], 0
jz c1808
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1808
c1808:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1809:
cmp byte [tape + r8], 0
jz c1809
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1809
c1809:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o180a:
cmp byte [tape + r8], 0
jz c180a
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o180a
c180a:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o180b:
cmp byte [tape + r8], 0
jz c180b
add r8, 602
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 611
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o180b
c180b:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1806
c1806:
sub r8, 1
and r8, 0xFFFF
o180c:
cmp byte [tape + r8], 0
jz c180c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o180c
c180c:
add r8, 1
and r8, 0xFFFF
o180d:
cmp byte [tape + r8], 0
jz c180d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o180e:
cmp byte [tape + r8], 0
jz c180e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o180e
c180e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 6
and r8, 0xFFFF
call z
sub r8, 6
and r8, 0xFFFF
push 1
push 6
call m
call z
add r8, 8
and r8, 0xFFFF
o180f:
cmp byte [tape + r8], 0
jz c180f
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 15
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o180f
c180f:
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
add r8, 530
and r8, 0xFFFF
call z
sub r8, 523
and r8, 0xFFFF
push 1
push 523
call m
call z
add r8, 4
and r8, 0xFFFF
o1810:
cmp byte [tape + r8], 0
jz c1810
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 11
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1810
c1810:
sub r8, 11
and r8, 0xFFFF
push 1
push 11
call m
add r8, 531
and r8, 0xFFFF
call z
sub r8, 524
and r8, 0xFFFF
push 1
push 524
call m
call z
add r8, 10
and r8, 0xFFFF
o1811:
cmp byte [tape + r8], 0
jz c1811
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1811
c1811:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 532
and r8, 0xFFFF
call z
sub r8, 525
and r8, 0xFFFF
push 1
push 525
call m
call z
add r8, 9
and r8, 0xFFFF
o1812:
cmp byte [tape + r8], 0
jz c1812
sub r8, 9
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1812
c1812:
sub r8, 16
and r8, 0xFFFF
push 1
push 16
call m
add r8, 533
and r8, 0xFFFF
call z
sub r8, 526
and r8, 0xFFFF
push 1
push 526
call m
call z
add r8, 225
and r8, 0xFFFF
o1813:
cmp byte [tape + r8], 0
jz c1813
sub r8, 225
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 232
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1813
c1813:
sub r8, 232
and r8, 0xFFFF
push 1
push 232
call m
add r8, 534
and r8, 0xFFFF
call z
sub r8, 527
and r8, 0xFFFF
push 1
push 527
call m
call z
add r8, 12
and r8, 0xFFFF
o1814:
cmp byte [tape + r8], 0
jz c1814
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1814
c1814:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
add r8, 535
and r8, 0xFFFF
call z
sub r8, 528
and r8, 0xFFFF
push 1
push 528
call m
call z
add r8, 13
and r8, 0xFFFF
o1815:
cmp byte [tape + r8], 0
jz c1815
sub r8, 13
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 20
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1815
c1815:
sub r8, 20
and r8, 0xFFFF
push 1
push 20
call m
add r8, 536
and r8, 0xFFFF
call z
sub r8, 529
and r8, 0xFFFF
push 1
push 529
call m
call z
add r8, 14
and r8, 0xFFFF
o1816:
cmp byte [tape + r8], 0
jz c1816
sub r8, 14
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 21
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1816
c1816:
sub r8, 21
and r8, 0xFFFF
push 1
push 21
call m
add r8, 537
and r8, 0xFFFF
call z
sub r8, 530
and r8, 0xFFFF
push 1
push 530
call m
call z
add r8, 15
and r8, 0xFFFF
o1817:
cmp byte [tape + r8], 0
jz c1817
sub r8, 15
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 22
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1817
c1817:
sub r8, 22
and r8, 0xFFFF
push 1
push 22
call m
add r8, 538
and r8, 0xFFFF
call z
sub r8, 531
and r8, 0xFFFF
push 1
push 531
call m
call z
add r8, 16
and r8, 0xFFFF
o1818:
cmp byte [tape + r8], 0
jz c1818
sub r8, 16
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 23
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1818
c1818:
sub r8, 23
and r8, 0xFFFF
push 1
push 23
call m
add r8, 539
and r8, 0xFFFF
call z
sub r8, 532
and r8, 0xFFFF
push 1
push 532
call m
call z
add r8, 17
and r8, 0xFFFF
o1819:
cmp byte [tape + r8], 0
jz c1819
sub r8, 17
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 24
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1819
c1819:
sub r8, 24
and r8, 0xFFFF
push 1
push 24
call m
add r8, 540
and r8, 0xFFFF
call z
sub r8, 533
and r8, 0xFFFF
push 1
push 533
call m
call z
add r8, 18
and r8, 0xFFFF
o181a:
cmp byte [tape + r8], 0
jz c181a
sub r8, 18
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 25
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o181a
c181a:
sub r8, 25
and r8, 0xFFFF
push 1
push 25
call m
add r8, 541
and r8, 0xFFFF
call z
sub r8, 534
and r8, 0xFFFF
push 1
push 534
call m
call z
add r8, 19
and r8, 0xFFFF
o181b:
cmp byte [tape + r8], 0
jz c181b
sub r8, 19
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 26
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o181b
c181b:
sub r8, 26
and r8, 0xFFFF
push 1
push 26
call m
add r8, 542
and r8, 0xFFFF
call z
sub r8, 535
and r8, 0xFFFF
push 1
push 535
call m
call z
add r8, 5
and r8, 0xFFFF
o181c:
cmp byte [tape + r8], 0
jz c181c
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o181c
c181c:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
add r8, 543
and r8, 0xFFFF
call z
sub r8, 536
and r8, 0xFFFF
push 1
push 536
call m
call z
add r8, 20
and r8, 0xFFFF
o181d:
cmp byte [tape + r8], 0
jz c181d
sub r8, 20
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o181d
c181d:
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
add r8, 544
and r8, 0xFFFF
call z
sub r8, 537
and r8, 0xFFFF
push 1
push 537
call m
call z
add r8, 21
and r8, 0xFFFF
o181e:
cmp byte [tape + r8], 0
jz c181e
sub r8, 21
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 28
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o181e
c181e:
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
add r8, 545
and r8, 0xFFFF
call z
sub r8, 538
and r8, 0xFFFF
push 1
push 538
call m
call z
add r8, 290
and r8, 0xFFFF
o181f:
cmp byte [tape + r8], 0
jz c181f
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o181f
c181f:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
add r8, 546
and r8, 0xFFFF
call z
sub r8, 539
and r8, 0xFFFF
push 1
push 539
call m
call z
add r8, 22
and r8, 0xFFFF
o1820:
cmp byte [tape + r8], 0
jz c1820
sub r8, 22
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 29
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1820
c1820:
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
add r8, 547
and r8, 0xFFFF
call z
sub r8, 540
and r8, 0xFFFF
push 1
push 540
call m
call z
add r8, 23
and r8, 0xFFFF
o1821:
cmp byte [tape + r8], 0
jz c1821
sub r8, 23
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 30
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1821
c1821:
sub r8, 30
and r8, 0xFFFF
push 1
push 30
call m
add r8, 548
and r8, 0xFFFF
call z
sub r8, 541
and r8, 0xFFFF
push 1
push 541
call m
call z
add r8, 24
and r8, 0xFFFF
o1822:
cmp byte [tape + r8], 0
jz c1822
sub r8, 24
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 31
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1822
c1822:
sub r8, 31
and r8, 0xFFFF
push 1
push 31
call m
add r8, 549
and r8, 0xFFFF
call z
sub r8, 542
and r8, 0xFFFF
push 1
push 542
call m
call z
add r8, 25
and r8, 0xFFFF
o1823:
cmp byte [tape + r8], 0
jz c1823
sub r8, 25
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 32
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1823
c1823:
sub r8, 32
and r8, 0xFFFF
push 1
push 32
call m
add r8, 550
and r8, 0xFFFF
call z
sub r8, 543
and r8, 0xFFFF
push 1
push 543
call m
call z
add r8, 26
and r8, 0xFFFF
o1824:
cmp byte [tape + r8], 0
jz c1824
sub r8, 26
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 33
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1824
c1824:
sub r8, 33
and r8, 0xFFFF
push 1
push 33
call m
add r8, 551
and r8, 0xFFFF
call z
sub r8, 544
and r8, 0xFFFF
push 1
push 544
call m
call z
add r8, 27
and r8, 0xFFFF
o1825:
cmp byte [tape + r8], 0
jz c1825
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 34
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1825
c1825:
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
add r8, 552
and r8, 0xFFFF
call z
sub r8, 545
and r8, 0xFFFF
push 1
push 545
call m
call z
add r8, 28
and r8, 0xFFFF
o1826:
cmp byte [tape + r8], 0
jz c1826
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1826
c1826:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
add r8, 553
and r8, 0xFFFF
call z
sub r8, 546
and r8, 0xFFFF
push 1
push 546
call m
call z
add r8, 29
and r8, 0xFFFF
o1827:
cmp byte [tape + r8], 0
jz c1827
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1827
c1827:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 554
and r8, 0xFFFF
call z
sub r8, 547
and r8, 0xFFFF
push 1
push 547
call m
call z
add r8, 110
and r8, 0xFFFF
o1828:
cmp byte [tape + r8], 0
jz c1828
sub r8, 110
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1828
c1828:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
add r8, 555
and r8, 0xFFFF
call z
sub r8, 548
and r8, 0xFFFF
push 1
push 548
call m
call z
add r8, 30
and r8, 0xFFFF
o1829:
cmp byte [tape + r8], 0
jz c1829
sub r8, 30
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1829
c1829:
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 556
and r8, 0xFFFF
call z
sub r8, 549
and r8, 0xFFFF
push 1
push 549
call m
call z
add r8, 31
and r8, 0xFFFF
o182a:
cmp byte [tape + r8], 0
jz c182a
sub r8, 31
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 38
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o182a
c182a:
sub r8, 38
and r8, 0xFFFF
push 1
push 38
call m
add r8, 557
and r8, 0xFFFF
call z
sub r8, 550
and r8, 0xFFFF
push 1
push 550
call m
call z
add r8, 32
and r8, 0xFFFF
o182b:
cmp byte [tape + r8], 0
jz c182b
sub r8, 32
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 39
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o182b
c182b:
sub r8, 39
and r8, 0xFFFF
push 1
push 39
call m
add r8, 558
and r8, 0xFFFF
call z
sub r8, 551
and r8, 0xFFFF
push 1
push 551
call m
call z
add r8, 33
and r8, 0xFFFF
o182c:
cmp byte [tape + r8], 0
jz c182c
sub r8, 33
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 40
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o182c
c182c:
sub r8, 40
and r8, 0xFFFF
push 1
push 40
call m
add r8, 559
and r8, 0xFFFF
call z
sub r8, 552
and r8, 0xFFFF
push 1
push 552
call m
call z
add r8, 105
and r8, 0xFFFF
o182d:
cmp byte [tape + r8], 0
jz c182d
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o182d
c182d:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 560
and r8, 0xFFFF
call z
sub r8, 553
and r8, 0xFFFF
push 1
push 553
call m
call z
add r8, 34
and r8, 0xFFFF
o182e:
cmp byte [tape + r8], 0
jz c182e
sub r8, 34
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 41
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o182e
c182e:
sub r8, 41
and r8, 0xFFFF
push 1
push 41
call m
add r8, 561
and r8, 0xFFFF
call z
sub r8, 554
and r8, 0xFFFF
push 1
push 554
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o182f:
cmp byte [tape + r8], 0
jz c182f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o182f
c182f:
add r8, 1
and r8, 0xFFFF
o1830:
cmp byte [tape + r8], 0
jz c1830
sub r8, 3
and r8, 0xFFFF
o1831:
cmp byte [tape + r8], 0
jz c1831
sub r8, 2
and r8, 0xFFFF
jmp o1831
c1831:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1832:
cmp byte [tape + r8], 0
jz c1832
add r8, 2
and r8, 0xFFFF
jmp o1832
c1832:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1830
c1830:
sub r8, 3
and r8, 0xFFFF
o1833:
cmp byte [tape + r8], 0
jz c1833
sub r8, 2
and r8, 0xFFFF
jmp o1833
c1833:
add r8, 1
and r8, 0xFFFF
o1834:
cmp byte [tape + r8], 0
jz c1834
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1834
c1834:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1835:
cmp byte [tape + r8], 0
jz c1835
add r8, 2
and r8, 0xFFFF
jmp o1835
c1835:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1836:
cmp byte [tape + r8], 0
jz c1836
sub r8, 2
and r8, 0xFFFF
jmp o1836
c1836:
add r8, 1
and r8, 0xFFFF
o1837:
cmp byte [tape + r8], 0
jz c1837
add r8, 1
and r8, 0xFFFF
o1838:
cmp byte [tape + r8], 0
jz c1838
add r8, 2
and r8, 0xFFFF
jmp o1838
c1838:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1839:
cmp byte [tape + r8], 0
jz c1839
sub r8, 2
and r8, 0xFFFF
jmp o1839
c1839:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1837
c1837:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o183a:
cmp byte [tape + r8], 0
jz c183a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o183a
c183a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o183b:
cmp byte [tape + r8], 0
jz c183b
sub r8, 2
and r8, 0xFFFF
jmp o183b
c183b:
add r8, 1
and r8, 0xFFFF
o183c:
cmp byte [tape + r8], 0
jz c183c
add r8, 1
and r8, 0xFFFF
o183d:
cmp byte [tape + r8], 0
jz c183d
add r8, 2
and r8, 0xFFFF
jmp o183d
c183d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o183e:
cmp byte [tape + r8], 0
jz c183e
sub r8, 2
and r8, 0xFFFF
jmp o183e
c183e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o183c
c183c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o183f:
cmp byte [tape + r8], 0
jz c183f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o183f
c183f:
add r8, 1
and r8, 0xFFFF
o1840:
cmp byte [tape + r8], 0
jz c1840
sub r8, 3
and r8, 0xFFFF
o1841:
cmp byte [tape + r8], 0
jz c1841
sub r8, 2
and r8, 0xFFFF
jmp o1841
c1841:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1842:
cmp byte [tape + r8], 0
jz c1842
add r8, 2
and r8, 0xFFFF
jmp o1842
c1842:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1840
c1840:
sub r8, 3
and r8, 0xFFFF
o1843:
cmp byte [tape + r8], 0
jz c1843
sub r8, 2
and r8, 0xFFFF
jmp o1843
c1843:
add r8, 1
and r8, 0xFFFF
o1844:
cmp byte [tape + r8], 0
jz c1844
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1844
c1844:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1845:
cmp byte [tape + r8], 0
jz c1845
add r8, 2
and r8, 0xFFFF
jmp o1845
c1845:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1846:
cmp byte [tape + r8], 0
jz c1846
sub r8, 2
and r8, 0xFFFF
jmp o1846
c1846:
add r8, 1
and r8, 0xFFFF
o1847:
cmp byte [tape + r8], 0
jz c1847
add r8, 1
and r8, 0xFFFF
o1848:
cmp byte [tape + r8], 0
jz c1848
add r8, 2
and r8, 0xFFFF
jmp o1848
c1848:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1849:
cmp byte [tape + r8], 0
jz c1849
sub r8, 2
and r8, 0xFFFF
jmp o1849
c1849:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1847
c1847:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o184a:
cmp byte [tape + r8], 0
jz c184a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o184a
c184a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o184b:
cmp byte [tape + r8], 0
jz c184b
sub r8, 2
and r8, 0xFFFF
jmp o184b
c184b:
add r8, 1
and r8, 0xFFFF
o184c:
cmp byte [tape + r8], 0
jz c184c
add r8, 1
and r8, 0xFFFF
o184d:
cmp byte [tape + r8], 0
jz c184d
add r8, 2
and r8, 0xFFFF
jmp o184d
c184d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o184e:
cmp byte [tape + r8], 0
jz c184e
sub r8, 2
and r8, 0xFFFF
jmp o184e
c184e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o184c
c184c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o184f:
cmp byte [tape + r8], 0
jz c184f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o184f
c184f:
add r8, 1
and r8, 0xFFFF
o1850:
cmp byte [tape + r8], 0
jz c1850
sub r8, 3
and r8, 0xFFFF
o1851:
cmp byte [tape + r8], 0
jz c1851
sub r8, 2
and r8, 0xFFFF
jmp o1851
c1851:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1852:
cmp byte [tape + r8], 0
jz c1852
add r8, 2
and r8, 0xFFFF
jmp o1852
c1852:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1850
c1850:
sub r8, 3
and r8, 0xFFFF
o1853:
cmp byte [tape + r8], 0
jz c1853
sub r8, 2
and r8, 0xFFFF
jmp o1853
c1853:
add r8, 1
and r8, 0xFFFF
o1854:
cmp byte [tape + r8], 0
jz c1854
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1854
c1854:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1855:
cmp byte [tape + r8], 0
jz c1855
add r8, 2
and r8, 0xFFFF
jmp o1855
c1855:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1856:
cmp byte [tape + r8], 0
jz c1856
sub r8, 2
and r8, 0xFFFF
jmp o1856
c1856:
add r8, 1
and r8, 0xFFFF
o1857:
cmp byte [tape + r8], 0
jz c1857
add r8, 1
and r8, 0xFFFF
o1858:
cmp byte [tape + r8], 0
jz c1858
add r8, 2
and r8, 0xFFFF
jmp o1858
c1858:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1859:
cmp byte [tape + r8], 0
jz c1859
sub r8, 2
and r8, 0xFFFF
jmp o1859
c1859:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1857
c1857:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o185a:
cmp byte [tape + r8], 0
jz c185a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o185a
c185a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o185b:
cmp byte [tape + r8], 0
jz c185b
sub r8, 2
and r8, 0xFFFF
jmp o185b
c185b:
add r8, 1
and r8, 0xFFFF
o185c:
cmp byte [tape + r8], 0
jz c185c
add r8, 1
and r8, 0xFFFF
o185d:
cmp byte [tape + r8], 0
jz c185d
add r8, 2
and r8, 0xFFFF
jmp o185d
c185d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o185e:
cmp byte [tape + r8], 0
jz c185e
sub r8, 2
and r8, 0xFFFF
jmp o185e
c185e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o185c
c185c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o185f:
cmp byte [tape + r8], 0
jz c185f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o185f
c185f:
add r8, 1
and r8, 0xFFFF
o1860:
cmp byte [tape + r8], 0
jz c1860
sub r8, 3
and r8, 0xFFFF
o1861:
cmp byte [tape + r8], 0
jz c1861
sub r8, 2
and r8, 0xFFFF
jmp o1861
c1861:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1862:
cmp byte [tape + r8], 0
jz c1862
add r8, 2
and r8, 0xFFFF
jmp o1862
c1862:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1860
c1860:
sub r8, 3
and r8, 0xFFFF
o1863:
cmp byte [tape + r8], 0
jz c1863
sub r8, 2
and r8, 0xFFFF
jmp o1863
c1863:
add r8, 1
and r8, 0xFFFF
o1864:
cmp byte [tape + r8], 0
jz c1864
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1864
c1864:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1865:
cmp byte [tape + r8], 0
jz c1865
add r8, 2
and r8, 0xFFFF
jmp o1865
c1865:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1866:
cmp byte [tape + r8], 0
jz c1866
sub r8, 2
and r8, 0xFFFF
jmp o1866
c1866:
add r8, 1
and r8, 0xFFFF
o1867:
cmp byte [tape + r8], 0
jz c1867
add r8, 1
and r8, 0xFFFF
o1868:
cmp byte [tape + r8], 0
jz c1868
add r8, 2
and r8, 0xFFFF
jmp o1868
c1868:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1869:
cmp byte [tape + r8], 0
jz c1869
sub r8, 2
and r8, 0xFFFF
jmp o1869
c1869:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1867
c1867:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o186a:
cmp byte [tape + r8], 0
jz c186a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o186a
c186a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o186b:
cmp byte [tape + r8], 0
jz c186b
sub r8, 2
and r8, 0xFFFF
jmp o186b
c186b:
add r8, 1
and r8, 0xFFFF
o186c:
cmp byte [tape + r8], 0
jz c186c
add r8, 1
and r8, 0xFFFF
o186d:
cmp byte [tape + r8], 0
jz c186d
add r8, 2
and r8, 0xFFFF
jmp o186d
c186d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o186e:
cmp byte [tape + r8], 0
jz c186e
sub r8, 2
and r8, 0xFFFF
jmp o186e
c186e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o186c
c186c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o186f:
cmp byte [tape + r8], 0
jz c186f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o186f
c186f:
add r8, 1
and r8, 0xFFFF
o1870:
cmp byte [tape + r8], 0
jz c1870
sub r8, 3
and r8, 0xFFFF
o1871:
cmp byte [tape + r8], 0
jz c1871
sub r8, 2
and r8, 0xFFFF
jmp o1871
c1871:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1872:
cmp byte [tape + r8], 0
jz c1872
add r8, 2
and r8, 0xFFFF
jmp o1872
c1872:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1870
c1870:
sub r8, 3
and r8, 0xFFFF
o1873:
cmp byte [tape + r8], 0
jz c1873
sub r8, 2
and r8, 0xFFFF
jmp o1873
c1873:
add r8, 1
and r8, 0xFFFF
o1874:
cmp byte [tape + r8], 0
jz c1874
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1874
c1874:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1875:
cmp byte [tape + r8], 0
jz c1875
add r8, 2
and r8, 0xFFFF
jmp o1875
c1875:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1876:
cmp byte [tape + r8], 0
jz c1876
sub r8, 2
and r8, 0xFFFF
jmp o1876
c1876:
add r8, 1
and r8, 0xFFFF
o1877:
cmp byte [tape + r8], 0
jz c1877
add r8, 1
and r8, 0xFFFF
o1878:
cmp byte [tape + r8], 0
jz c1878
add r8, 2
and r8, 0xFFFF
jmp o1878
c1878:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1879:
cmp byte [tape + r8], 0
jz c1879
sub r8, 2
and r8, 0xFFFF
jmp o1879
c1879:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1877
c1877:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o187a:
cmp byte [tape + r8], 0
jz c187a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o187a
c187a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o187b:
cmp byte [tape + r8], 0
jz c187b
sub r8, 2
and r8, 0xFFFF
jmp o187b
c187b:
add r8, 1
and r8, 0xFFFF
o187c:
cmp byte [tape + r8], 0
jz c187c
add r8, 1
and r8, 0xFFFF
o187d:
cmp byte [tape + r8], 0
jz c187d
add r8, 2
and r8, 0xFFFF
jmp o187d
c187d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o187e:
cmp byte [tape + r8], 0
jz c187e
sub r8, 2
and r8, 0xFFFF
jmp o187e
c187e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o187c
c187c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o187f:
cmp byte [tape + r8], 0
jz c187f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o187f
c187f:
add r8, 1
and r8, 0xFFFF
o1880:
cmp byte [tape + r8], 0
jz c1880
sub r8, 3
and r8, 0xFFFF
o1881:
cmp byte [tape + r8], 0
jz c1881
sub r8, 2
and r8, 0xFFFF
jmp o1881
c1881:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1882:
cmp byte [tape + r8], 0
jz c1882
add r8, 2
and r8, 0xFFFF
jmp o1882
c1882:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1880
c1880:
sub r8, 3
and r8, 0xFFFF
o1883:
cmp byte [tape + r8], 0
jz c1883
sub r8, 2
and r8, 0xFFFF
jmp o1883
c1883:
add r8, 1
and r8, 0xFFFF
o1884:
cmp byte [tape + r8], 0
jz c1884
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1884
c1884:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1885:
cmp byte [tape + r8], 0
jz c1885
add r8, 2
and r8, 0xFFFF
jmp o1885
c1885:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1886:
cmp byte [tape + r8], 0
jz c1886
sub r8, 2
and r8, 0xFFFF
jmp o1886
c1886:
add r8, 1
and r8, 0xFFFF
o1887:
cmp byte [tape + r8], 0
jz c1887
add r8, 1
and r8, 0xFFFF
o1888:
cmp byte [tape + r8], 0
jz c1888
add r8, 2
and r8, 0xFFFF
jmp o1888
c1888:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1889:
cmp byte [tape + r8], 0
jz c1889
sub r8, 2
and r8, 0xFFFF
jmp o1889
c1889:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1887
c1887:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o188a:
cmp byte [tape + r8], 0
jz c188a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o188a
c188a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o188b:
cmp byte [tape + r8], 0
jz c188b
sub r8, 2
and r8, 0xFFFF
jmp o188b
c188b:
add r8, 1
and r8, 0xFFFF
o188c:
cmp byte [tape + r8], 0
jz c188c
add r8, 1
and r8, 0xFFFF
o188d:
cmp byte [tape + r8], 0
jz c188d
add r8, 2
and r8, 0xFFFF
jmp o188d
c188d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o188e:
cmp byte [tape + r8], 0
jz c188e
sub r8, 2
and r8, 0xFFFF
jmp o188e
c188e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o188c
c188c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o188f:
cmp byte [tape + r8], 0
jz c188f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o188f
c188f:
add r8, 1
and r8, 0xFFFF
o1890:
cmp byte [tape + r8], 0
jz c1890
sub r8, 3
and r8, 0xFFFF
o1891:
cmp byte [tape + r8], 0
jz c1891
sub r8, 2
and r8, 0xFFFF
jmp o1891
c1891:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1892:
cmp byte [tape + r8], 0
jz c1892
add r8, 2
and r8, 0xFFFF
jmp o1892
c1892:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1890
c1890:
sub r8, 3
and r8, 0xFFFF
o1893:
cmp byte [tape + r8], 0
jz c1893
sub r8, 2
and r8, 0xFFFF
jmp o1893
c1893:
add r8, 1
and r8, 0xFFFF
o1894:
cmp byte [tape + r8], 0
jz c1894
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1894
c1894:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1895:
cmp byte [tape + r8], 0
jz c1895
add r8, 2
and r8, 0xFFFF
jmp o1895
c1895:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1896:
cmp byte [tape + r8], 0
jz c1896
sub r8, 2
and r8, 0xFFFF
jmp o1896
c1896:
add r8, 1
and r8, 0xFFFF
o1897:
cmp byte [tape + r8], 0
jz c1897
add r8, 1
and r8, 0xFFFF
o1898:
cmp byte [tape + r8], 0
jz c1898
add r8, 2
and r8, 0xFFFF
jmp o1898
c1898:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1899:
cmp byte [tape + r8], 0
jz c1899
sub r8, 2
and r8, 0xFFFF
jmp o1899
c1899:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1897
c1897:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o189a:
cmp byte [tape + r8], 0
jz c189a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o189a
c189a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o189b:
cmp byte [tape + r8], 0
jz c189b
sub r8, 2
and r8, 0xFFFF
jmp o189b
c189b:
add r8, 1
and r8, 0xFFFF
o189c:
cmp byte [tape + r8], 0
jz c189c
add r8, 1
and r8, 0xFFFF
o189d:
cmp byte [tape + r8], 0
jz c189d
add r8, 2
and r8, 0xFFFF
jmp o189d
c189d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o189e:
cmp byte [tape + r8], 0
jz c189e
sub r8, 2
and r8, 0xFFFF
jmp o189e
c189e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o189c
c189c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o189f:
cmp byte [tape + r8], 0
jz c189f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o189f
c189f:
add r8, 1
and r8, 0xFFFF
o18a0:
cmp byte [tape + r8], 0
jz c18a0
sub r8, 3
and r8, 0xFFFF
o18a1:
cmp byte [tape + r8], 0
jz c18a1
sub r8, 2
and r8, 0xFFFF
jmp o18a1
c18a1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o18a2:
cmp byte [tape + r8], 0
jz c18a2
add r8, 2
and r8, 0xFFFF
jmp o18a2
c18a2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18a0
c18a0:
sub r8, 3
and r8, 0xFFFF
o18a3:
cmp byte [tape + r8], 0
jz c18a3
sub r8, 2
and r8, 0xFFFF
jmp o18a3
c18a3:
add r8, 1
and r8, 0xFFFF
o18a4:
cmp byte [tape + r8], 0
jz c18a4
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18a4
c18a4:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o18a5:
cmp byte [tape + r8], 0
jz c18a5
add r8, 2
and r8, 0xFFFF
jmp o18a5
c18a5:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18a6:
cmp byte [tape + r8], 0
jz c18a6
sub r8, 2
and r8, 0xFFFF
jmp o18a6
c18a6:
add r8, 1
and r8, 0xFFFF
o18a7:
cmp byte [tape + r8], 0
jz c18a7
add r8, 1
and r8, 0xFFFF
o18a8:
cmp byte [tape + r8], 0
jz c18a8
add r8, 2
and r8, 0xFFFF
jmp o18a8
c18a8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18a9:
cmp byte [tape + r8], 0
jz c18a9
sub r8, 2
and r8, 0xFFFF
jmp o18a9
c18a9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18a7
c18a7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o18aa:
cmp byte [tape + r8], 0
jz c18aa
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18aa
c18aa:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18ab:
cmp byte [tape + r8], 0
jz c18ab
sub r8, 2
and r8, 0xFFFF
jmp o18ab
c18ab:
add r8, 1
and r8, 0xFFFF
o18ac:
cmp byte [tape + r8], 0
jz c18ac
add r8, 1
and r8, 0xFFFF
o18ad:
cmp byte [tape + r8], 0
jz c18ad
add r8, 2
and r8, 0xFFFF
jmp o18ad
c18ad:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18ae:
cmp byte [tape + r8], 0
jz c18ae
sub r8, 2
and r8, 0xFFFF
jmp o18ae
c18ae:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18ac
c18ac:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o18af:
cmp byte [tape + r8], 0
jz c18af
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18af
c18af:
add r8, 1
and r8, 0xFFFF
o18b0:
cmp byte [tape + r8], 0
jz c18b0
sub r8, 3
and r8, 0xFFFF
o18b1:
cmp byte [tape + r8], 0
jz c18b1
sub r8, 2
and r8, 0xFFFF
jmp o18b1
c18b1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o18b2:
cmp byte [tape + r8], 0
jz c18b2
add r8, 2
and r8, 0xFFFF
jmp o18b2
c18b2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18b0
c18b0:
sub r8, 3
and r8, 0xFFFF
o18b3:
cmp byte [tape + r8], 0
jz c18b3
sub r8, 2
and r8, 0xFFFF
jmp o18b3
c18b3:
add r8, 1
and r8, 0xFFFF
o18b4:
cmp byte [tape + r8], 0
jz c18b4
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18b4
c18b4:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o18b5:
cmp byte [tape + r8], 0
jz c18b5
add r8, 2
and r8, 0xFFFF
jmp o18b5
c18b5:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18b6:
cmp byte [tape + r8], 0
jz c18b6
sub r8, 2
and r8, 0xFFFF
jmp o18b6
c18b6:
add r8, 1
and r8, 0xFFFF
o18b7:
cmp byte [tape + r8], 0
jz c18b7
add r8, 1
and r8, 0xFFFF
o18b8:
cmp byte [tape + r8], 0
jz c18b8
add r8, 2
and r8, 0xFFFF
jmp o18b8
c18b8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18b9:
cmp byte [tape + r8], 0
jz c18b9
sub r8, 2
and r8, 0xFFFF
jmp o18b9
c18b9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18b7
c18b7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o18ba:
cmp byte [tape + r8], 0
jz c18ba
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18ba
c18ba:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18bb:
cmp byte [tape + r8], 0
jz c18bb
sub r8, 2
and r8, 0xFFFF
jmp o18bb
c18bb:
add r8, 1
and r8, 0xFFFF
o18bc:
cmp byte [tape + r8], 0
jz c18bc
add r8, 1
and r8, 0xFFFF
o18bd:
cmp byte [tape + r8], 0
jz c18bd
add r8, 2
and r8, 0xFFFF
jmp o18bd
c18bd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18be:
cmp byte [tape + r8], 0
jz c18be
sub r8, 2
and r8, 0xFFFF
jmp o18be
c18be:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18bc
c18bc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 557
and r8, 0xFFFF
call z
sub r8, 557
and r8, 0xFFFF
push 1
push 557
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o18bf:
cmp byte [tape + r8], 0
jz c18bf
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18bf
c18bf:
add r8, 1
and r8, 0xFFFF
o18c0:
cmp byte [tape + r8], 0
jz c18c0
sub r8, 3
and r8, 0xFFFF
o18c1:
cmp byte [tape + r8], 0
jz c18c1
sub r8, 2
and r8, 0xFFFF
jmp o18c1
c18c1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o18c2:
cmp byte [tape + r8], 0
jz c18c2
add r8, 2
and r8, 0xFFFF
jmp o18c2
c18c2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18c0
c18c0:
sub r8, 3
and r8, 0xFFFF
o18c3:
cmp byte [tape + r8], 0
jz c18c3
sub r8, 2
and r8, 0xFFFF
jmp o18c3
c18c3:
add r8, 1
and r8, 0xFFFF
o18c4:
cmp byte [tape + r8], 0
jz c18c4
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18c4
c18c4:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o18c5:
cmp byte [tape + r8], 0
jz c18c5
add r8, 2
and r8, 0xFFFF
jmp o18c5
c18c5:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18c6:
cmp byte [tape + r8], 0
jz c18c6
sub r8, 2
and r8, 0xFFFF
jmp o18c6
c18c6:
add r8, 1
and r8, 0xFFFF
o18c7:
cmp byte [tape + r8], 0
jz c18c7
add r8, 1
and r8, 0xFFFF
o18c8:
cmp byte [tape + r8], 0
jz c18c8
add r8, 2
and r8, 0xFFFF
jmp o18c8
c18c8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18c9:
cmp byte [tape + r8], 0
jz c18c9
sub r8, 2
and r8, 0xFFFF
jmp o18c9
c18c9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18c7
c18c7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 519
and r8, 0xFFFF
call z
sub r8, 556
and r8, 0xFFFF
push 1
push 556
call m
add r8, 557
and r8, 0xFFFF
o18ca:
cmp byte [tape + r8], 0
jz c18ca
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18ca
c18ca:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18cb:
cmp byte [tape + r8], 0
jz c18cb
sub r8, 2
and r8, 0xFFFF
jmp o18cb
c18cb:
add r8, 1
and r8, 0xFFFF
o18cc:
cmp byte [tape + r8], 0
jz c18cc
add r8, 1
and r8, 0xFFFF
o18cd:
cmp byte [tape + r8], 0
jz c18cd
add r8, 2
and r8, 0xFFFF
jmp o18cd
c18cd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18ce:
cmp byte [tape + r8], 0
jz c18ce
sub r8, 2
and r8, 0xFFFF
jmp o18ce
c18ce:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18cc
c18cc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 564
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o18cf:
cmp byte [tape + r8], 0
jz c18cf
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18cf
c18cf:
add r8, 1
and r8, 0xFFFF
o18d0:
cmp byte [tape + r8], 0
jz c18d0
sub r8, 3
and r8, 0xFFFF
o18d1:
cmp byte [tape + r8], 0
jz c18d1
sub r8, 2
and r8, 0xFFFF
jmp o18d1
c18d1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o18d2:
cmp byte [tape + r8], 0
jz c18d2
add r8, 2
and r8, 0xFFFF
jmp o18d2
c18d2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18d0
c18d0:
sub r8, 3
and r8, 0xFFFF
o18d3:
cmp byte [tape + r8], 0
jz c18d3
sub r8, 2
and r8, 0xFFFF
jmp o18d3
c18d3:
add r8, 1
and r8, 0xFFFF
o18d4:
cmp byte [tape + r8], 0
jz c18d4
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18d4
c18d4:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o18d5:
cmp byte [tape + r8], 0
jz c18d5
add r8, 2
and r8, 0xFFFF
jmp o18d5
c18d5:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18d6:
cmp byte [tape + r8], 0
jz c18d6
sub r8, 2
and r8, 0xFFFF
jmp o18d6
c18d6:
add r8, 1
and r8, 0xFFFF
o18d7:
cmp byte [tape + r8], 0
jz c18d7
add r8, 1
and r8, 0xFFFF
o18d8:
cmp byte [tape + r8], 0
jz c18d8
add r8, 2
and r8, 0xFFFF
jmp o18d8
c18d8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18d9:
cmp byte [tape + r8], 0
jz c18d9
sub r8, 2
and r8, 0xFFFF
jmp o18d9
c18d9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18d7
c18d7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o18da:
cmp byte [tape + r8], 0
jz c18da
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18da
c18da:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18db:
cmp byte [tape + r8], 0
jz c18db
sub r8, 2
and r8, 0xFFFF
jmp o18db
c18db:
add r8, 1
and r8, 0xFFFF
o18dc:
cmp byte [tape + r8], 0
jz c18dc
add r8, 1
and r8, 0xFFFF
o18dd:
cmp byte [tape + r8], 0
jz c18dd
add r8, 2
and r8, 0xFFFF
jmp o18dd
c18dd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18de:
cmp byte [tape + r8], 0
jz c18de
sub r8, 2
and r8, 0xFFFF
jmp o18de
c18de:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18dc
c18dc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o18df:
cmp byte [tape + r8], 0
jz c18df
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18df
c18df:
add r8, 1
and r8, 0xFFFF
o18e0:
cmp byte [tape + r8], 0
jz c18e0
sub r8, 3
and r8, 0xFFFF
o18e1:
cmp byte [tape + r8], 0
jz c18e1
sub r8, 2
and r8, 0xFFFF
jmp o18e1
c18e1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o18e2:
cmp byte [tape + r8], 0
jz c18e2
add r8, 2
and r8, 0xFFFF
jmp o18e2
c18e2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18e0
c18e0:
sub r8, 3
and r8, 0xFFFF
o18e3:
cmp byte [tape + r8], 0
jz c18e3
sub r8, 2
and r8, 0xFFFF
jmp o18e3
c18e3:
add r8, 1
and r8, 0xFFFF
o18e4:
cmp byte [tape + r8], 0
jz c18e4
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18e4
c18e4:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o18e5:
cmp byte [tape + r8], 0
jz c18e5
add r8, 2
and r8, 0xFFFF
jmp o18e5
c18e5:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18e6:
cmp byte [tape + r8], 0
jz c18e6
sub r8, 2
and r8, 0xFFFF
jmp o18e6
c18e6:
add r8, 1
and r8, 0xFFFF
o18e7:
cmp byte [tape + r8], 0
jz c18e7
add r8, 1
and r8, 0xFFFF
o18e8:
cmp byte [tape + r8], 0
jz c18e8
add r8, 2
and r8, 0xFFFF
jmp o18e8
c18e8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18e9:
cmp byte [tape + r8], 0
jz c18e9
sub r8, 2
and r8, 0xFFFF
jmp o18e9
c18e9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18e7
c18e7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o18ea:
cmp byte [tape + r8], 0
jz c18ea
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18ea
c18ea:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18eb:
cmp byte [tape + r8], 0
jz c18eb
sub r8, 2
and r8, 0xFFFF
jmp o18eb
c18eb:
add r8, 1
and r8, 0xFFFF
o18ec:
cmp byte [tape + r8], 0
jz c18ec
add r8, 1
and r8, 0xFFFF
o18ed:
cmp byte [tape + r8], 0
jz c18ed
add r8, 2
and r8, 0xFFFF
jmp o18ed
c18ed:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18ee:
cmp byte [tape + r8], 0
jz c18ee
sub r8, 2
and r8, 0xFFFF
jmp o18ee
c18ee:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18ec
c18ec:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 2
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o18ef:
cmp byte [tape + r8], 0
jz c18ef
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18ef
c18ef:
add r8, 1
and r8, 0xFFFF
o18f0:
cmp byte [tape + r8], 0
jz c18f0
sub r8, 3
and r8, 0xFFFF
o18f1:
cmp byte [tape + r8], 0
jz c18f1
sub r8, 2
and r8, 0xFFFF
jmp o18f1
c18f1:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o18f2:
cmp byte [tape + r8], 0
jz c18f2
add r8, 2
and r8, 0xFFFF
jmp o18f2
c18f2:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18f0
c18f0:
sub r8, 3
and r8, 0xFFFF
o18f3:
cmp byte [tape + r8], 0
jz c18f3
sub r8, 2
and r8, 0xFFFF
jmp o18f3
c18f3:
add r8, 1
and r8, 0xFFFF
o18f4:
cmp byte [tape + r8], 0
jz c18f4
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18f4
c18f4:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o18f5:
cmp byte [tape + r8], 0
jz c18f5
add r8, 2
and r8, 0xFFFF
jmp o18f5
c18f5:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18f6:
cmp byte [tape + r8], 0
jz c18f6
sub r8, 2
and r8, 0xFFFF
jmp o18f6
c18f6:
add r8, 1
and r8, 0xFFFF
o18f7:
cmp byte [tape + r8], 0
jz c18f7
add r8, 1
and r8, 0xFFFF
o18f8:
cmp byte [tape + r8], 0
jz c18f8
add r8, 2
and r8, 0xFFFF
jmp o18f8
c18f8:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18f9:
cmp byte [tape + r8], 0
jz c18f9
sub r8, 2
and r8, 0xFFFF
jmp o18f9
c18f9:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18f7
c18f7:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o18fa:
cmp byte [tape + r8], 0
jz c18fa
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18fa
c18fa:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o18fb:
cmp byte [tape + r8], 0
jz c18fb
sub r8, 2
and r8, 0xFFFF
jmp o18fb
c18fb:
add r8, 1
and r8, 0xFFFF
o18fc:
cmp byte [tape + r8], 0
jz c18fc
add r8, 1
and r8, 0xFFFF
o18fd:
cmp byte [tape + r8], 0
jz c18fd
add r8, 2
and r8, 0xFFFF
jmp o18fd
c18fd:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o18fe:
cmp byte [tape + r8], 0
jz c18fe
sub r8, 2
and r8, 0xFFFF
jmp o18fe
c18fe:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o18fc
c18fc:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o18ff:
cmp byte [tape + r8], 0
jz c18ff
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o18ff
c18ff:
add r8, 1
and r8, 0xFFFF
o1900:
cmp byte [tape + r8], 0
jz c1900
sub r8, 3
and r8, 0xFFFF
o1901:
cmp byte [tape + r8], 0
jz c1901
sub r8, 2
and r8, 0xFFFF
jmp o1901
c1901:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1902:
cmp byte [tape + r8], 0
jz c1902
add r8, 2
and r8, 0xFFFF
jmp o1902
c1902:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1900
c1900:
sub r8, 3
and r8, 0xFFFF
o1903:
cmp byte [tape + r8], 0
jz c1903
sub r8, 2
and r8, 0xFFFF
jmp o1903
c1903:
add r8, 1
and r8, 0xFFFF
o1904:
cmp byte [tape + r8], 0
jz c1904
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1904
c1904:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o1905:
cmp byte [tape + r8], 0
jz c1905
add r8, 2
and r8, 0xFFFF
jmp o1905
c1905:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1906:
cmp byte [tape + r8], 0
jz c1906
sub r8, 2
and r8, 0xFFFF
jmp o1906
c1906:
add r8, 1
and r8, 0xFFFF
o1907:
cmp byte [tape + r8], 0
jz c1907
add r8, 1
and r8, 0xFFFF
o1908:
cmp byte [tape + r8], 0
jz c1908
add r8, 2
and r8, 0xFFFF
jmp o1908
c1908:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1909:
cmp byte [tape + r8], 0
jz c1909
sub r8, 2
and r8, 0xFFFF
jmp o1909
c1909:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1907
c1907:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o190a:
cmp byte [tape + r8], 0
jz c190a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o190a
c190a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o190b:
cmp byte [tape + r8], 0
jz c190b
sub r8, 2
and r8, 0xFFFF
jmp o190b
c190b:
add r8, 1
and r8, 0xFFFF
o190c:
cmp byte [tape + r8], 0
jz c190c
add r8, 1
and r8, 0xFFFF
o190d:
cmp byte [tape + r8], 0
jz c190d
add r8, 2
and r8, 0xFFFF
jmp o190d
c190d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o190e:
cmp byte [tape + r8], 0
jz c190e
sub r8, 2
and r8, 0xFFFF
jmp o190e
c190e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o190c
c190c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 4
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o190f:
cmp byte [tape + r8], 0
jz c190f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o190f
c190f:
add r8, 1
and r8, 0xFFFF
o1910:
cmp byte [tape + r8], 0
jz c1910
sub r8, 3
and r8, 0xFFFF
o1911:
cmp byte [tape + r8], 0
jz c1911
sub r8, 2
and r8, 0xFFFF
jmp o1911
c1911:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1912:
cmp byte [tape + r8], 0
jz c1912
add r8, 2
and r8, 0xFFFF
jmp o1912
c1912:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1910
c1910:
sub r8, 3
and r8, 0xFFFF
o1913:
cmp byte [tape + r8], 0
jz c1913
sub r8, 2
and r8, 0xFFFF
jmp o1913
c1913:
add r8, 1
and r8, 0xFFFF
o1914:
cmp byte [tape + r8], 0
jz c1914
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1914
c1914:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o1915:
cmp byte [tape + r8], 0
jz c1915
add r8, 2
and r8, 0xFFFF
jmp o1915
c1915:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1916:
cmp byte [tape + r8], 0
jz c1916
sub r8, 2
and r8, 0xFFFF
jmp o1916
c1916:
add r8, 1
and r8, 0xFFFF
o1917:
cmp byte [tape + r8], 0
jz c1917
add r8, 1
and r8, 0xFFFF
o1918:
cmp byte [tape + r8], 0
jz c1918
add r8, 2
and r8, 0xFFFF
jmp o1918
c1918:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1919:
cmp byte [tape + r8], 0
jz c1919
sub r8, 2
and r8, 0xFFFF
jmp o1919
c1919:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1917
c1917:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o191a:
cmp byte [tape + r8], 0
jz c191a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o191a
c191a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o191b:
cmp byte [tape + r8], 0
jz c191b
sub r8, 2
and r8, 0xFFFF
jmp o191b
c191b:
add r8, 1
and r8, 0xFFFF
o191c:
cmp byte [tape + r8], 0
jz c191c
add r8, 1
and r8, 0xFFFF
o191d:
cmp byte [tape + r8], 0
jz c191d
add r8, 2
and r8, 0xFFFF
jmp o191d
c191d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o191e:
cmp byte [tape + r8], 0
jz c191e
sub r8, 2
and r8, 0xFFFF
jmp o191e
c191e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o191c
c191c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 5
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o191f:
cmp byte [tape + r8], 0
jz c191f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o191f
c191f:
add r8, 1
and r8, 0xFFFF
o1920:
cmp byte [tape + r8], 0
jz c1920
sub r8, 3
and r8, 0xFFFF
o1921:
cmp byte [tape + r8], 0
jz c1921
sub r8, 2
and r8, 0xFFFF
jmp o1921
c1921:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1922:
cmp byte [tape + r8], 0
jz c1922
add r8, 2
and r8, 0xFFFF
jmp o1922
c1922:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1920
c1920:
sub r8, 3
and r8, 0xFFFF
o1923:
cmp byte [tape + r8], 0
jz c1923
sub r8, 2
and r8, 0xFFFF
jmp o1923
c1923:
add r8, 1
and r8, 0xFFFF
o1924:
cmp byte [tape + r8], 0
jz c1924
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1924
c1924:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o1925:
cmp byte [tape + r8], 0
jz c1925
add r8, 2
and r8, 0xFFFF
jmp o1925
c1925:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1926:
cmp byte [tape + r8], 0
jz c1926
sub r8, 2
and r8, 0xFFFF
jmp o1926
c1926:
add r8, 1
and r8, 0xFFFF
o1927:
cmp byte [tape + r8], 0
jz c1927
add r8, 1
and r8, 0xFFFF
o1928:
cmp byte [tape + r8], 0
jz c1928
add r8, 2
and r8, 0xFFFF
jmp o1928
c1928:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1929:
cmp byte [tape + r8], 0
jz c1929
sub r8, 2
and r8, 0xFFFF
jmp o1929
c1929:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1927
c1927:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o192a:
cmp byte [tape + r8], 0
jz c192a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o192a
c192a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o192b:
cmp byte [tape + r8], 0
jz c192b
sub r8, 2
and r8, 0xFFFF
jmp o192b
c192b:
add r8, 1
and r8, 0xFFFF
o192c:
cmp byte [tape + r8], 0
jz c192c
add r8, 1
and r8, 0xFFFF
o192d:
cmp byte [tape + r8], 0
jz c192d
add r8, 2
and r8, 0xFFFF
jmp o192d
c192d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o192e:
cmp byte [tape + r8], 0
jz c192e
sub r8, 2
and r8, 0xFFFF
jmp o192e
c192e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o192c
c192c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o192f:
cmp byte [tape + r8], 0
jz c192f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o192f
c192f:
add r8, 1
and r8, 0xFFFF
o1930:
cmp byte [tape + r8], 0
jz c1930
sub r8, 3
and r8, 0xFFFF
o1931:
cmp byte [tape + r8], 0
jz c1931
sub r8, 2
and r8, 0xFFFF
jmp o1931
c1931:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1932:
cmp byte [tape + r8], 0
jz c1932
add r8, 2
and r8, 0xFFFF
jmp o1932
c1932:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1930
c1930:
sub r8, 3
and r8, 0xFFFF
o1933:
cmp byte [tape + r8], 0
jz c1933
sub r8, 2
and r8, 0xFFFF
jmp o1933
c1933:
add r8, 1
and r8, 0xFFFF
o1934:
cmp byte [tape + r8], 0
jz c1934
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1934
c1934:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o1935:
cmp byte [tape + r8], 0
jz c1935
add r8, 2
and r8, 0xFFFF
jmp o1935
c1935:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1936:
cmp byte [tape + r8], 0
jz c1936
sub r8, 2
and r8, 0xFFFF
jmp o1936
c1936:
add r8, 1
and r8, 0xFFFF
o1937:
cmp byte [tape + r8], 0
jz c1937
add r8, 1
and r8, 0xFFFF
o1938:
cmp byte [tape + r8], 0
jz c1938
add r8, 2
and r8, 0xFFFF
jmp o1938
c1938:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1939:
cmp byte [tape + r8], 0
jz c1939
sub r8, 2
and r8, 0xFFFF
jmp o1939
c1939:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1937
c1937:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o193a:
cmp byte [tape + r8], 0
jz c193a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o193a
c193a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o193b:
cmp byte [tape + r8], 0
jz c193b
sub r8, 2
and r8, 0xFFFF
jmp o193b
c193b:
add r8, 1
and r8, 0xFFFF
o193c:
cmp byte [tape + r8], 0
jz c193c
add r8, 1
and r8, 0xFFFF
o193d:
cmp byte [tape + r8], 0
jz c193d
add r8, 2
and r8, 0xFFFF
jmp o193d
c193d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o193e:
cmp byte [tape + r8], 0
jz c193e
sub r8, 2
and r8, 0xFFFF
jmp o193e
c193e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o193c
c193c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o193f:
cmp byte [tape + r8], 0
jz c193f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o193f
c193f:
add r8, 1
and r8, 0xFFFF
o1940:
cmp byte [tape + r8], 0
jz c1940
sub r8, 3
and r8, 0xFFFF
o1941:
cmp byte [tape + r8], 0
jz c1941
sub r8, 2
and r8, 0xFFFF
jmp o1941
c1941:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1942:
cmp byte [tape + r8], 0
jz c1942
add r8, 2
and r8, 0xFFFF
jmp o1942
c1942:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1940
c1940:
sub r8, 3
and r8, 0xFFFF
o1943:
cmp byte [tape + r8], 0
jz c1943
sub r8, 2
and r8, 0xFFFF
jmp o1943
c1943:
add r8, 1
and r8, 0xFFFF
o1944:
cmp byte [tape + r8], 0
jz c1944
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1944
c1944:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o1945:
cmp byte [tape + r8], 0
jz c1945
add r8, 2
and r8, 0xFFFF
jmp o1945
c1945:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1946:
cmp byte [tape + r8], 0
jz c1946
sub r8, 2
and r8, 0xFFFF
jmp o1946
c1946:
add r8, 1
and r8, 0xFFFF
o1947:
cmp byte [tape + r8], 0
jz c1947
add r8, 1
and r8, 0xFFFF
o1948:
cmp byte [tape + r8], 0
jz c1948
add r8, 2
and r8, 0xFFFF
jmp o1948
c1948:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1949:
cmp byte [tape + r8], 0
jz c1949
sub r8, 2
and r8, 0xFFFF
jmp o1949
c1949:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1947
c1947:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o194a:
cmp byte [tape + r8], 0
jz c194a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o194a
c194a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o194b:
cmp byte [tape + r8], 0
jz c194b
sub r8, 2
and r8, 0xFFFF
jmp o194b
c194b:
add r8, 1
and r8, 0xFFFF
o194c:
cmp byte [tape + r8], 0
jz c194c
add r8, 1
and r8, 0xFFFF
o194d:
cmp byte [tape + r8], 0
jz c194d
add r8, 2
and r8, 0xFFFF
jmp o194d
c194d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o194e:
cmp byte [tape + r8], 0
jz c194e
sub r8, 2
and r8, 0xFFFF
jmp o194e
c194e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o194c
c194c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o194f:
cmp byte [tape + r8], 0
jz c194f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o194f
c194f:
add r8, 1
and r8, 0xFFFF
o1950:
cmp byte [tape + r8], 0
jz c1950
sub r8, 3
and r8, 0xFFFF
o1951:
cmp byte [tape + r8], 0
jz c1951
sub r8, 2
and r8, 0xFFFF
jmp o1951
c1951:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1952:
cmp byte [tape + r8], 0
jz c1952
add r8, 2
and r8, 0xFFFF
jmp o1952
c1952:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1950
c1950:
sub r8, 3
and r8, 0xFFFF
o1953:
cmp byte [tape + r8], 0
jz c1953
sub r8, 2
and r8, 0xFFFF
jmp o1953
c1953:
add r8, 1
and r8, 0xFFFF
o1954:
cmp byte [tape + r8], 0
jz c1954
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1954
c1954:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o1955:
cmp byte [tape + r8], 0
jz c1955
add r8, 2
and r8, 0xFFFF
jmp o1955
c1955:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1956:
cmp byte [tape + r8], 0
jz c1956
sub r8, 2
and r8, 0xFFFF
jmp o1956
c1956:
add r8, 1
and r8, 0xFFFF
o1957:
cmp byte [tape + r8], 0
jz c1957
add r8, 1
and r8, 0xFFFF
o1958:
cmp byte [tape + r8], 0
jz c1958
add r8, 2
and r8, 0xFFFF
jmp o1958
c1958:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1959:
cmp byte [tape + r8], 0
jz c1959
sub r8, 2
and r8, 0xFFFF
jmp o1959
c1959:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1957
c1957:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o195a:
cmp byte [tape + r8], 0
jz c195a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o195a
c195a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o195b:
cmp byte [tape + r8], 0
jz c195b
sub r8, 2
and r8, 0xFFFF
jmp o195b
c195b:
add r8, 1
and r8, 0xFFFF
o195c:
cmp byte [tape + r8], 0
jz c195c
add r8, 1
and r8, 0xFFFF
o195d:
cmp byte [tape + r8], 0
jz c195d
add r8, 2
and r8, 0xFFFF
jmp o195d
c195d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o195e:
cmp byte [tape + r8], 0
jz c195e
sub r8, 2
and r8, 0xFFFF
jmp o195e
c195e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o195c
c195c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 580
and r8, 0xFFFF
call z
sub r8, 580
and r8, 0xFFFF
push 1
push 580
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 83
and r8, 0xFFFF
call z
sub r8, 83
and r8, 0xFFFF
push 1
push 83
call m
add r8, 83
and r8, 0xFFFF
o195f:
cmp byte [tape + r8], 0
jz c195f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o195f
c195f:
add r8, 1
and r8, 0xFFFF
o1960:
cmp byte [tape + r8], 0
jz c1960
sub r8, 3
and r8, 0xFFFF
o1961:
cmp byte [tape + r8], 0
jz c1961
sub r8, 2
and r8, 0xFFFF
jmp o1961
c1961:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1962:
cmp byte [tape + r8], 0
jz c1962
add r8, 2
and r8, 0xFFFF
jmp o1962
c1962:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1960
c1960:
sub r8, 3
and r8, 0xFFFF
o1963:
cmp byte [tape + r8], 0
jz c1963
sub r8, 2
and r8, 0xFFFF
jmp o1963
c1963:
add r8, 1
and r8, 0xFFFF
o1964:
cmp byte [tape + r8], 0
jz c1964
sub r8, 82
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 89
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1964
c1964:
sub r8, 89
and r8, 0xFFFF
push 1
push 89
call m
add r8, 90
and r8, 0xFFFF
o1965:
cmp byte [tape + r8], 0
jz c1965
add r8, 2
and r8, 0xFFFF
jmp o1965
c1965:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1966:
cmp byte [tape + r8], 0
jz c1966
sub r8, 2
and r8, 0xFFFF
jmp o1966
c1966:
add r8, 1
and r8, 0xFFFF
o1967:
cmp byte [tape + r8], 0
jz c1967
add r8, 1
and r8, 0xFFFF
o1968:
cmp byte [tape + r8], 0
jz c1968
add r8, 2
and r8, 0xFFFF
jmp o1968
c1968:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1969:
cmp byte [tape + r8], 0
jz c1969
sub r8, 2
and r8, 0xFFFF
jmp o1969
c1969:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1967
c1967:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 496
and r8, 0xFFFF
call z
sub r8, 579
and r8, 0xFFFF
push 1
push 579
call m
add r8, 580
and r8, 0xFFFF
o196a:
cmp byte [tape + r8], 0
jz c196a
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o196a
c196a:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o196b:
cmp byte [tape + r8], 0
jz c196b
sub r8, 2
and r8, 0xFFFF
jmp o196b
c196b:
add r8, 1
and r8, 0xFFFF
o196c:
cmp byte [tape + r8], 0
jz c196c
add r8, 1
and r8, 0xFFFF
o196d:
cmp byte [tape + r8], 0
jz c196d
add r8, 2
and r8, 0xFFFF
jmp o196d
c196d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o196e:
cmp byte [tape + r8], 0
jz c196e
sub r8, 2
and r8, 0xFFFF
jmp o196e
c196e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o196c
c196c:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 587
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o180d
c180d:
add r8, 610
and r8, 0xFFFF
push 1
push 611
call ms
sub r8, 611
and r8, 0xFFFF
o196f:
cmp byte [tape + r8], 0
jz c196f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o196f
c196f:
add r8, 1
and r8, 0xFFFF
o1970:
cmp byte [tape + r8], 0
jz c1970
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1971:
cmp byte [tape + r8], 0
jz c1971
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 35
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1971
c1971:
sub r8, 35
and r8, 0xFFFF
push 1
push 35
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1972:
cmp byte [tape + r8], 0
jz c1972
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1972
c1972:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1973:
cmp byte [tape + r8], 0
jz c1973
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1973
c1973:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1974:
cmp byte [tape + r8], 0
jz c1974
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1974
c1974:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1975:
cmp byte [tape + r8], 0
jz c1975
add r8, 603
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 612
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1975
c1975:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1970
c1970:
sub r8, 1
and r8, 0xFFFF
o1976:
cmp byte [tape + r8], 0
jz c1976
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1976
c1976:
add r8, 1
and r8, 0xFFFF
o1977:
cmp byte [tape + r8], 0
jz c1977
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 6
add r8, 37
and r8, 0xFFFF
call z
sub r8, 37
and r8, 0xFFFF
push 1
push 37
call m
add r8, 37
and r8, 0xFFFF
o1978:
cmp byte [tape + r8], 0
jz c1978
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1978
c1978:
add r8, 1
and r8, 0xFFFF
o1979:
cmp byte [tape + r8], 0
jz c1979
sub r8, 3
and r8, 0xFFFF
o197a:
cmp byte [tape + r8], 0
jz c197a
sub r8, 2
and r8, 0xFFFF
jmp o197a
c197a:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o197b:
cmp byte [tape + r8], 0
jz c197b
add r8, 2
and r8, 0xFFFF
jmp o197b
c197b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1979
c1979:
sub r8, 3
and r8, 0xFFFF
o197c:
cmp byte [tape + r8], 0
jz c197c
sub r8, 2
and r8, 0xFFFF
jmp o197c
c197c:
add r8, 1
and r8, 0xFFFF
o197d:
cmp byte [tape + r8], 0
jz c197d
sub r8, 36
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o197d
c197d:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o197e:
cmp byte [tape + r8], 0
jz c197e
add r8, 2
and r8, 0xFFFF
jmp o197e
c197e:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o197f:
cmp byte [tape + r8], 0
jz c197f
sub r8, 2
and r8, 0xFFFF
jmp o197f
c197f:
add r8, 1
and r8, 0xFFFF
o1980:
cmp byte [tape + r8], 0
jz c1980
add r8, 1
and r8, 0xFFFF
o1981:
cmp byte [tape + r8], 0
jz c1981
add r8, 2
and r8, 0xFFFF
jmp o1981
c1981:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1982:
cmp byte [tape + r8], 0
jz c1982
sub r8, 2
and r8, 0xFFFF
jmp o1982
c1982:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1980
c1980:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 44
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 7
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o1983:
cmp byte [tape + r8], 0
jz c1983
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o1983
c1983:
add r8, 1
and r8, 0xFFFF
o1984:
cmp byte [tape + r8], 0
jz c1984
sub r8, 3
and r8, 0xFFFF
o1985:
cmp byte [tape + r8], 0
jz c1985
sub r8, 2
and r8, 0xFFFF
jmp o1985
c1985:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1986:
cmp byte [tape + r8], 0
jz c1986
add r8, 2
and r8, 0xFFFF
jmp o1986
c1986:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1984
c1984:
sub r8, 3
and r8, 0xFFFF
o1987:
cmp byte [tape + r8], 0
jz c1987
sub r8, 2
and r8, 0xFFFF
jmp o1987
c1987:
add r8, 1
and r8, 0xFFFF
o1988:
cmp byte [tape + r8], 0
jz c1988
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1988
c1988:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1989:
cmp byte [tape + r8], 0
jz c1989
add r8, 2
and r8, 0xFFFF
jmp o1989
c1989:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o198a:
cmp byte [tape + r8], 0
jz c198a
sub r8, 2
and r8, 0xFFFF
jmp o198a
c198a:
add r8, 1
and r8, 0xFFFF
o198b:
cmp byte [tape + r8], 0
jz c198b
add r8, 1
and r8, 0xFFFF
o198c:
cmp byte [tape + r8], 0
jz c198c
add r8, 2
and r8, 0xFFFF
jmp o198c
c198c:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o198d:
cmp byte [tape + r8], 0
jz c198d
sub r8, 2
and r8, 0xFFFF
jmp o198d
c198d:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o198b
c198b:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
o198e:
cmp byte [tape + r8], 0
jz c198e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o198e
c198e:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o198f:
cmp byte [tape + r8], 0
jz c198f
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o198f
c198f:
add r8, 1
and r8, 0xFFFF
o1990:
cmp byte [tape + r8], 0
jz c1990
sub r8, 3
and r8, 0xFFFF
o1991:
cmp byte [tape + r8], 0
jz c1991
sub r8, 2
and r8, 0xFFFF
jmp o1991
c1991:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1992:
cmp byte [tape + r8], 0
jz c1992
add r8, 2
and r8, 0xFFFF
jmp o1992
c1992:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1990
c1990:
sub r8, 3
and r8, 0xFFFF
o1993:
cmp byte [tape + r8], 0
jz c1993
sub r8, 2
and r8, 0xFFFF
jmp o1993
c1993:
add r8, 1
and r8, 0xFFFF
o1994:
cmp byte [tape + r8], 0
jz c1994
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1994
c1994:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o1995:
cmp byte [tape + r8], 0
jz c1995
add r8, 2
and r8, 0xFFFF
jmp o1995
c1995:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o1996:
cmp byte [tape + r8], 0
jz c1996
sub r8, 2
and r8, 0xFFFF
jmp o1996
c1996:
add r8, 1
and r8, 0xFFFF
o1997:
cmp byte [tape + r8], 0
jz c1997
add r8, 1
and r8, 0xFFFF
o1998:
cmp byte [tape + r8], 0
jz c1998
add r8, 2
and r8, 0xFFFF
jmp o1998
c1998:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o1999:
cmp byte [tape + r8], 0
jz c1999
sub r8, 2
and r8, 0xFFFF
jmp o1999
c1999:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1997
c1997:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
o199a:
cmp byte [tape + r8], 0
jz c199a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o199a
c199a:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
add r8, 36
and r8, 0xFFFF
call z
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 36
and r8, 0xFFFF
o199b:
cmp byte [tape + r8], 0
jz c199b
add r8, 2
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
jmp o199b
c199b:
add r8, 1
and r8, 0xFFFF
o199c:
cmp byte [tape + r8], 0
jz c199c
sub r8, 3
and r8, 0xFFFF
o199d:
cmp byte [tape + r8], 0
jz c199d
sub r8, 2
and r8, 0xFFFF
jmp o199d
c199d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o199e:
cmp byte [tape + r8], 0
jz c199e
add r8, 2
and r8, 0xFFFF
jmp o199e
c199e:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o199c
c199c:
sub r8, 3
and r8, 0xFFFF
o199f:
cmp byte [tape + r8], 0
jz c199f
sub r8, 2
and r8, 0xFFFF
jmp o199f
c199f:
add r8, 1
and r8, 0xFFFF
o19a0:
cmp byte [tape + r8], 0
jz c19a0
sub r8, 35
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 43
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19a0
c19a0:
sub r8, 43
and r8, 0xFFFF
push 1
push 43
call m
add r8, 44
and r8, 0xFFFF
o19a1:
cmp byte [tape + r8], 0
jz c19a1
add r8, 2
and r8, 0xFFFF
jmp o19a1
c19a1:
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
o19a2:
cmp byte [tape + r8], 0
jz c19a2
sub r8, 2
and r8, 0xFFFF
jmp o19a2
c19a2:
add r8, 1
and r8, 0xFFFF
o19a3:
cmp byte [tape + r8], 0
jz c19a3
add r8, 1
and r8, 0xFFFF
o19a4:
cmp byte [tape + r8], 0
jz c19a4
add r8, 2
and r8, 0xFFFF
jmp o19a4
c19a4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
o19a5:
cmp byte [tape + r8], 0
jz c19a5
sub r8, 2
and r8, 0xFFFF
jmp o19a5
c19a5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19a3
c19a3:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 36
and r8, 0xFFFF
o19a6:
cmp byte [tape + r8], 0
jz c19a6
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19a6
c19a6:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 112
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
call z
add r8, 105
and r8, 0xFFFF
o19a7:
cmp byte [tape + r8], 0
jz c19a7
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19a7
c19a7:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o19a8:
cmp byte [tape + r8], 0
jz c19a8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19a8
c19a8:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o19a9:
cmp byte [tape + r8], 0
jz c19a9
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o19a9
c19a9:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o19aa:
cmp byte [tape + r8], 0
jz c19aa
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19aa
c19aa:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o19ab:
cmp byte [tape + r8], 0
jz c19ab
add r8, 604
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 613
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o19ab
c19ab:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1977
c1977:
sub r8, 1
and r8, 0xFFFF
o19ac:
cmp byte [tape + r8], 0
jz c19ac
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ac
c19ac:
add r8, 1
and r8, 0xFFFF
o19ad:
cmp byte [tape + r8], 0
jz c19ad
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o19ae:
cmp byte [tape + r8], 0
jz c19ae
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ae
c19ae:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 12
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
sub byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 12
and r8, 0xFFFF
call z
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 32
and r8, 0xFFFF
call z
sub r8, 32
and r8, 0xFFFF
push 1
push 32
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ad
c19ad:
add r8, 612
and r8, 0xFFFF
push 1
push 613
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 612
call ms
sub r8, 612
and r8, 0xFFFF
o19af:
cmp byte [tape + r8], 0
jz c19af
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19af
c19af:
add r8, 1
and r8, 0xFFFF
o19b0:
cmp byte [tape + r8], 0
jz c19b0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
o19b1:
cmp byte [tape + r8], 0
jz c19b1
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b1
c19b1:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o19b2:
cmp byte [tape + r8], 0
jz c19b2
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b2
c19b2:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o19b3:
cmp byte [tape + r8], 0
jz c19b3
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o19b3
c19b3:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o19b4:
cmp byte [tape + r8], 0
jz c19b4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b4
c19b4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o19b5:
cmp byte [tape + r8], 0
jz c19b5
add r8, 605
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 614
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o19b5
c19b5:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b0
c19b0:
sub r8, 1
and r8, 0xFFFF
o19b6:
cmp byte [tape + r8], 0
jz c19b6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b6
c19b6:
add r8, 1
and r8, 0xFFFF
o19b7:
cmp byte [tape + r8], 0
jz c19b7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o19b8:
cmp byte [tape + r8], 0
jz c19b8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b8
c19b8:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b7
c19b7:
add r8, 613
and r8, 0xFFFF
push 1
push 614
call ms
sub r8, 614
and r8, 0xFFFF
o19b9:
cmp byte [tape + r8], 0
jz c19b9
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19b9
c19b9:
add r8, 1
and r8, 0xFFFF
o19ba:
cmp byte [tape + r8], 0
jz c19ba
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
o19bb:
cmp byte [tape + r8], 0
jz c19bb
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19bb
c19bb:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o19bc:
cmp byte [tape + r8], 0
jz c19bc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19bc
c19bc:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o19bd:
cmp byte [tape + r8], 0
jz c19bd
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o19bd
c19bd:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o19be:
cmp byte [tape + r8], 0
jz c19be
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19be
c19be:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o19bf:
cmp byte [tape + r8], 0
jz c19bf
add r8, 606
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 615
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o19bf
c19bf:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ba
c19ba:
sub r8, 1
and r8, 0xFFFF
o19c0:
cmp byte [tape + r8], 0
jz c19c0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c0
c19c0:
add r8, 1
and r8, 0xFFFF
o19c1:
cmp byte [tape + r8], 0
jz c19c1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o19c2:
cmp byte [tape + r8], 0
jz c19c2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c2
c19c2:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c1
c19c1:
add r8, 614
and r8, 0xFFFF
push 1
push 615
call ms
sub r8, 615
and r8, 0xFFFF
o19c3:
cmp byte [tape + r8], 0
jz c19c3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c3
c19c3:
add r8, 1
and r8, 0xFFFF
o19c4:
cmp byte [tape + r8], 0
jz c19c4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 12
and r8, 0xFFFF
o19c5:
cmp byte [tape + r8], 0
jz c19c5
sub r8, 12
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 19
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c5
c19c5:
sub r8, 19
and r8, 0xFFFF
push 1
push 19
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o19c6:
cmp byte [tape + r8], 0
jz c19c6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c6
c19c6:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o19c7:
cmp byte [tape + r8], 0
jz c19c7
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o19c7
c19c7:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o19c8:
cmp byte [tape + r8], 0
jz c19c8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c8
c19c8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o19c9:
cmp byte [tape + r8], 0
jz c19c9
add r8, 607
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 616
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o19c9
c19c9:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19c4
c19c4:
sub r8, 1
and r8, 0xFFFF
o19ca:
cmp byte [tape + r8], 0
jz c19ca
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ca
c19ca:
add r8, 1
and r8, 0xFFFF
o19cb:
cmp byte [tape + r8], 0
jz c19cb
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 290
and r8, 0xFFFF
o19cc:
cmp byte [tape + r8], 0
jz c19cc
sub r8, 290
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 297
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19cc
c19cc:
sub r8, 297
and r8, 0xFFFF
push 1
push 297
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o19cd:
cmp byte [tape + r8], 0
jz c19cd
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19cd
c19cd:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o19ce:
cmp byte [tape + r8], 0
jz c19ce
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o19ce
c19ce:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o19cf:
cmp byte [tape + r8], 0
jz c19cf
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19cf
c19cf:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o19d0:
cmp byte [tape + r8], 0
jz c19d0
add r8, 608
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 617
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o19d0
c19d0:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19cb
c19cb:
sub r8, 1
and r8, 0xFFFF
o19d1:
cmp byte [tape + r8], 0
jz c19d1
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d1
c19d1:
add r8, 1
and r8, 0xFFFF
o19d2:
cmp byte [tape + r8], 0
jz c19d2
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o19d3:
cmp byte [tape + r8], 0
jz c19d3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d3
c19d3:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 11
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 616
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 618
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d2
c19d2:
add r8, 616
and r8, 0xFFFF
push 1
push 617
call ms
sub r8, 617
and r8, 0xFFFF
o19d4:
cmp byte [tape + r8], 0
jz c19d4
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d4
c19d4:
add r8, 1
and r8, 0xFFFF
o19d5:
cmp byte [tape + r8], 0
jz c19d5
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o19d6:
cmp byte [tape + r8], 0
jz c19d6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d6
c19d6:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d5
c19d5:
add r8, 617
and r8, 0xFFFF
push 1
push 618
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 616
call ms
sub r8, 616
and r8, 0xFFFF
o19d7:
cmp byte [tape + r8], 0
jz c19d7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d7
c19d7:
add r8, 1
and r8, 0xFFFF
o19d8:
cmp byte [tape + r8], 0
jz c19d8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
o19d9:
cmp byte [tape + r8], 0
jz c19d9
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 15
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d9
c19d9:
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 1
and r8, 0xFFFF
o19da:
cmp byte [tape + r8], 0
jz c19da
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19da
c19da:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o19db:
cmp byte [tape + r8], 0
jz c19db
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o19db
c19db:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o19dc:
cmp byte [tape + r8], 0
jz c19dc
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19dc
c19dc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o19dd:
cmp byte [tape + r8], 0
jz c19dd
add r8, 610
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 619
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o19dd
c19dd:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19d8
c19d8:
sub r8, 1
and r8, 0xFFFF
o19de:
cmp byte [tape + r8], 0
jz c19de
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19de
c19de:
add r8, 1
and r8, 0xFFFF
o19df:
cmp byte [tape + r8], 0
jz c19df
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o19e0:
cmp byte [tape + r8], 0
jz c19e0
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19e0
c19e0:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 9
call o
add byte [tape + r8], 11
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
o19e1:
cmp byte [tape + r8], 0
jz c19e1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 15
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19e1
c19e1:
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
o19e2:
cmp byte [tape + r8], 0
jz c19e2
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
o19e3:
cmp byte [tape + r8], 0
jz c19e3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19e3
c19e3:
sub r8, 3
and r8, 0xFFFF
push 1
push 3
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o19e4:
cmp byte [tape + r8], 0
jz c19e4
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o19e4
c19e4:
sub r8, 4
and r8, 0xFFFF
o19e5:
cmp byte [tape + r8], 0
jz c19e5
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19e5
c19e5:
add r8, 2
and r8, 0xFFFF
o19e6:
cmp byte [tape + r8], 0
jz c19e6
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19e6
c19e6:
sub r8, 2
and r8, 0xFFFF
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o19e7:
cmp byte [tape + r8], 0
jz c19e7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o19e7
c19e7:
sub r8, 4
and r8, 0xFFFF
o19e8:
cmp byte [tape + r8], 0
jz c19e8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19e8
c19e8:
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19e2
c19e2:
sub r8, 6
and r8, 0xFFFF
o19e9:
cmp byte [tape + r8], 0
jz c19e9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
o19ea:
cmp byte [tape + r8], 0
jz c19ea
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ea
c19ea:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
jmp o19e9
c19e9:
add r8, 1
and r8, 0xFFFF
o19eb:
cmp byte [tape + r8], 0
jz c19eb
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 2
call m
add r8, 2
and r8, 0xFFFF
call o
call z
jmp o19eb
c19eb:
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 3
call m
add r8, 3
and r8, 0xFFFF
call o
call z
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 16
o19ec:
cmp byte [tape + r8], 0
jz c19ec
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ec
c19ec:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
o19ed:
cmp byte [tape + r8], 0
jz c19ed
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 15
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ed
c19ed:
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o19ee:
cmp byte [tape + r8], 0
jz c19ee
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ee
c19ee:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o19ef:
cmp byte [tape + r8], 0
jz c19ef
add r8, 2
and r8, 0xFFFF
o19f0:
cmp byte [tape + r8], 0
jz c19f0
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19f0
c19f0:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o19f1:
cmp byte [tape + r8], 0
jz c19f1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o19f1
c19f1:
sub r8, 3
and r8, 0xFFFF
o19f2:
cmp byte [tape + r8], 0
jz c19f2
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19f2
c19f2:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ef
c19ef:
add r8, 2
and r8, 0xFFFF
o19f3:
cmp byte [tape + r8], 0
jz c19f3
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
call z
jmp o19f3
c19f3:
sub r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o19f4:
cmp byte [tape + r8], 0
jz c19f4
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19f4
c19f4:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o19f5:
cmp byte [tape + r8], 0
jz c19f5
add r8, 611
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 620
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o19f5
c19f5:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19df
c19df:
sub r8, 1
and r8, 0xFFFF
o19f6:
cmp byte [tape + r8], 0
jz c19f6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19f6
c19f6:
add r8, 1
and r8, 0xFFFF
o19f7:
cmp byte [tape + r8], 0
jz c19f7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
push 13
push 1
call m
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19f7
c19f7:
add r8, 619
and r8, 0xFFFF
push 1
push 620
call ms
sub r8, 620
and r8, 0xFFFF
o19f8:
cmp byte [tape + r8], 0
jz c19f8
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19f8
c19f8:
add r8, 1
and r8, 0xFFFF
o19f9:
cmp byte [tape + r8], 0
jz c19f9
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
o19fa:
cmp byte [tape + r8], 0
jz c19fa
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19fa
c19fa:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o19fb:
cmp byte [tape + r8], 0
jz c19fb
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19fb
c19fb:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 8
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
o19fc:
cmp byte [tape + r8], 0
jz c19fc
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 15
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19fc
c19fc:
sub r8, 15
and r8, 0xFFFF
push 1
push 15
call m
add r8, 8
and r8, 0xFFFF
o19fd:
cmp byte [tape + r8], 0
jz c19fd
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19fd
c19fd:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 36
and r8, 0xFFFF
call z
sub r8, 29
and r8, 0xFFFF
push 1
push 29
call m
sub r8, 7
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19f9
c19f9:
add r8, 618
and r8, 0xFFFF
push 1
push 619
call ms
sub r8, 619
and r8, 0xFFFF
o19fe:
cmp byte [tape + r8], 0
jz c19fe
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19fe
c19fe:
add r8, 1
and r8, 0xFFFF
o19ff:
cmp byte [tape + r8], 0
jz c19ff
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o1a00:
cmp byte [tape + r8], 0
jz c1a00
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 34
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a00
c1a00:
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1a01:
cmp byte [tape + r8], 0
jz c1a01
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a01
c1a01:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1a02:
cmp byte [tape + r8], 0
jz c1a02
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a02
c1a02:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a03:
cmp byte [tape + r8], 0
jz c1a03
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a03
c1a03:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a04:
cmp byte [tape + r8], 0
jz c1a04
add r8, 112
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 121
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a04
c1a04:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o19ff
c19ff:
sub r8, 1
and r8, 0xFFFF
o1a05:
cmp byte [tape + r8], 0
jz c1a05
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a05
c1a05:
add r8, 1
and r8, 0xFFFF
o1a06:
cmp byte [tape + r8], 0
jz c1a06
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 22
o1a07:
cmp byte [tape + r8], 0
jz c1a07
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a07
c1a07:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call o
call o
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 32
and r8, 0xFFFF
o1a08:
cmp byte [tape + r8], 0
jz c1a08
sub r8, 32
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 39
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a08
c1a08:
sub r8, 39
and r8, 0xFFFF
push 1
push 39
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1a09:
cmp byte [tape + r8], 0
jz c1a09
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a09
c1a09:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1a0a:
cmp byte [tape + r8], 0
jz c1a0a
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a0a
c1a0a:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a0b:
cmp byte [tape + r8], 0
jz c1a0b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a0b
c1a0b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a0c:
cmp byte [tape + r8], 0
jz c1a0c
add r8, 612
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 621
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a0c
c1a0c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a06
c1a06:
sub r8, 1
and r8, 0xFFFF
o1a0d:
cmp byte [tape + r8], 0
jz c1a0d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a0d
c1a0d:
add r8, 1
and r8, 0xFFFF
o1a0e:
cmp byte [tape + r8], 0
jz c1a0e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 10
and r8, 0xFFFF
o1a0f:
cmp byte [tape + r8], 0
jz c1a0f
sub r8, 10
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 17
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a0f
c1a0f:
sub r8, 17
and r8, 0xFFFF
push 1
push 17
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1a10:
cmp byte [tape + r8], 0
jz c1a10
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a10
c1a10:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1a11:
cmp byte [tape + r8], 0
jz c1a11
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a11
c1a11:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a12:
cmp byte [tape + r8], 0
jz c1a12
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a12
c1a12:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a13:
cmp byte [tape + r8], 0
jz c1a13
add r8, 613
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 622
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a13
c1a13:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a0e
c1a0e:
sub r8, 1
and r8, 0xFFFF
o1a14:
cmp byte [tape + r8], 0
jz c1a14
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a14
c1a14:
add r8, 1
and r8, 0xFFFF
o1a15:
cmp byte [tape + r8], 0
jz c1a15
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
o1a16:
cmp byte [tape + r8], 0
jz c1a16
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a16
c1a16:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 620
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 623
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a15
c1a15:
add r8, 621
and r8, 0xFFFF
push 1
push 622
call ms
sub r8, 622
and r8, 0xFFFF
o1a17:
cmp byte [tape + r8], 0
jz c1a17
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a17
c1a17:
add r8, 1
and r8, 0xFFFF
o1a18:
cmp byte [tape + r8], 0
jz c1a18
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
push 10
push 1
call m
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a18
c1a18:
add r8, 622
and r8, 0xFFFF
push 1
push 623
call ms
sub r8, 623
and r8, 0xFFFF
o1a19:
cmp byte [tape + r8], 0
jz c1a19
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a19
c1a19:
add r8, 1
and r8, 0xFFFF
o1a1a:
cmp byte [tape + r8], 0
jz c1a1a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 624
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 624
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a1a
c1a1a:
add r8, 620
and r8, 0xFFFF
push 1
push 621
call ms
sub r8, 621
and r8, 0xFFFF
o1a1b:
cmp byte [tape + r8], 0
jz c1a1b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a1b
c1a1b:
add r8, 1
and r8, 0xFFFF
o1a1c:
cmp byte [tape + r8], 0
jz c1a1c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
push 12
push 1
call m
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
sub byte [tape + r8], 1
call o
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a1c
c1a1c:
add r8, 623
and r8, 0xFFFF
push 1
push 624
call ms
sub r8, 624
and r8, 0xFFFF
o1a1d:
cmp byte [tape + r8], 0
jz c1a1d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a1d
c1a1d:
add r8, 1
and r8, 0xFFFF
o1a1e:
cmp byte [tape + r8], 0
jz c1a1e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
push 8
push 1
call m
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 10
call o
call o
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 11
o1a1f:
cmp byte [tape + r8], 0
jz c1a1f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a1f
c1a1f:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a20:
cmp byte [tape + r8], 0
jz c1a20
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a20
c1a20:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
o1a21:
cmp byte [tape + r8], 0
jz c1a21
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
o1a22:
cmp byte [tape + r8], 0
jz c1a22
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a22
c1a22:
sub r8, 3
and r8, 0xFFFF
push 1
push 3
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o1a23:
cmp byte [tape + r8], 0
jz c1a23
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o1a23
c1a23:
sub r8, 4
and r8, 0xFFFF
o1a24:
cmp byte [tape + r8], 0
jz c1a24
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a24
c1a24:
add r8, 2
and r8, 0xFFFF
o1a25:
cmp byte [tape + r8], 0
jz c1a25
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a25
c1a25:
sub r8, 2
and r8, 0xFFFF
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o1a26:
cmp byte [tape + r8], 0
jz c1a26
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o1a26
c1a26:
sub r8, 4
and r8, 0xFFFF
o1a27:
cmp byte [tape + r8], 0
jz c1a27
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a27
c1a27:
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a21
c1a21:
sub r8, 6
and r8, 0xFFFF
o1a28:
cmp byte [tape + r8], 0
jz c1a28
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
o1a29:
cmp byte [tape + r8], 0
jz c1a29
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a29
c1a29:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
jmp o1a28
c1a28:
add r8, 1
and r8, 0xFFFF
o1a2a:
cmp byte [tape + r8], 0
jz c1a2a
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 2
call m
add r8, 2
and r8, 0xFFFF
call o
call z
jmp o1a2a
c1a2a:
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 3
call m
add r8, 3
and r8, 0xFFFF
call o
call z
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 16
o1a2b:
cmp byte [tape + r8], 0
jz c1a2b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a2b
c1a2b:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 4
call o
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 21
and r8, 0xFFFF
o1a2c:
cmp byte [tape + r8], 0
jz c1a2c
sub r8, 21
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 28
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a2c
c1a2c:
sub r8, 28
and r8, 0xFFFF
push 1
push 28
call m
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 1
and r8, 0xFFFF
call z
add r8, 3
and r8, 0xFFFF
o1a2d:
cmp byte [tape + r8], 0
jz c1a2d
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
o1a2e:
cmp byte [tape + r8], 0
jz c1a2e
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a2e
c1a2e:
sub r8, 3
and r8, 0xFFFF
push 1
push 3
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o1a2f:
cmp byte [tape + r8], 0
jz c1a2f
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o1a2f
c1a2f:
sub r8, 4
and r8, 0xFFFF
o1a30:
cmp byte [tape + r8], 0
jz c1a30
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a30
c1a30:
add r8, 2
and r8, 0xFFFF
o1a31:
cmp byte [tape + r8], 0
jz c1a31
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a31
c1a31:
sub r8, 2
and r8, 0xFFFF
push 1
push 2
call m
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
o1a32:
cmp byte [tape + r8], 0
jz c1a32
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
call z
jmp o1a32
c1a32:
sub r8, 4
and r8, 0xFFFF
o1a33:
cmp byte [tape + r8], 0
jz c1a33
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a33
c1a33:
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a2d
c1a2d:
sub r8, 6
and r8, 0xFFFF
o1a34:
cmp byte [tape + r8], 0
jz c1a34
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
o1a35:
cmp byte [tape + r8], 0
jz c1a35
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a35
c1a35:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
jmp o1a34
c1a34:
add r8, 1
and r8, 0xFFFF
o1a36:
cmp byte [tape + r8], 0
jz c1a36
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 2
call m
add r8, 2
and r8, 0xFFFF
call o
call z
jmp o1a36
c1a36:
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 8
push 6
push 3
call m
add r8, 3
and r8, 0xFFFF
call o
call z
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
push 9
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o1a37:
cmp byte [tape + r8], 0
jz c1a37
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a37
c1a37:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a38:
cmp byte [tape + r8], 0
jz c1a38
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a38
c1a38:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1a39:
cmp byte [tape + r8], 0
jz c1a39
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a39
c1a39:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1a3a:
cmp byte [tape + r8], 0
jz c1a3a
add r8, 2
and r8, 0xFFFF
o1a3b:
cmp byte [tape + r8], 0
jz c1a3b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a3b
c1a3b:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1a3c:
cmp byte [tape + r8], 0
jz c1a3c
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1a3c
c1a3c:
sub r8, 3
and r8, 0xFFFF
o1a3d:
cmp byte [tape + r8], 0
jz c1a3d
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a3d
c1a3d:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a3a
c1a3a:
sub r8, 1
and r8, 0xFFFF
o1a3e:
cmp byte [tape + r8], 0
jz c1a3e
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a3e
c1a3e:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a3f:
cmp byte [tape + r8], 0
jz c1a3f
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a3f
c1a3f:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a40:
cmp byte [tape + r8], 0
jz c1a40
add r8, 616
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 625
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a40
c1a40:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a1e
c1a1e:
sub r8, 1
and r8, 0xFFFF
o1a41:
cmp byte [tape + r8], 0
jz c1a41
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a41
c1a41:
add r8, 1
and r8, 0xFFFF
o1a42:
cmp byte [tape + r8], 0
jz c1a42
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
o1a43:
cmp byte [tape + r8], 0
jz c1a43
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a43
c1a43:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 12
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 623
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 626
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a42
c1a42:
add r8, 624
and r8, 0xFFFF
push 1
push 625
call ms
sub r8, 625
and r8, 0xFFFF
o1a44:
cmp byte [tape + r8], 0
jz c1a44
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a44
c1a44:
add r8, 1
and r8, 0xFFFF
o1a45:
cmp byte [tape + r8], 0
jz c1a45
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a46:
cmp byte [tape + r8], 0
jz c1a46
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a46
c1a46:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1a47:
cmp byte [tape + r8], 0
jz c1a47
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a47
c1a47:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1a48:
cmp byte [tape + r8], 0
jz c1a48
add r8, 2
and r8, 0xFFFF
o1a49:
cmp byte [tape + r8], 0
jz c1a49
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a49
c1a49:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1a4a:
cmp byte [tape + r8], 0
jz c1a4a
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1a4a
c1a4a:
sub r8, 3
and r8, 0xFFFF
o1a4b:
cmp byte [tape + r8], 0
jz c1a4b
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a4b
c1a4b:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a48
c1a48:
sub r8, 1
and r8, 0xFFFF
o1a4c:
cmp byte [tape + r8], 0
jz c1a4c
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a4c
c1a4c:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a4d:
cmp byte [tape + r8], 0
jz c1a4d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a4d
c1a4d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a4e:
cmp byte [tape + r8], 0
jz c1a4e
add r8, 618
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 627
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a4e
c1a4e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a45
c1a45:
sub r8, 1
and r8, 0xFFFF
o1a4f:
cmp byte [tape + r8], 0
jz c1a4f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a4f
c1a4f:
add r8, 1
and r8, 0xFFFF
o1a50:
cmp byte [tape + r8], 0
jz c1a50
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
o1a51:
cmp byte [tape + r8], 0
jz c1a51
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a51
c1a51:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 625
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 628
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a50
c1a50:
add r8, 626
and r8, 0xFFFF
push 1
push 627
call ms
sub r8, 627
and r8, 0xFFFF
o1a52:
cmp byte [tape + r8], 0
jz c1a52
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a52
c1a52:
add r8, 1
and r8, 0xFFFF
o1a53:
cmp byte [tape + r8], 0
jz c1a53
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a54:
cmp byte [tape + r8], 0
jz c1a54
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a54
c1a54:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 1
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1a55:
cmp byte [tape + r8], 0
jz c1a55
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a55
c1a55:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1a56:
cmp byte [tape + r8], 0
jz c1a56
add r8, 2
and r8, 0xFFFF
o1a57:
cmp byte [tape + r8], 0
jz c1a57
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a57
c1a57:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1a58:
cmp byte [tape + r8], 0
jz c1a58
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1a58
c1a58:
sub r8, 3
and r8, 0xFFFF
o1a59:
cmp byte [tape + r8], 0
jz c1a59
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a59
c1a59:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a56
c1a56:
sub r8, 1
and r8, 0xFFFF
o1a5a:
cmp byte [tape + r8], 0
jz c1a5a
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a5a
c1a5a:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a5b:
cmp byte [tape + r8], 0
jz c1a5b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a5b
c1a5b:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a5c:
cmp byte [tape + r8], 0
jz c1a5c
add r8, 620
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 629
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a5c
c1a5c:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a53
c1a53:
sub r8, 1
and r8, 0xFFFF
o1a5d:
cmp byte [tape + r8], 0
jz c1a5d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a5d
c1a5d:
add r8, 1
and r8, 0xFFFF
o1a5e:
cmp byte [tape + r8], 0
jz c1a5e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 13
o1a5f:
cmp byte [tape + r8], 0
jz c1a5f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a5f
c1a5f:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 627
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 630
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a5e
c1a5e:
add r8, 628
and r8, 0xFFFF
push 1
push 629
call ms
sub r8, 629
and r8, 0xFFFF
o1a60:
cmp byte [tape + r8], 0
jz c1a60
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a60
c1a60:
add r8, 1
and r8, 0xFFFF
o1a61:
cmp byte [tape + r8], 0
jz c1a61
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a62:
cmp byte [tape + r8], 0
jz c1a62
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a62
c1a62:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 8
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1a63:
cmp byte [tape + r8], 0
jz c1a63
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a63
c1a63:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1a64:
cmp byte [tape + r8], 0
jz c1a64
add r8, 2
and r8, 0xFFFF
o1a65:
cmp byte [tape + r8], 0
jz c1a65
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a65
c1a65:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1a66:
cmp byte [tape + r8], 0
jz c1a66
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1a66
c1a66:
sub r8, 3
and r8, 0xFFFF
o1a67:
cmp byte [tape + r8], 0
jz c1a67
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a67
c1a67:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a64
c1a64:
sub r8, 1
and r8, 0xFFFF
o1a68:
cmp byte [tape + r8], 0
jz c1a68
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a68
c1a68:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a69:
cmp byte [tape + r8], 0
jz c1a69
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a69
c1a69:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a6a:
cmp byte [tape + r8], 0
jz c1a6a
add r8, 622
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 631
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a6a
c1a6a:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a61
c1a61:
sub r8, 1
and r8, 0xFFFF
o1a6b:
cmp byte [tape + r8], 0
jz c1a6b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a6b
c1a6b:
add r8, 1
and r8, 0xFFFF
o1a6c:
cmp byte [tape + r8], 0
jz c1a6c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o1a6d:
cmp byte [tape + r8], 0
jz c1a6d
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a6d
c1a6d:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 629
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 632
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a6c
c1a6c:
add r8, 630
and r8, 0xFFFF
push 1
push 631
call ms
sub r8, 631
and r8, 0xFFFF
o1a6e:
cmp byte [tape + r8], 0
jz c1a6e
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a6e
c1a6e:
add r8, 1
and r8, 0xFFFF
o1a6f:
cmp byte [tape + r8], 0
jz c1a6f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a70:
cmp byte [tape + r8], 0
jz c1a70
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a70
c1a70:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1a71:
cmp byte [tape + r8], 0
jz c1a71
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a71
c1a71:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1a72:
cmp byte [tape + r8], 0
jz c1a72
add r8, 2
and r8, 0xFFFF
o1a73:
cmp byte [tape + r8], 0
jz c1a73
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a73
c1a73:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1a74:
cmp byte [tape + r8], 0
jz c1a74
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1a74
c1a74:
sub r8, 3
and r8, 0xFFFF
o1a75:
cmp byte [tape + r8], 0
jz c1a75
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a75
c1a75:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a72
c1a72:
sub r8, 1
and r8, 0xFFFF
o1a76:
cmp byte [tape + r8], 0
jz c1a76
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a76
c1a76:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a77:
cmp byte [tape + r8], 0
jz c1a77
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a77
c1a77:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a78:
cmp byte [tape + r8], 0
jz c1a78
add r8, 624
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 633
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a78
c1a78:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a6f
c1a6f:
sub r8, 1
and r8, 0xFFFF
o1a79:
cmp byte [tape + r8], 0
jz c1a79
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a79
c1a79:
add r8, 1
and r8, 0xFFFF
o1a7a:
cmp byte [tape + r8], 0
jz c1a7a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1a7b:
cmp byte [tape + r8], 0
jz c1a7b
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a7b
c1a7b:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 631
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 634
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a7a
c1a7a:
add r8, 632
and r8, 0xFFFF
push 1
push 633
call ms
sub r8, 633
and r8, 0xFFFF
o1a7c:
cmp byte [tape + r8], 0
jz c1a7c
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a7c
c1a7c:
add r8, 1
and r8, 0xFFFF
o1a7d:
cmp byte [tape + r8], 0
jz c1a7d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a7e:
cmp byte [tape + r8], 0
jz c1a7e
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a7e
c1a7e:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 12
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 3
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1a7f:
cmp byte [tape + r8], 0
jz c1a7f
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a7f
c1a7f:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1a80:
cmp byte [tape + r8], 0
jz c1a80
add r8, 2
and r8, 0xFFFF
o1a81:
cmp byte [tape + r8], 0
jz c1a81
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a81
c1a81:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1a82:
cmp byte [tape + r8], 0
jz c1a82
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1a82
c1a82:
sub r8, 3
and r8, 0xFFFF
o1a83:
cmp byte [tape + r8], 0
jz c1a83
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a83
c1a83:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a80
c1a80:
sub r8, 1
and r8, 0xFFFF
o1a84:
cmp byte [tape + r8], 0
jz c1a84
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a84
c1a84:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a85:
cmp byte [tape + r8], 0
jz c1a85
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a85
c1a85:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a86:
cmp byte [tape + r8], 0
jz c1a86
add r8, 626
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 635
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a86
c1a86:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a7d
c1a7d:
sub r8, 1
and r8, 0xFFFF
o1a87:
cmp byte [tape + r8], 0
jz c1a87
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a87
c1a87:
add r8, 1
and r8, 0xFFFF
o1a88:
cmp byte [tape + r8], 0
jz c1a88
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o1a89:
cmp byte [tape + r8], 0
jz c1a89
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a89
c1a89:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 17
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 633
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 636
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a88
c1a88:
add r8, 634
and r8, 0xFFFF
push 1
push 635
call ms
sub r8, 635
and r8, 0xFFFF
o1a8a:
cmp byte [tape + r8], 0
jz c1a8a
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a8a
c1a8a:
add r8, 1
and r8, 0xFFFF
o1a8b:
cmp byte [tape + r8], 0
jz c1a8b
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a8c:
cmp byte [tape + r8], 0
jz c1a8c
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a8c
c1a8c:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 8
and r8, 0xFFFF
call z
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1a8d:
cmp byte [tape + r8], 0
jz c1a8d
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a8d
c1a8d:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1a8e:
cmp byte [tape + r8], 0
jz c1a8e
add r8, 2
and r8, 0xFFFF
o1a8f:
cmp byte [tape + r8], 0
jz c1a8f
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a8f
c1a8f:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1a90:
cmp byte [tape + r8], 0
jz c1a90
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1a90
c1a90:
sub r8, 3
and r8, 0xFFFF
o1a91:
cmp byte [tape + r8], 0
jz c1a91
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a91
c1a91:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a8e
c1a8e:
sub r8, 1
and r8, 0xFFFF
o1a92:
cmp byte [tape + r8], 0
jz c1a92
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1a92
c1a92:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1a93:
cmp byte [tape + r8], 0
jz c1a93
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a93
c1a93:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1a94:
cmp byte [tape + r8], 0
jz c1a94
add r8, 628
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 637
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1a94
c1a94:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a8b
c1a8b:
sub r8, 1
and r8, 0xFFFF
o1a95:
cmp byte [tape + r8], 0
jz c1a95
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a95
c1a95:
add r8, 1
and r8, 0xFFFF
o1a96:
cmp byte [tape + r8], 0
jz c1a96
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1a97:
cmp byte [tape + r8], 0
jz c1a97
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a97
c1a97:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 635
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 638
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a96
c1a96:
add r8, 636
and r8, 0xFFFF
push 1
push 637
call ms
sub r8, 637
and r8, 0xFFFF
o1a98:
cmp byte [tape + r8], 0
jz c1a98
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a98
c1a98:
add r8, 1
and r8, 0xFFFF
o1a99:
cmp byte [tape + r8], 0
jz c1a99
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1a9a:
cmp byte [tape + r8], 0
jz c1a9a
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a9a
c1a9a:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1a9b:
cmp byte [tape + r8], 0
jz c1a9b
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a9b
c1a9b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1a9c:
cmp byte [tape + r8], 0
jz c1a9c
add r8, 2
and r8, 0xFFFF
o1a9d:
cmp byte [tape + r8], 0
jz c1a9d
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a9d
c1a9d:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1a9e:
cmp byte [tape + r8], 0
jz c1a9e
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1a9e
c1a9e:
sub r8, 3
and r8, 0xFFFF
o1a9f:
cmp byte [tape + r8], 0
jz c1a9f
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a9f
c1a9f:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a9c
c1a9c:
sub r8, 1
and r8, 0xFFFF
o1aa0:
cmp byte [tape + r8], 0
jz c1aa0
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1aa0
c1aa0:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1aa1:
cmp byte [tape + r8], 0
jz c1aa1
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aa1
c1aa1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1aa2:
cmp byte [tape + r8], 0
jz c1aa2
add r8, 630
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 639
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1aa2
c1aa2:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1a99
c1a99:
sub r8, 1
and r8, 0xFFFF
o1aa3:
cmp byte [tape + r8], 0
jz c1aa3
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aa3
c1aa3:
add r8, 1
and r8, 0xFFFF
o1aa4:
cmp byte [tape + r8], 0
jz c1aa4
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 16
o1aa5:
cmp byte [tape + r8], 0
jz c1aa5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aa5
c1aa5:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 637
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 640
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aa4
c1aa4:
add r8, 638
and r8, 0xFFFF
push 1
push 639
call ms
sub r8, 639
and r8, 0xFFFF
o1aa6:
cmp byte [tape + r8], 0
jz c1aa6
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aa6
c1aa6:
add r8, 1
and r8, 0xFFFF
o1aa7:
cmp byte [tape + r8], 0
jz c1aa7
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 29
and r8, 0xFFFF
o1aa8:
cmp byte [tape + r8], 0
jz c1aa8
sub r8, 29
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aa8
c1aa8:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 6
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1aa9:
cmp byte [tape + r8], 0
jz c1aa9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aa9
c1aa9:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1aaa:
cmp byte [tape + r8], 0
jz c1aaa
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1aaa
c1aaa:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1aab:
cmp byte [tape + r8], 0
jz c1aab
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aab
c1aab:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1aac:
cmp byte [tape + r8], 0
jz c1aac
add r8, 632
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 641
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1aac
c1aac:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aa7
c1aa7:
sub r8, 1
and r8, 0xFFFF
o1aad:
cmp byte [tape + r8], 0
jz c1aad
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aad
c1aad:
add r8, 1
and r8, 0xFFFF
o1aae:
cmp byte [tape + r8], 0
jz c1aae
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o1aaf:
cmp byte [tape + r8], 0
jz c1aaf
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aaf
c1aaf:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add byte [tape + r8], 6
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aae
c1aae:
add r8, 640
and r8, 0xFFFF
push 1
push 641
call ms
sub r8, 1
and r8, 0xFFFF
push 1
push 640
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 638
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 636
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 634
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 632
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 630
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 628
call ms
sub r8, 2
and r8, 0xFFFF
push 1
push 626
call ms
sub r8, 626
and r8, 0xFFFF
o1ab0:
cmp byte [tape + r8], 0
jz c1ab0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab0
c1ab0:
add r8, 1
and r8, 0xFFFF
o1ab1:
cmp byte [tape + r8], 0
jz c1ab1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
push 9
push 1
call m
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 3
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab1
c1ab1:
add r8, 641
and r8, 0xFFFF
push 1
push 642
call ms
sub r8, 642
and r8, 0xFFFF
o1ab2:
cmp byte [tape + r8], 0
jz c1ab2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab2
c1ab2:
add r8, 1
and r8, 0xFFFF
o1ab3:
cmp byte [tape + r8], 0
jz c1ab3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o1ab4:
cmp byte [tape + r8], 0
jz c1ab4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab4
c1ab4:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
add r8, 6
and r8, 0xFFFF
call i
add r8, 105
and r8, 0xFFFF
call z
sub r8, 105
and r8, 0xFFFF
push 1
push 105
call m
call z
add r8, 105
and r8, 0xFFFF
o1ab5:
cmp byte [tape + r8], 0
jz c1ab5
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab5
c1ab5:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 5
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1ab6:
cmp byte [tape + r8], 0
jz c1ab6
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab6
c1ab6:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1ab7:
cmp byte [tape + r8], 0
jz c1ab7
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1ab7
c1ab7:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
o1ab8:
cmp byte [tape + r8], 0
jz c1ab8
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab8
c1ab8:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 9
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 7
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1ab9:
cmp byte [tape + r8], 0
jz c1ab9
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab9
c1ab9:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1aba:
cmp byte [tape + r8], 0
jz c1aba
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1aba
c1aba:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1abb:
cmp byte [tape + r8], 0
jz c1abb
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1abb
c1abb:
add r8, 8
and r8, 0xFFFF
o1abc:
cmp byte [tape + r8], 0
jz c1abc
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1abc
c1abc:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1abd:
cmp byte [tape + r8], 0
jz c1abd
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1abd
c1abd:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1abe:
cmp byte [tape + r8], 0
jz c1abe
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1abe
c1abe:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1abf:
cmp byte [tape + r8], 0
jz c1abf
add r8, 634
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 643
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1abf
c1abf:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ab3
c1ab3:
sub r8, 1
and r8, 0xFFFF
o1ac0:
cmp byte [tape + r8], 0
jz c1ac0
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ac0
c1ac0:
add r8, 1
and r8, 0xFFFF
o1ac1:
cmp byte [tape + r8], 0
jz c1ac1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add byte [tape + r8], 1
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ac1
c1ac1:
add r8, 642
and r8, 0xFFFF
push 1
push 643
call ms
sub r8, 643
and r8, 0xFFFF
o1ac2:
cmp byte [tape + r8], 0
jz c1ac2
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ac2
c1ac2:
add r8, 1
and r8, 0xFFFF
o1ac3:
cmp byte [tape + r8], 0
jz c1ac3
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o1ac4:
cmp byte [tape + r8], 0
jz c1ac4
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ac4
c1ac4:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 15
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1ac5:
cmp byte [tape + r8], 0
jz c1ac5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ac5
c1ac5:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1ac6:
cmp byte [tape + r8], 0
jz c1ac6
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1ac6
c1ac6:
add r8, 7
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1ac7:
cmp byte [tape + r8], 0
jz c1ac7
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ac7
c1ac7:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 6
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1ac8:
cmp byte [tape + r8], 0
jz c1ac8
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ac8
c1ac8:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1ac9:
cmp byte [tape + r8], 0
jz c1ac9
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1ac9
c1ac9:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1aca:
cmp byte [tape + r8], 0
jz c1aca
call z
add r8, 8
and r8, 0xFFFF
o1acb:
cmp byte [tape + r8], 0
jz c1acb
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1acb
c1acb:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1acc:
cmp byte [tape + r8], 0
jz c1acc
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1acc
c1acc:
jmp o1aca
c1aca:
add r8, 8
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
o1acd:
cmp byte [tape + r8], 0
jz c1acd
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1acd
c1acd:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1ace:
cmp byte [tape + r8], 0
jz c1ace
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ace
c1ace:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1acf:
cmp byte [tape + r8], 0
jz c1acf
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1acf
c1acf:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1ad0:
cmp byte [tape + r8], 0
jz c1ad0
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1ad0
c1ad0:
add r8, 8
and r8, 0xFFFF
o1ad1:
cmp byte [tape + r8], 0
jz c1ad1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ad1
c1ad1:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1ad2:
cmp byte [tape + r8], 0
jz c1ad2
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1ad2
c1ad2:
add r8, 8
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
o1ad3:
cmp byte [tape + r8], 0
jz c1ad3
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ad3
c1ad3:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 14
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 6
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1ad4:
cmp byte [tape + r8], 0
jz c1ad4
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ad4
c1ad4:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1ad5:
cmp byte [tape + r8], 0
jz c1ad5
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1ad5
c1ad5:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1ad6:
cmp byte [tape + r8], 0
jz c1ad6
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1ad6
c1ad6:
add r8, 8
and r8, 0xFFFF
o1ad7:
cmp byte [tape + r8], 0
jz c1ad7
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ad7
c1ad7:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1ad8:
cmp byte [tape + r8], 0
jz c1ad8
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1ad8
c1ad8:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1ad9:
cmp byte [tape + r8], 0
jz c1ad9
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ad9
c1ad9:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1ada:
cmp byte [tape + r8], 0
jz c1ada
add r8, 635
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 644
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1ada
c1ada:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ac3
c1ac3:
sub r8, 1
and r8, 0xFFFF
o1adb:
cmp byte [tape + r8], 0
jz c1adb
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1adb
c1adb:
add r8, 1
and r8, 0xFFFF
o1adc:
cmp byte [tape + r8], 0
jz c1adc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
call z
sub r8, 27
and r8, 0xFFFF
push 1
push 27
call m
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1adc
c1adc:
add r8, 643
and r8, 0xFFFF
push 1
push 644
call ms
sub r8, 644
and r8, 0xFFFF
o1add:
cmp byte [tape + r8], 0
jz c1add
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1add
c1add:
add r8, 1
and r8, 0xFFFF
o1ade:
cmp byte [tape + r8], 0
jz c1ade
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o1adf:
cmp byte [tape + r8], 0
jz c1adf
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1adf
c1adf:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
add r8, 1
and r8, 0xFFFF
o1ae0:
cmp byte [tape + r8], 0
jz c1ae0
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ae0
c1ae0:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1ae1:
cmp byte [tape + r8], 0
jz c1ae1
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1ae1
c1ae1:
add r8, 7
and r8, 0xFFFF
call z
add r8, 104
and r8, 0xFFFF
o1ae2:
cmp byte [tape + r8], 0
jz c1ae2
sub r8, 104
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ae2
c1ae2:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
add r8, 1
and r8, 0xFFFF
o1ae3:
cmp byte [tape + r8], 0
jz c1ae3
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ae3
c1ae3:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1ae4:
cmp byte [tape + r8], 0
jz c1ae4
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1ae4
c1ae4:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1ae5:
cmp byte [tape + r8], 0
jz c1ae5
call z
add r8, 8
and r8, 0xFFFF
o1ae6:
cmp byte [tape + r8], 0
jz c1ae6
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ae6
c1ae6:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1ae7:
cmp byte [tape + r8], 0
jz c1ae7
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1ae7
c1ae7:
jmp o1ae5
c1ae5:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1ae8:
cmp byte [tape + r8], 0
jz c1ae8
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ae8
c1ae8:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1ae9:
cmp byte [tape + r8], 0
jz c1ae9
add r8, 636
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 645
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1ae9
c1ae9:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1ade
c1ade:
add r8, 645
and r8, 0xFFFF
push 1
push 646
call ms
sub r8, 646
and r8, 0xFFFF
o1aea:
cmp byte [tape + r8], 0
jz c1aea
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aea
c1aea:
add r8, 1
and r8, 0xFFFF
o1aeb:
cmp byte [tape + r8], 0
jz c1aeb
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call i
add r8, 110
and r8, 0xFFFF
call z
sub r8, 110
and r8, 0xFFFF
push 1
push 110
call m
call z
add r8, 110
and r8, 0xFFFF
o1aec:
cmp byte [tape + r8], 0
jz c1aec
sub r8, 110
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aec
c1aec:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 10
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1aed:
cmp byte [tape + r8], 0
jz c1aed
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aed
c1aed:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1aee:
cmp byte [tape + r8], 0
jz c1aee
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1aee
c1aee:
add r8, 7
and r8, 0xFFFF
call z
add r8, 109
and r8, 0xFFFF
o1aef:
cmp byte [tape + r8], 0
jz c1aef
sub r8, 109
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 117
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aef
c1aef:
sub r8, 117
and r8, 0xFFFF
push 1
push 117
call m
call z
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 13
sub r8, 1
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1af0:
cmp byte [tape + r8], 0
jz c1af0
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1af0
c1af0:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1af1:
cmp byte [tape + r8], 0
jz c1af1
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1af1
c1af1:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1af2:
cmp byte [tape + r8], 0
jz c1af2
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1af2
c1af2:
add r8, 8
and r8, 0xFFFF
o1af3:
cmp byte [tape + r8], 0
jz c1af3
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1af3
c1af3:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1af4:
cmp byte [tape + r8], 0
jz c1af4
add r8, 7
and r8, 0xFFFF
call z
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1af4
c1af4:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1af5:
cmp byte [tape + r8], 0
jz c1af5
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1af5
c1af5:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1af6:
cmp byte [tape + r8], 0
jz c1af6
add r8, 637
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 646
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1af6
c1af6:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1aeb
c1aeb:
add r8, 644
and r8, 0xFFFF
push 1
push 645
call ms
sub r8, 645
and r8, 0xFFFF
o1af7:
cmp byte [tape + r8], 0
jz c1af7
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1af7
c1af7:
add r8, 1
and r8, 0xFFFF
o1af8:
cmp byte [tape + r8], 0
jz c1af8
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o1af9:
cmp byte [tape + r8], 0
jz c1af9
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 34
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1af9
c1af9:
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
call z
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
sub r8, 1
and r8, 0xFFFF
push 1
push 3
call ms
add r8, 1
and r8, 0xFFFF
o1afa:
cmp byte [tape + r8], 0
jz c1afa
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1afa
c1afa:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 2
and r8, 0xFFFF
o1afb:
cmp byte [tape + r8], 0
jz c1afb
add r8, 2
and r8, 0xFFFF
o1afc:
cmp byte [tape + r8], 0
jz c1afc
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1afc
c1afc:
sub r8, 4
and r8, 0xFFFF
push 1
push 4
call m
add byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
o1afd:
cmp byte [tape + r8], 0
jz c1afd
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 3
and r8, 0xFFFF
call z
jmp o1afd
c1afd:
sub r8, 3
and r8, 0xFFFF
o1afe:
cmp byte [tape + r8], 0
jz c1afe
add r8, 2
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1afe
c1afe:
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1afb
c1afb:
sub r8, 1
and r8, 0xFFFF
o1aff:
cmp byte [tape + r8], 0
jz c1aff
add r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1aff
c1aff:
add r8, 3
and r8, 0xFFFF
call z
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1b00:
cmp byte [tape + r8], 0
jz c1b00
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b00
c1b00:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1b01:
cmp byte [tape + r8], 0
jz c1b01
add r8, 633
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 642
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1b01
c1b01:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1af8
c1af8:
sub r8, 1
and r8, 0xFFFF
o1b02:
cmp byte [tape + r8], 0
jz c1b02
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b02
c1b02:
add r8, 1
and r8, 0xFFFF
o1b03:
cmp byte [tape + r8], 0
jz c1b03
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 27
and r8, 0xFFFF
o1b04:
cmp byte [tape + r8], 0
jz c1b04
sub r8, 27
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 34
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b04
c1b04:
sub r8, 34
and r8, 0xFFFF
push 1
push 34
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1b05:
cmp byte [tape + r8], 0
jz c1b05
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b05
c1b05:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1b06:
cmp byte [tape + r8], 0
jz c1b06
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1b06
c1b06:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1b07:
cmp byte [tape + r8], 0
jz c1b07
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b07
c1b07:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1b08:
cmp byte [tape + r8], 0
jz c1b08
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 16
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1b08
c1b08:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b03
c1b03:
sub r8, 1
and r8, 0xFFFF
o1b09:
cmp byte [tape + r8], 0
jz c1b09
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b09
c1b09:
add r8, 1
and r8, 0xFFFF
o1b0a:
cmp byte [tape + r8], 0
jz c1b0a
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
add r8, 105
and r8, 0xFFFF
o1b0b:
cmp byte [tape + r8], 0
jz c1b0b
sub r8, 105
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 112
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b0b
c1b0b:
sub r8, 112
and r8, 0xFFFF
push 1
push 112
call m
add r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 15
sub r8, 8
and r8, 0xFFFF
call z
add byte [tape + r8], 2
push 16
push 8
call m
add r8, 7
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1b0c:
cmp byte [tape + r8], 0
jz c1b0c
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b0c
c1b0c:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1b0d:
cmp byte [tape + r8], 0
jz c1b0d
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1b0d
c1b0d:
add r8, 7
and r8, 0xFFFF
call z
add r8, 28
and r8, 0xFFFF
o1b0e:
cmp byte [tape + r8], 0
jz c1b0e
sub r8, 28
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 36
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b0e
c1b0e:
sub r8, 36
and r8, 0xFFFF
push 1
push 36
call m
add r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 4
sub r8, 9
and r8, 0xFFFF
call z
add byte [tape + r8], 6
push 16
push 9
call m
add r8, 8
and r8, 0xFFFF
push 1
push 7
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1b0f:
cmp byte [tape + r8], 0
jz c1b0f
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b0f
c1b0f:
sub r8, 9
and r8, 0xFFFF
push 1
push 9
call m
add r8, 1
and r8, 0xFFFF
o1b10:
cmp byte [tape + r8], 0
jz c1b10
add r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1b10
c1b10:
add r8, 6
and r8, 0xFFFF
push 1
push 7
call ms
sub r8, 7
and r8, 0xFFFF
o1b11:
cmp byte [tape + r8], 0
jz c1b11
call z
add r8, 8
and r8, 0xFFFF
o1b12:
cmp byte [tape + r8], 0
jz c1b12
sub r8, 8
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b12
c1b12:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
sub r8, 1
and r8, 0xFFFF
o1b13:
cmp byte [tape + r8], 0
jz c1b13
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
call z
jmp o1b13
c1b13:
jmp o1b11
c1b11:
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1b14:
cmp byte [tape + r8], 0
jz c1b14
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b14
c1b14:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1b15:
cmp byte [tape + r8], 0
jz c1b15
add r8, 638
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 647
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1b15
c1b15:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b0a
c1b0a:
sub r8, 1
and r8, 0xFFFF
o1b16:
cmp byte [tape + r8], 0
jz c1b16
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b16
c1b16:
add r8, 1
and r8, 0xFFFF
o1b17:
cmp byte [tape + r8], 0
jz c1b17
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
o1b18:
cmp byte [tape + r8], 0
jz c1b18
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b18
c1b18:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o1b19:
cmp byte [tape + r8], 0
jz c1b19
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b19
c1b19:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 2
call o
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
add r8, 7
and r8, 0xFFFF
call z
add r8, 5
and r8, 0xFFFF
o1b1a:
cmp byte [tape + r8], 0
jz c1b1a
sub r8, 5
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 7
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 12
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b1a
c1b1a:
sub r8, 12
and r8, 0xFFFF
push 1
push 12
call m
call z
add r8, 8
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
push 1
push 6
call ms
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
o1b1b:
cmp byte [tape + r8], 0
jz c1b1b
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b1b
c1b1b:
sub r8, 8
and r8, 0xFFFF
push 1
push 8
call m
add r8, 1
and r8, 0xFFFF
o1b1c:
cmp byte [tape + r8], 0
jz c1b1c
add r8, 6
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 6
and r8, 0xFFFF
call z
jmp o1b1c
c1b1c:
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
o1b1d:
cmp byte [tape + r8], 0
jz c1b1d
sub r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 7
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b1d
c1b1d:
sub r8, 7
and r8, 0xFFFF
push 1
push 7
call m
add r8, 7
and r8, 0xFFFF
o1b1e:
cmp byte [tape + r8], 0
jz c1b1e
add r8, 639
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 648
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 9
and r8, 0xFFFF
call z
jmp o1b1e
c1b1e:
sub r8, 8
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b17
c1b17:
sub r8, 1
and r8, 0xFFFF
o1b1f:
cmp byte [tape + r8], 0
jz c1b1f
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b1f
c1b1f:
add r8, 1
and r8, 0xFFFF
o1b20:
cmp byte [tape + r8], 0
jz c1b20
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
o1b21:
cmp byte [tape + r8], 0
jz c1b21
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b21
c1b21:
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 11
call o
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o1b22:
cmp byte [tape + r8], 0
jz c1b22
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b22
c1b22:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o1b23:
cmp byte [tape + r8], 0
jz c1b23
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b23
c1b23:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 15
o1b24:
cmp byte [tape + r8], 0
jz c1b24
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b24
c1b24:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add byte [tape + r8], 3
call o
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 11
call o
add r8, 3
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 10
call o
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
add byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 16
o1b25:
cmp byte [tape + r8], 0
jz c1b25
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b25
c1b25:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 6
call o
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add r8, 647
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 649
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b20
c1b20:
add r8, 647
and r8, 0xFFFF
push 1
push 648
call ms
sub r8, 648
and r8, 0xFFFF
o1b26:
cmp byte [tape + r8], 0
jz c1b26
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b26
c1b26:
add r8, 1
and r8, 0xFFFF
o1b27:
cmp byte [tape + r8], 0
jz c1b27
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 17
o1b28:
cmp byte [tape + r8], 0
jz c1b28
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b28
c1b28:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add byte [tape + r8], 3
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 12
o1b29:
cmp byte [tape + r8], 0
jz c1b29
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b29
c1b29:
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 7
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 12
call o
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
call o
add byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 3
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
sub byte [tape + r8], 4
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 3
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 11
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub byte [tape + r8], 4
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 9
call o
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 5
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add r8, 4
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 21
o1b2a:
cmp byte [tape + r8], 0
jz c1b2a
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 4
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 6
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b2a
c1b2a:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 8
call o
add r8, 3
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub byte [tape + r8], 9
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 1
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 7
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 14
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 10
call o
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 14
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub r8, 1
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 9
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add byte [tape + r8], 3
call o
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 3
call o
sub byte [tape + r8], 10
call o
add byte [tape + r8], 6
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 4
and r8, 0xFFFF
call o
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 3
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 4
call o
sub byte [tape + r8], 2
call o
add byte [tape + r8], 6
call o
sub byte [tape + r8], 8
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 6
call o
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub byte [tape + r8], 1
call o
add byte [tape + r8], 5
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
call o
add r8, 4
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 3
call o
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
add r8, 2
and r8, 0xFFFF
call o
sub r8, 4
and r8, 0xFFFF
add byte [tape + r8], 14
call o
add r8, 5
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b27
c1b27:
add r8, 648
and r8, 0xFFFF
push 1
push 649
call ms
sub r8, 649
and r8, 0xFFFF
o1b2b:
cmp byte [tape + r8], 0
jz c1b2b
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b2b
c1b2b:
add r8, 1
and r8, 0xFFFF
o1b2c:
cmp byte [tape + r8], 0
jz c1b2c
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b2c
c1b2c:
add r8, 646
and r8, 0xFFFF
push 1
push 647
call ms
sub r8, 647
and r8, 0xFFFF
o1b2d:
cmp byte [tape + r8], 0
jz c1b2d
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b2d
c1b2d:
add r8, 1
and r8, 0xFFFF
o1b2e:
cmp byte [tape + r8], 0
jz c1b2e
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
add byte [tape + r8], 15
o1b2f:
cmp byte [tape + r8], 0
jz c1b2f
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 6
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 7
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 3
sub r8, 5
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b2f
c1b2f:
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 6
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
call o
sub byte [tape + r8], 7
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 5
call o
sub byte [tape + r8], 3
call o
add byte [tape + r8], 8
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 2
call o
sub r8, 2
and r8, 0xFFFF
add byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 4
call o
add byte [tape + r8], 3
call o
add r8, 1
and r8, 0xFFFF
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 2
call o
sub byte [tape + r8], 4
call o
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 5
call o
add r8, 1
and r8, 0xFFFF
add byte [tape + r8], 13
call o
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 8
call o
add byte [tape + r8], 5
call o
sub byte [tape + r8], 7
call o
add r8, 3
and r8, 0xFFFF
add byte [tape + r8], 1
call o
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
call z
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 10
call o
call z
add byte [tape + r8], 10
call o
call z
sub r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b2e
c1b2e:
sub r8, 1
and r8, 0xFFFF
o1b30:
cmp byte [tape + r8], 0
jz c1b30
add r8, 1
and r8, 0xFFFF
call z
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b30
c1b30:
add r8, 1
and r8, 0xFFFF
o1b31:
cmp byte [tape + r8], 0
jz c1b31
sub r8, 1
and r8, 0xFFFF
add byte [tape + r8], 1
sub r8, 1
and r8, 0xFFFF
sub byte [tape + r8], 1
add r8, 2
and r8, 0xFFFF
sub byte [tape + r8], 1
jmp o1b31
c1b31:
sub r8, 2
and r8, 0xFFFF
jmp o1
c1:
; exit syscall
mov rax, 60
xor rdi, rdi
syscall

; little assembly 'macros' to slim down code

; `,` in brainf*ck -- gets one character of user input
i:
xor rax, rax
xor rdi, rdi
lea rsi, byte [tape + r8]
mov rdx, 1
syscall
ret

; `.` in brainf*ck -- outputs the current byte in ascii
o:
mov rax, 1
mov rdi, 1
lea rsi, byte [tape + r8]
mov rdx, 1
syscall
ret

; idioms

; zero current byte
z:
mov byte [tape + r8], 0
ret

; multiply (positive output offset)
m:
pop r15
pop r12 ; output offset
add r12, r8
and r12, 0xFFFF
pop r13 ; amount
mov al, r13b
mul byte [tape + r8]
add byte [tape + r12], al
mov byte [tape + r8], 0
push r15
ret

; multiply (negative output offset)
ms:
pop r15
pop r12 ; output offset (abs negative)
mov r14, r8
sub r14, r12
and r14, 0xFFFF
pop r13 ; amount
mov al, r13b
mul byte [tape + r8]
add byte [tape + r14], al
mov byte [tape + r8], 0
push r15
ret

; move (positive output offset)
M:
pop r15
pop r12 ; output offset
add r12, r8
and r12, 0xFFFF
mov r13b, byte [tape + r8]
add byte [tape + r12], r13b
mov byte [tape + r8], 0
push r15
ret

; move (negative output offset)
Ms:
pop r15
pop r12 ; output offset (abs negative)
mov r14, r8
sub r14, r12
and r14, 0xFFFF
mov r13b, byte [tape + r8]
add byte [tape + r14], r13b
mov byte [tape + r8], 0
push r15
ret

